buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.2.3'
    }
}

dependencies {
	compile project(':service_common')
	runtime project(':service_common')
	
	// For compilation and deployement
	//compile("org.eclipse.birt.runtime:org.eclipse.birt.runtime:4.3.0") {
	//    exclude group: "org.eclipse.birt.runtime", module: "org.apache.poi"
	//}
}


// Add the reports
war {

	from('report') {
		include '*.rptdesign'
		into('report')
	}
}


task addReports(type: Zip, dependsOn: war, description: 'Add reports to birt war') {

	def applicationName = project.hasProperty('applicationName') ? project.getProperty('applicationName') : 'OGAM'

	baseName = "${applicationName}RG"
	archiveName = "${applicationName}RG.war"

	from zipTree("build/libs/birt.war")

	from ('report/') {
		include '*.rptdesign'
		into 'report' 
	}

	destinationDir file('build/libs') // directory where you want your archive to be placed in

}


// // Old version : Manually build the war file
task deploy(dependsOn: addReports, description: 'Deploy the war file to a local Tomcat server.') << {

	def tomcatHome = project.hasProperty('tomcatHome') ? project.getProperty('tomcatHome') : 'C:/Apache/tomcat-7'
	def applicationName = project.hasProperty('applicationName') ? project.getProperty('applicationName') : 'OGAM'

	delete "${tomcatHome}/webapps/${applicationName}RG"

	// Copy the war file
	copy {
		from "build/libs"
		into "${tomcatHome}/webapps/"
		include "${applicationName}RG.war"
		rename ("${applicationName}RG.war", "${applicationName}RG.war")
	}
	
	// Copy the config file
	copy {
		from "./config/"
		into "${tomcatHome}/conf/Catalina/localhost"
		include "${applicationName}RG.xml"
	}
}


apply plugin: 'com.bmuschko.cargo'

// New version : Use cargo to automatically deploy the war
// Usage : gradle cargoRedeployRemote -PtomcatHome='/var/lib/tomcat7' -PapplicationName='OGAM'
cargo {
    def tomcatHome = project.hasProperty('tomcatHome') ? project.getProperty('tomcatHome') : 'C:/Apache/tomcat-7'
    def applicationName = project.hasProperty('applicationName') ? project.getProperty('applicationName') : 'OGAM'
    
    containerId = 'tomcat7x'
    port = 8080
   
   
    deployable {
        file = file("build/libs/${applicationName}RG.war")
        context = "${applicationName}RG"
    }
    
    remote {
        hostname = 'localhost'
        username = 'admin'
        password = 'admin'
    }
}


// Import the ANT tasks and rename them
//ant.importBuild('build.xml') { antTargetName ->
//    'ant_' + antTargetName
//}


defaultTasks 'deploy'