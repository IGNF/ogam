<?php
/**
 * Licensed under EUPL v1.1 (see http://ec.europa.eu/idabc/eupl).
 *
 * Â© European Union, 2008-2012
 *
 * Reuse is authorised, provided the source is acknowledged. The reuse policy of the European Commission is implemented by a Decision of 12 December 2011.
 *
 * The general principle of reuse can be subject to conditions which may be specified in individual copyright notices.
 * Therefore users are advised to refer to the copyright notices of the individual websites maintained under Europa and of the individual documents.
 * Reuse is not applicable to documents subject to intellectual property rights of third parties.
 */


/**
 * View for the creation of a new data.
 * @package views
 */
?>
[
<?php
                    $patch = array(
                    		'xclass' => 'OgamDesktop.view.edition.Panel'
                    );

                    // Unique identifier of the data
                    $patch['dataId'] = $this->dataId;
                    // mode
                    $patch['mode'] = $this->mode;

                    // message
                    if (!empty($this->message)) {
                        $patch['message'] = $this->message;
                    }

                    // parentsLinks
                    if (!empty($this->ancestors)){
	                    $ancestors = array_reverse($this->ancestors);
	                    $parentsLinks = array();
	                    foreach ($ancestors as $ancestor) {
	                        $parentsLinks[] = $this->generateEditLink($ancestor);
	                    }
	                    $patch['parentsLinks'] = $parentsLinks;
                    }

                    // dataTitle
                    $patch['dataTitle'] =  $this->escape($this->tableFormat->label);

                    // disableDeleteButton
                    $childCount = 0;
                    foreach ($this->children as $childTable) {
                    	$childCount += count($childTable);
                    }
                    
                    $patch['disableDeleteButton'] =  ($childCount > 0);

                    // childrenConfigOptions
                    $childrenConfigOptions = array();
                    foreach ($this->childrenTableLabels as $childFormat => $childTableLabel) {
                        $configOptions = array();
                       // $configOptions['buttonAlign'] = 'center';
                        $configOptions['title'] = $this->escape($childTableLabel);

                        // Add the edit links for each child of the current item
                        $childrenLinks = array();
                        if(!empty($this->children)){
                            foreach ($this->children[$childFormat] as $child) {
                                $childrenLinks[] = $this->generateEditLink($child);
                            }
                            $configOptions['childrenLinks'] = $childrenLinks;
                        }
                        if (empty($childrenLinks)) {
                            $content = $this->translate('No %value% found.');
                            $configOptions['html'] = str_replace('%value%', strtolower($this->escape($this->childrenTableLabels[$childFormat])), $content);
                        }

                        // Add link to a new child
                        $configOptions['AddChildURL'] = $this->generateAddLink($this->data->tableFormat->schemaCode, $childFormat, $this->data->infoFields);

                        array_push($childrenConfigOptions, $configOptions);
                    }
                    $patch['childrenConfigOptions'] = $childrenConfigOptions;

                    echo json_encode($patch);
                ?>       
                ]  