# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value
    service_integration_url: "http://localhost:8080/OGAMIntegrationService/"
    service_harmonization_url: "http://localhost:8080/OGAMHarmonizationService/"
services:
    ogam.integration_service:
        class: OGAMBundle\Services\Integration
        arguments: ["%service_integration_url%"]
        calls:
          - [setLogger, ['@logger']]
    ogam.harmonization_service:
        class: OGAMBundle\Services\Harmonization
        arguments: ["%service_harmonization_url%"]
        calls:
          - [setLogger, ['@logger']]
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]


    # Service used to encode a challenge for the user login
    ogam.challenge_response_encoder:
        class: OGAMBundle\Services\ChallengeResponseEncoder
        arguments: 
            session: "@session"
            logger: "@logger"

    # Service used to read the application parameters from the database
    ogam.configuration_manager:
        class: OGAMBundle\Services\ConfigurationManager
        arguments:
            em: "@doctrine.orm.entity_manager"
            logger: "@logger"

    # Service used to read the breadcrumbs config
    ogam.breadcrumb_config_service:
        class: OGAMBundle\Services\BreadcrumbsConfigService

    # Listener for the user locale
    ogam.locale_listener:
        class: OGAMBundle\EventListener\LocaleListener
        arguments: ['%kernel.default_locale%']
        tags:
            - { name: kernel.event_subscriber }

    # Listener for the breadcrumb
    ogam.breadcumb_listener:
        class: OGAMBundle\EventListener\BreadcrumbListener
        arguments: ["@white_october_breadcrumbs", "@ogam.breadcrumb_config_service"]
        tags:
            - { name: kernel.event_subscriber }

    # Repositories not linked to a specific entity
    ogam.generic_repository:
        abstract: true
        class: OGAMBundle\Repository\GenericRepository
        arguments: ["@doctrine.orm.entity_manager"]

    ogam.repository.database.metadata:
        parent: ogam.generic_repository
        class: OGAMBundle\Repository\Database\MetadataRepository

    ogam.repository.database.postgresql:
        parent: ogam.generic_repository
        class: OGAMBundle\Repository\Database\PostgresqlRepository

    ogam.repository.mapping.scale:
        class: OGAMBundle\Repository\Mapping\ScaleRepository
        arguments: ["@doctrine.dbal.mapping_connection"]

    # Managers
    ogam.manager.generic:
        class: OGAMBundle\Manager\GenericManager
        arguments: ["@doctrine.orm.metadata_entity_manager","@doctrine.orm.raw_data_entity_manager","@ogam.generic_service","@ogam.configuration_manager"]
        calls:
          - [setLogger, ['@logger']]
    
    ogam.manager.query:
        class: OGAMBundle\Manager\QueryManager
        arguments: ["@doctrine.orm.metadata_entity_manager","@doctrine.orm.raw_data_entity_manager","@ogam.query_service","@ogam.configuration_manager"]
        calls:
          - [setLogger, ['@logger']]

    # Services
    ogam.generic_service:
        class: OGAMBundle\Services\GenericService
        arguments: ["@doctrine.orm.metadata_entity_manager","@ogam.configuration_manager", "@logger"]

    ogam.query_service:
        class: OGAMBundle\Services\QueryService
        arguments: ["@doctrine.orm.metadata_entity_manager","@ogam.configuration_manager", "@logger", "@=service('ogam.locale_listener').getLocale()", "@=service('security.token_storage').getToken().getUser()"]