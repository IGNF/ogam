<?php
namespace Ign\Bundle\OGAMBundle\Repository\RawData;

use Doctrine\Common\Collections\Collection;

/**
 * SubmissionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SubmissionRepository extends \Doctrine\ORM\EntityRepository {

	/**
	 * Get some information about the active submissions.
	 *
	 * @param String $providerId
	 *        	provider to get the submissions from (null for all providers)
	 * @return Array[Submission]
	 */
	public function getActiveSubmissions($providerId = null) {
		$dql = "SELECT s " . "FROM OGAMBundle:RawData\Submission s " . "WHERE s.step NOT IN ('CANCELLED', 'INIT') ";

		if ($providerId !== null) {
			$dql .= " AND s.provider = :provider ";
		}

		$dql .= "ORDER BY s.id DESC";

		$query = $this->getEntityManager()->createQuery($dql);

		if ($providerId !== null) {
			$query->setParameter('provider', $providerId);
		}

		return $query->getResult();
	}

	/**
	 * Get submissions for Harmonization.
	 * (lastest submissions per Providerdataset)
	 *
	 * @return Collection<Submission>
	 */
	public function getSubmissionsForHarmonization() {
		$dql = "SELECT s
FROM $this->_entityName s
WHERE s.id in
(
SELECT  max(s2.id) FROM $this->_entityName s2
WHERE s2.step NOT IN ('CANCELLED', 'INIT')
GROUP BY s2.dataset, s2.provider
)
ORDER BY s.id";

		$query = $this->getEntityManager()->createQuery($dql);

		return $query->getResult();
	}
}
