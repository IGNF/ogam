OpenLayers.Control.FeatureInfoControl=OpenLayers.Class(OpenLayers.Control,{popupTitle:"Feature information",handler:null,layerName:null,map:null,popup:null,type:OpenLayers.Control.TYPE_TOGGLE,initialize:function(b,a){OpenLayers.Control.prototype.initialize.apply(this,[a]);this.handler=new OpenLayers.Handler.FeatureInfo(this,{click:this.click,control:this})},displayPopup:function(a,b){if(b.fields){popup=new GeoExt.Popup({title:this.popupTitle,location:a,width:200,map:this.map,html:this.json2html(b.fields),maximizable:false,collapsible:false,unpinnable:false});popup.show()}},json2html:function(c,d){var a="";if(typeof d=="undefined"){d=0}if(typeof c=="object"&&c){a+="<ul>";for(var b in c){if(c.hasOwnProperty(b)){a+="<li>"+b+": ";a+=(typeof c[b]=="object"&&c[b]&&d<10)?Ext.util.Format.obj2ULtree(c[b],(d+1)):c[b];a+="</li>"}}a+="</ul>"}return a},activate:function(){if(!this.active){this.handler.activate()}return OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){return OpenLayers.Control.prototype.deactivate.apply(this,arguments)},destroy:function(){if(this.handler!==null){this.handler.destroy();this.handler=null}if(this.popup!==null){this.popup.destroy();this.popup=null}return OpenLayers.Control.prototype.destroy.apply(this,arguments)},CLASS_NAME:"OpenLayers.Control.FeatureInfoControl"});OpenLayers.Handler.FeatureInfo=OpenLayers.Class(OpenLayers.Handler,{alertErrorTitle:"Error :",alertRequestFailedMsg:"Sorry, the feature info request failed...",control:null,ll:null,handleResponse:function(b){if(b.status==500){Ext.Msg.alert(this.alertErrorTitle,this.alertRequestFailedMsg)}if(!b.responseText){Ext.Msg.alert(this.alertErrorTitle,this.alertRequestFailedMsg)}try{var a=Ext.decode(b.responseText);this.control.displayPopup(this.ll,a)}catch(c){Ext.Msg.alert(this.alertErrorTitle,this.alertRequestFailedMsg)}},click:function(a){var c=new OpenLayers.Pixel(a.xy.x,a.xy.y);this.ll=this.map.getLonLatFromPixel(c);var b=Genapp.base_url+"proxy/getfeatureinfo?SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&typename="+this.control.layerName+"&BBOX="+this.ll.lon+","+this.ll.lat+","+this.ll.lon+","+this.ll.lat;b=b+"&MAXFEATURES=1";OpenLayers.Request.GET({url:b,scope:this,callback:this.handleResponse})}});OpenLayers.Control.LocationInfoControl=OpenLayers.Class(OpenLayers.Control,{handler:null,map:null,type:OpenLayers.Control.TYPE_TOGGLE,initialize:function(b,a){OpenLayers.Control.prototype.initialize.apply(this,[a]);Genapp.eventManager.addEvents("getLocationInfo");this.handler=new OpenLayers.Handler.LocationInfo(this,{click:this.click,control:this})},getLocationInfo:function(a){Genapp.eventManager.fireEvent("getLocationInfo",a,this.map.id)},activate:function(){if(!this.active){this.handler.activate()}return OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){return OpenLayers.Control.prototype.deactivate.apply(this,arguments)},CLASS_NAME:"OpenLayers.Control.LocationInfoControl"});OpenLayers.Handler.LocationInfo=OpenLayers.Class(OpenLayers.Handler,{alertErrorTitle:"Error :",alertRequestFailedMsg:"Sorry, the feature info request failed...",control:null,handleResponse:function(b){if(b.status==500){Ext.Msg.alert(this.alertErrorTitle,this.alertRequestFailedMsg)}if(!b.responseText){Ext.Msg.alert(this.alertErrorTitle,this.alertRequestFailedMsg)}try{var a=Ext.decode(b.responseText);if(!Ext.isEmpty(a.data)){this.control.getLocationInfo(a)}}catch(c){Ext.Msg.alert(this.alertErrorTitle,this.alertRequestFailedMsg)}},click:function(a){var c=new OpenLayers.Pixel(a.xy.x,a.xy.y);var d=this.map.getLonLatFromPixel(c);var b=Genapp.base_url+"query/ajaxgetlocationinfo?LON="+d.lon+"&LAT="+d.lat;if(Genapp.map.featureinfo_maxfeatures!==0){b=b+"&MAXFEATURES="+Genapp.map.featureinfo_maxfeatures}OpenLayers.Request.GET({url:b,scope:this,callback:this.handleResponse})}});OpenLayers.Control.GetFeatureControl=OpenLayers.Class(OpenLayers.Control,{handler:null,layerName:null,map:null,type:OpenLayers.Control.TYPE_TOGGLE,initialize:function(b,a){OpenLayers.Control.prototype.initialize.apply(this,[a]);Genapp.eventManager.addEvents("getFeature");this.handler=new OpenLayers.Handler.GetFeature(this,{click:this.click,control:this})},getFeature:function(a){Genapp.eventManager.fireEvent("getFeature",a,this.map.id)},activate:function(){if(!this.active){this.handler.activate()}return OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){return OpenLayers.Control.prototype.deactivate.apply(this,arguments)},destroy:function(){if(this.handler!==null){this.handler.destroy();this.handler=null}return OpenLayers.Control.prototype.destroy.apply(this,arguments)},CLASS_NAME:"OpenLayers.Control.GetFeatureControl"});OpenLayers.Handler.GetFeature=OpenLayers.Class(OpenLayers.Handler,{alertErrorTitle:"Error :",alertRequestFailedMsg:"Sorry, the feature info request failed...",control:null,gmlFormat:new OpenLayers.Format.GML(),handleResponse:function(a){if(a.status==500){Ext.Msg.alert(this.alertErrorTitle,this.alertRequestFailedMsg)}if(!a.responseText){Ext.Msg.alert(this.alertErrorTitle,this.alertRequestFailedMsg)}try{var b=this.gmlFormat.read(a.responseText);this.control.getFeature(b)}catch(c){Ext.Msg.alert(this.alertErrorTitle,this.alertRequestFailedMsg)}},click:function(a){var c=new OpenLayers.Pixel(a.xy.x,a.xy.y);var d=this.map.getLonLatFromPixel(c);var b=Genapp.base_url+"proxy/getwfs?SERVICE=WFS&VERSION=1.0.0&REQUEST=GetFeature&typename="+this.control.layerName+"&BBOX="+d.lon+","+d.lat+","+d.lon+","+d.lat;b=b+"&MAXFEATURES=1";OpenLayers.Request.GET({url:b,scope:this,callback:this.handleResponse})}});OpenLayers.Control.ZoomToFeatures=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_BUTTON,layer:null,maxZoomLevel:null,ratio:1,autoActivate:false,initialize:function(b,a){OpenLayers.Control.prototype.initialize.apply(this,[a]);if(this.autoActivate){if(!b.features.length){this.deactivate()}else{this.activate()}b.events.register("featuresadded",this,this.activate);b.events.register("featuresremoved",this,this.onFeaturesRemoved)}this.layer=b},setMap:function(a){OpenLayers.Control.prototype.setMap.apply(this,arguments);if(!this.maxZoomLevel){this.maxZoomLevel=a.numZoomLevels-1}if(this.autoActivate){a.events.register("moveend",this,this.onMapMoved)}},onFeaturesRemoved:function(){if(!this.layer.features.length){this.deactivate()}},onMapMoved:function(){if(this.active){return}var a=this.layer;if(a.features&&a.features.length){this.activate()}},trigger:function(){if(!this.active||!this.map){return}var h=this.map;var e=this.layer.features;var d=0;while(!e[d].geometry){d++}var g=e[d].geometry.getBounds();for(var b=d+1;b<e.length;b++){var c=e[b].geometry;if(c){g.extend(c.getBounds())}}g=g.scale(this.ratio);if((g.getWidth()===0)&&(g.getHeight()===0)){var f=this.maxZoomLevel}else{var a=h.getZoomForExtent(g);var f=(a>this.maxZoomLevel)?this.maxZoomLevel:a}h.setCenter(g.getCenterLonLat(),f);if(this.autoActivate){this.deactivate()}},destroy:function(){if(this.autoActivate){this.layer.events.unregister("featuresadded",this,this.activate);this.layer.events.unregister("featuresremoved",this,this.onFeaturesRemoved)}this.layer=null;if(this.map&&this.autoActivate){this.map.events.unregister("moveend",this,this.onMapMoved)}OpenLayers.Control.prototype.destroy.apply(this,[])},CLASS_NAME:"OpenLayers.Control.ZoomToFeatures"});Ext.namespace("Ext.ux.form");Ext.ux.form.BasicCheckbox=Ext.extend(Ext.form.Field,{focusClass:undefined,fieldClass:"x-form-field",checked:false,mode:"compat",themedCompat:false,defaultAutoCreate:{tag:"input",type:"checkbox",autocomplete:"off"},boxLabel:undefined,inputValue:undefined,markEl:"wrap",mustCheck:false,mustCheckText:"This field is required",compatConfig:{enabled:{no:"checkbox_off",on:"checkbox_on"},disabled:{no:"checkbox_off_dled",on:"checkbox_on_dled"},width:14,height:16},switchConfig:{enabled:{"0":"checkbox_off","1":"checkbox_on"},disabled:{"0":"checkbox_off_dled","1":"checkbox_on_dled"},width:14,height:16},cycledConfig:{enabled:{"0":"flag_blue","1":"flag_green","2":"flag_orange","3":"flag_pink","4":"flag_purple","5":"flag_red","6":"flag_yellow"},disabled:{"0":"flag_grey","1":"flag_grey","2":"flag_grey","3":"flag_grey","4":"flag_grey","5":"flag_grey","6":"flag_grey"},width:16,height:16},originalValue:undefined,protectedValue:undefined,initComponent:function(){Ext.ux.form.BasicCheckbox.superclass.initComponent.call(this);this.addEvents("check","click")},onResize:function(){Ext.ux.form.BasicCheckbox.superclass.onResize.apply(this,arguments);if(!this.boxLabel){this.el.alignTo(this.wrap,"c-c")}},initEvents:function(){Ext.ux.form.BasicCheckbox.superclass.initEvents.call(this);if(this.mode!=="compat"||this.themedCompat){this.mon(this.el,{click:this.onClick,change:this.onChange,mouseenter:this.onMouseEnter,mouseleave:this.onMouseLeave,mousedown:this.onMouseDown,mouseup:this.onMouseUp,scope:this})}else{this.mon(this.el,{click:this.onClick,change:this.onChange,scope:this})}},getResizeEl:function(){return this.wrap},getPositionEl:function(){return this.wrap},alignErrorIcon:function(){this.errorIcon.alignTo(this.wrap,"tl-tr",[2,0])},markInvalid:function(a){Ext.ux.form.BasicCheckbox.superclass.markInvalid.call(this,a)},clearInvalid:function(){Ext.ux.form.BasicCheckbox.superclass.clearInvalid.call(this)},validateValue:function(b){var a=(this.rendered?this.el.dom.value:this.inputValue);var f=((this.rendered?this.el.dom.disabled:this.disabled)?"disabled":"enabled");if(this.mode==="compat"&&this.mustCheck&&!b){this.markInvalid(this.mustCheckText);return false}if(this.mode!=="compat"){if(a!==undefined&&a!==null&&this[this.mode+"Config"][f][a]===undefined){this.markInvalid();return false}}if(this.vtype){var e=Ext.form.VTypes;if(!e[this.vtype](b,this)){this.markInvalid(this.vtypeText||e[this.vtype+"Text"]);return false}}if(typeof this.validator==="function"){var c=this.validator(b);if(c!==true){this.markInvalid(c);return false}}if(this.regex&&!this.regex.test(b)){this.markInvalid(this.regexText);return false}return true},onRender:function(b,a){Ext.ux.form.BasicCheckbox.superclass.onRender.call(this,b,a);var c=this[this.mode+"Config"].width;var d=this[this.mode+"Config"].height;this.protectedValue=this.inputValue;if(this.protectedValue!==undefined){this.el.dom.value=this.protectedValue}else{this.setNextValue()}if(this.mode!=="compat"||this.themedCompat){this.el.setOpacity(0)}this.innerWrap=this.el.wrap({cls:"x-sm-form-check-innerwrap"});this.innerWrap.setStyle({position:"relative",display:"inline"});this.wrap=this.innerWrap.wrap({cls:"x-form-check-wrap"});this.vel=this.innerWrap.createChild({tag:"div",cls:"x-sm-form-check"},this.el.dom);if(this.mode!=="compat"||this.themedCompat){this.vel.setSize(c,d);this.el.setStyle({position:"absolute"});this.el.setTop(Math.round((d-16)/2));this.el.setLeft(Math.round((c-14)/2))}if(this.boxLabel){this.wrap.createChild({tag:"label",htmlFor:this.el.id,cls:"x-form-cb-label",html:this.boxLabel})}if(this.mode==="compat"){this.checked=(this.checked?true:(this.el.dom.checked?true:false));this.setValue(this.checked)}else{this.el.dom.checked=true;this.el.dom.defaultChecked=true;this.setValue(this.protectedValue)}},manageActiveClass:function(){if(this.rendered&&(this.mode!=="compat"||this.themedCompat)){var b=(this.mode==="compat"?this.protectedValue:(this.rendered?this.el.dom.value:this.protectedValue));var f=((this.rendered?this.el.dom.disabled:this.disabled)?"disabled":"enabled");var g=this[this.mode+"Config"][f][b];var a;var e;for(e in this[this.mode+"Config"][f]){a=e;break}if(g===undefined){g=this[this.mode+"Config"][f][a]}if(this.previousClass!==undefined){this.vel.removeClass(this.previousClass)}this.previousClass=g;this.vel.addClass(g)}},setNextValue:function(){var b=(this.mode==="compat"?this.protectedValue:(this.rendered?this.el.dom.value:this.protectedValue));var e=((this.rendered?this.el.dom.disabled:this.disabled)?"disabled":"enabled");var f=false;var a=null;var c;this.protectedValue=null;for(c in this[this.mode+"Config"][e]){if(a===null){a=c}if(b===undefined){break}if(f&&this.protectedValue===null){this.protectedValue=c}if(c===b){f=true}}if(this.protectedValue===null){this.protectedValue=a}if(this.mode!=="compat"){this.inputValue=this.protectedValue}if(this.rendered&&this.inputValue!==undefined){this.el.dom.value=this.inputValue}},onDestroy:function(){if(this.wrap){this.wrap.remove()}Ext.ux.form.BasicCheckbox.superclass.onDestroy.call(this)},initValue:function(){this.originalValue=this.inputValue;if(this.mode==="compat"){this.originalValue=this.checked}},getRawValue:function(){if(this.mode==="compat"){if(this.rendered){return this.el.dom.checked}else{return this.checked}}var a=this.rendered?this.el.getValue():Ext.value(this.value,"");return a},getValue:function(){var a=false;if(this.mode==="compat"){if(this.rendered){a=this.el.dom.checked}}else{a=this.protectedValue}return a},onClick:function(){if(this.mode==="compat"){if(this.el.dom.checked!==this.checked){this.setNextValue();this.checked=this.el.dom.checked}}else{this.setNextValue();this.el.dom.checked=true;this.el.dom.defaultChecked=true}this.manageActiveClass();this.validate();this.fireEvent("check",this,this.checked,this.inputValue);this.fireEvent("click",this,this.checked,this.inputValue)},onChange:function(){if(this.mode==="compat"){if(this.el.dom.checked!==this.checked){this.setNextValue();this.checked=this.el.dom.checked}}else{this.inputValue=this.el.dom.value;this.protectedValue=this.inputValue;this.el.dom.checked=true;this.el.dom.defaultChecked=true}this.manageActiveClass();this.validate();this.fireEvent("check",this,this.checked,this.inputValue);this.fireEvent("change",this,this.checked,this.inputValue)},setValue:function(b){var a;if(this.mode==="compat"){this.checked=(b===true||b==="true"||b==="1"||String(b).toLowerCase()==="on");if(this.rendered){this.el.dom.checked=this.checked;this.el.dom.defaultChecked=this.checked}this.protectedValue=(this.checked?"on":"no")}else{var c=((this.rendered?this.el.dom.disabled:this.disabled)?"disabled":"enabled");this.checked=true;if(this[this.mode+"Config"][c][b]!==undefined){this.protectedValue=b}else{for(a in this[this.mode+"Config"][c]){this.protectedValue=a;break}}this.inputValue=this.protectedValue;if(this.rendered&&this.inputValue!==undefined){this.el.dom.value=this.inputValue}}this.manageActiveClass();this.validate();this.fireEvent("check",this,this.checked);return this},disable:function(){Ext.ux.form.BasicCheckbox.superclass.disable.call(this);this.manageActiveClass()},enable:function(){Ext.ux.form.BasicCheckbox.superclass.enable.call(this);this.manageActiveClass()},onMouseEnter:function(){this.wrap.addClass("x-sm-form-check-over")},onMouseLeave:function(){this.wrap.removeClass("x-sm-form-check-over")},onMouseDown:function(){this.wrap.addClass("x-sm-form-check-down")},onMouseUp:function(){this.wrap.removeClass("x-sm-form-check-down")},onFocus:function(){Ext.ux.form.BasicCheckbox.superclass.onFocus.call(this);this.wrap.addClass("x-sm-form-check-focus")},onBlur:function(){Ext.ux.form.BasicCheckbox.superclass.onBlur.call(this);this.wrap.removeClass("x-sm-form-check-focus")}});Ext.form.Checkbox=Ext.ux.form.BasicCheckbox;Ext.reg("checkbox",Ext.form.Checkbox);Ext.ux.form.Checkbox=Ext.extend(Ext.ux.form.BasicCheckbox,{mode:"switch"});Ext.reg("switch_checkbox",Ext.ux.form.Checkbox);Ext.ux.form.CycleCheckbox=Ext.extend(Ext.ux.form.BasicCheckbox,{mode:"cycled"});Ext.reg("cycle_checkbox",Ext.ux.form.CycleCheckbox);Ext.override(Ext.form.Field,{markEl:"el",markInvalid:function(c){if(!this.rendered||this.preventMark){return}c=c||this.invalidText;var a=this.getMessageHandler();if(a){a.mark(this,c)}else{if(this.msgTarget){this[this.markEl].addClass(this.invalidClass);var b=Ext.getDom(this.msgTarget);if(b){b.innerHTML=c;b.style.display=this.msgDisplay}}}this.fireEvent("invalid",this,c)},clearInvalid:function(){if(!this.rendered||this.preventMark){return}var a=this.getMessageHandler();if(a){a.clear(this)}else{if(this.msgTarget){this[this.markEl].removeClass(this.invalidClass);var b=Ext.getDom(this.msgTarget);if(b){b.innerHTML="";b.style.display="none"}}}this.fireEvent("valid",this)}});Ext.apply(Ext.form.MessageTargets,{qtip:{mark:function(a,c){var b=a[(a.markEl?a.markEl:"el")];b.addClass(a.invalidClass);b.dom.qtip=c;b.dom.qclass="x-form-invalid-tip";if(Ext.QuickTips){Ext.QuickTips.enable()}},clear:function(a){var b=a[(a.markEl?a.markEl:"el")];b.removeClass(a.invalidClass);b.dom.qtip=""}},title:{mark:function(a,c){var b=a[(a.markEl?a.markEl:"el")];b.addClass(a.invalidClass);b.dom.title=c},clear:function(a){a[a.markEl].dom.title=""}},under:{mark:function(b,d){var c=b[(b.markEl?b.markEl:"el")],e=b.errorEl;c.addClass(b.invalidClass);if(!e){var a=b.getErrorCt();if(!a){c.dom.title=d;return}e=b.errorEl=a.createChild({cls:"x-form-invalid-msg"});e.setWidth(a.getWidth(true)-20)}e.update(d);Ext.form.Field.msgFx[b.msgFx].show(e,b)},clear:function(a){var b=a[(a.markEl?a.markEl:"el")],c=a.errorEl;b.removeClass(a.invalidClass);if(c){Ext.form.Field.msgFx[a.msgFx].hide(c,a)}else{b.dom.title=""}}},side:{mark:function(c,e){var d=c[(c.markEl?c.markEl:"el")],b=c.errorIcon;d.addClass(c.invalidClass);if(!b){var a=c.getErrorCt();if(!a){d.dom.title=e;return}b=c.errorIcon=a.createChild({cls:"x-form-invalid-icon"})}c.alignErrorIcon();b.dom.qtip=e;b.dom.qclass="x-form-invalid-tip";b.show();c.on("resize",c.alignErrorIcon,c)},clear:function(b){var c=b[(b.markEl?b.markEl:"el")],a=b.errorIcon;c.removeClass(b.invalidClass);if(a){a.dom.qtip="";a.hide();b.un("resize",b.alignErrorIcon,b)}else{c.dom.title=""}}}});(function(){function b(d){var c=Array.prototype.slice.call(arguments,1);return d.replace(/\{(\d+)\}/g,function(e,f){return c[f]})}var a=Date.formatCodeToRegex;Date.createParser=function(){var c=["var dt, y, m, d, h, i, s, ms, o, z, zz, u, v,","def = Date.defaults,","results = String(input).match(Date.parseRegexes[{0}]);","if(results){","{1}","if(u != null){","v = new Date(u * 1000);","}else{","dt = (new Date()).clearTime();","y = y >= 0? y : Ext.num(def.y, dt.getFullYear());","m = m >= 0? m : Ext.num(def.m - 1, dt.getMonth());","d = d || Ext.num(def.d, dt.getDate());","h  = h || Ext.num(def.h, dt.getHours());","i  = i || Ext.num(def.i, dt.getMinutes());","s  = s || Ext.num(def.s, dt.getSeconds());","ms = ms || Ext.num(def.ms, dt.getMilliseconds());","if(z >= 0 && y >= 0){","v = new Date(y, 0, 1, h, i, s, ms);","v = !strict? v : (strict === true && (z <= 364 || (v.isLeapYear() && z <= 365))? v.add(Date.DAY, z) : null);","}else if(strict === true && !Date.isValid(y, m + 1, d, h, i, s, ms)){","v = null;","}else{","v = new Date(y, m, d, h, i, s, ms);","}","}","}","if(v){","v.setFullYear(y);","if(zz != null){","v = v.add(Date.SECOND, -v.getTimezoneOffset() * 60 - zz);","}else if(o){","v = v.add(Date.MINUTE, -v.getTimezoneOffset() + (sn == '+'? -1 : 1) * (hr * 60 + mn));","}","}","return v;"].join("\n");return function(m){var e=Date.parseRegexes.length,n=1,f=[],l=[],k=false,d="",h;for(h=0;h<m.length;++h){d=m.charAt(h);if(!k&&d==="\\"){k=true}else{if(k){k=false;l.push(String.escape(d))}else{var g=a(d,n);n+=g.g;l.push(g.s);if(g.g&&g.c){f.push(g.c)}}}}Date.parseRegexes[e]=new RegExp("^"+l.join("")+"$","i");Date.parseFunctions[m]=new Function("input","strict",b(c,e,f.join("")))}}();Date.formatCodes.f="String.leftPad(this.getFullYear(), 4, '0')";Date.parseCodes.f=Date.parseCodes.Y}());Ext.DatePicker.prototype.onMonthClick=function(f,b){f.stopEvent();var c=new Ext.Element(b),a;if(c.is("button.x-date-mp-cancel")){this.hideMonthPicker()}else{if(c.is("button.x-date-mp-ok")){var g=new Date(this.mpSelYear,this.mpSelMonth,(this.activeDate||this.value).getDate());if(g.getMonth()!==this.mpSelMonth){g=new Date(this.mpSelYear,this.mpSelMonth,1).getLastDateOfMonth()}g.setFullYear(this.mpSelYear);this.update(g);this.hideMonthPicker()}else{if(a=c.up("td.x-date-mp-month",2)){this.mpMonths.removeClass("x-date-mp-sel");a.addClass("x-date-mp-sel");this.mpSelMonth=a.dom.xmonth}else{if(a=c.up("td.x-date-mp-year",2)){this.mpYears.removeClass("x-date-mp-sel");a.addClass("x-date-mp-sel");this.mpSelYear=a.dom.xyear}else{if(c.is("a.x-date-mp-prev")){this.updateMPYear(this.mpyear-10)}else{if(c.is("a.x-date-mp-next")){this.updateMPYear(this.mpyear+10)}}}}}}};Ext.DatePicker.prototype.onMonthDblClick=function(f,c){f.stopEvent();var d=new Ext.Element(c),b;var a=null;if(b=d.up("td.x-date-mp-month",2)){a=new Date(this.mpSelYear,b.dom.xmonth,(this.activeDate||this.value).getDate());a.setFullYear(this.mpSelYear);this.update(a);this.hideMonthPicker()}else{if(b=d.up("td.x-date-mp-year",2)){a=new Date(b.dom.xyear,this.mpSelMonth,(this.activeDate||this.value).getDate());a.setFullYear(b.dom.xyear);this.update(a);this.hideMonthPicker()}}};Ext.DatePicker.prototype.update=function(H,B){if(this.rendered){var a=this.activeDate,p=this.isVisible();this.activeDate=H;if(!B&&a&&this.el){var o=H.getTime();if(a.getMonth()===H.getMonth()&&a.getFullYear()===H.getFullYear()){this.cells.removeClass("x-date-selected");this.cells.each(function(d){if(d.dom.firstChild.dateValue===o){d.addClass("x-date-selected");if(p&&!this.cancelFocus){Ext.fly(d.dom.firstChild).focus(50)}return false}},this);return}}var k=H.getDaysInMonth(),q=H.getFirstDateOfMonth(),f=q.getDay()-this.startDay;if(f<0){f+=7}k+=f;var C=H.add("mo",-1),g=C.getDaysInMonth()-f,e=this.cells.elements,r=this.textNodes,z=86400000,E=(new Date(C.getFullYear(),C.getMonth(),g)).clearTime(),D=new Date().clearTime().getTime(),v=H.clearTime(true).getTime(),u=this.minDate?this.minDate.clearTime(true):Number.NEGATIVE_INFINITY,y=this.maxDate?this.maxDate.clearTime(true):Number.POSITIVE_INFINITY,G=this.disabledDatesRE,s=this.disabledDatesText,J=this.disabledDays?this.disabledDays.join(""):false,F=this.disabledDaysText,A=this.format;E.setFullYear(C.getFullYear());if(this.showToday){var m=new Date().clearTime(),c=(m<u||m>y||(G&&A&&G.test(m.dateFormat(A)))||(J&&J.indexOf(m.getDay())!==-1));if(!this.disabled){this.todayBtn.setDisabled(c);this.todayKeyListener[c?"disable":"enable"]()}}var l=function(L,d){d.title="";var w=E.getTime();d.firstChild.dateValue=w;if(w===D){d.className+=" x-date-today";d.title=L.todayText}if(w===v){d.className+=" x-date-selected";if(p){Ext.fly(d.firstChild).focus(50)}}if(w<u){d.className=" x-date-disabled";d.title=L.minText;return}if(w>y){d.className=" x-date-disabled";d.title=L.maxText;return}if(J){if(J.indexOf(E.getDay())!==-1){d.title=F;d.className=" x-date-disabled"}}if(G&&A){var K=E.dateFormat(A);if(G.test(K)){d.title=s.replace("%0",K);d.className=" x-date-disabled"}}};var x=0;for(;x<f;x++){r[x].innerHTML=(++g);E.setDate(E.getDate()+1);e[x].className="x-date-prevday";l(this,e[x])}for(;x<k;x++){var b=x-f+1;r[x].innerHTML=(b);E.setDate(E.getDate()+1);e[x].className="x-date-active";l(this,e[x])}var I=0;for(;x<42;x++){r[x].innerHTML=(++I);E.setDate(E.getDate()+1);e[x].className="x-date-nextday";l(this,e[x])}this.mbtn.setText(this.monthNames[H.getMonth()]+" "+H.getFullYear());if(!this.internalRender){var h=this.el.dom.firstChild,n=h.offsetWidth;this.el.setWidth(n+this.el.getBorderWidth("lr"));Ext.fly(h).setWidth(n);this.internalRender=true;if(Ext.isOpera&&!this.secondPass){h.rows[0].cells[1].style.width=(n-(h.rows[0].cells[0].offsetWidth+h.rows[0].cells[2].offsetWidth))+"px";this.secondPass=true;this.update.defer(10,this,[H])}}}};
/*
 * Ext JS Library 3.2.1
 * Copyright(c) 2006-2010 Ext JS, Inc.
 * licensing@extjs.com
 * http://www.extjs.com/license
 */
Ext.namespace("Ext.ux.grid");Ext.ux.grid.RowExpander=Ext.extend(Ext.util.Observable,{expandOnEnter:true,expandOnDblClick:true,expandOnClick:true,lastExpandedRow:null,accordionMode:true,header:"",width:20,sortable:false,fixed:true,hideable:false,menuDisabled:true,dataIndex:"",id:"expander",lazyRender:true,enableCaching:true,constructor:function(a){Ext.apply(this,a);this.addEvents({beforeexpand:true,expand:true,beforecollapse:true,collapse:true});Ext.ux.grid.RowExpander.superclass.constructor.call(this);if(this.tpl){if(typeof this.tpl==="string"){this.tpl=new Ext.Template(this.tpl)}this.tpl.compile()}this.state={};this.bodyContent={}},getRowClass:function(a,e,d,c){d.cols=d.cols-1;var b=this.bodyContent[a.id];if(!b&&!this.lazyRender){b=this.getBodyContent(a,e)}if(b){d.body=b}return this.state[a.id]?"x-grid3-row-expanded":"x-grid3-row-collapsed"},init:function(b){this.grid=b;var a=b.getView();a.getRowClass=this.getRowClass.createDelegate(this);a.enableRowBody=true;b.on("render",this.onRender,this);b.on("destroy",this.onDestroy,this)},onRender:function(){var a=this.grid;var b=a.getView().mainBody;b.on("mousedown",this.onMouseDown,this,{delegate:".x-grid3-row-expander"});if(this.expandOnEnter){this.keyNav=new Ext.KeyNav(this.grid.getGridEl(),{enter:this.onEnter,scope:this})}if(this.expandOnClick){a.on("rowclick",this.onRowClick,this)}if(this.expandOnDblClick){a.on("rowdblclick",this.onRowDblClick,this)}},onDestroy:function(){if(this.keyNav){this.keyNav.disable();delete this.keyNav}var a=this.grid.getView().mainBody;if(a){a.un("mousedown",this.onMouseDown,this)}},onRowDblClick:function(a,b,c){this.toggleRow(b)},onRowClick:function(a,b,c){this.expandRow(b)},onEnter:function(h){var f=this.grid,k=f.getSelectionModel(),b=k.getSelections(),c,a;for(c=0,a=b.length;c<a;c++){var d=f.getStore().indexOf(b[c]);this.toggleRow(d)}},getBodyContent:function(a,b){if(!this.enableCaching){return this.tpl.apply(a.data)}var c=this.bodyContent[a.id];if(!c){c=this.tpl.apply(a.data);this.bodyContent[a.id]=c}return c},onMouseDown:function(b,a){b.stopEvent();var c=b.getTarget(".x-grid3-row");this.toggleRow(c)},renderer:function(b,c,a){c.cellAttr='rowspan="2"';return'<div class="x-grid3-row-expander">&#160;</div>'},beforeExpand:function(b,a,c){if(this.fireEvent("beforeexpand",this,b,a,c)!==false){if(this.tpl&&this.lazyRender){a.innerHTML=this.getBodyContent(b,c)}return true}else{return false}},toggleRow:function(a){if(typeof a==="number"){a=this.grid.view.getRow(a)}this[Ext.fly(a).hasClass("x-grid3-row-collapsed")?"expandRow":"collapseRow"](a)},expandRow:function(c){if(typeof c==="number"){c=this.grid.view.getRow(c)}var b=this.grid.store.getAt(c.rowIndex);var a=Ext.DomQuery.selectNode("tr:nth(2) div.x-grid3-row-body",c);if(this.beforeExpand(b,a,c.rowIndex)){if(this.accordionMode===true){if(this.lastExpandedRow!==null){this.collapseRow(this.lastExpandedRow)}this.lastExpandedRow=c}this.state[b.id]=true;Ext.fly(c).replaceClass("x-grid3-row-collapsed","x-grid3-row-expanded");this.fireEvent("expand",this,b,a,c.rowIndex)}},collapseRow:function(c){if(typeof c==="number"){c=this.grid.view.getRow(c)}var b=this.grid.store.getAt(c.rowIndex);var a=Ext.fly(c).child("tr:nth(1) div.x-grid3-row-body",true);if(this.fireEvent("beforecollapse",this,b,a,c.rowIndex)!==false){this.state[b.id]=false;Ext.fly(c).replaceClass("x-grid3-row-expanded","x-grid3-row-collapsed");this.fireEvent("collapse",this,b,a,c.rowIndex)}}});Ext.preg("rowexpander",Ext.ux.grid.RowExpander);Ext.grid.RowExpander=Ext.ux.grid.RowExpander;Ext.namespace("Ext.ux.form");Ext.ux.form.SuperBoxSelect=function(a){Ext.ux.form.SuperBoxSelect.superclass.constructor.call(this,a);this.addEvents("beforeadditem","additem","newitem","beforeremoveitem","removeitem","clear")};Ext.ux.form.SuperBoxSelect=Ext.extend(Ext.ux.form.SuperBoxSelect,Ext.form.ComboBox,{addNewDataOnBlur:false,allowAddNewData:false,allowQueryAll:true,backspaceDeletesLastItem:true,classField:null,clearBtnCls:"",clearLastQueryOnEscape:false,clearOnEscape:false,displayFieldTpl:null,extraItemCls:"",extraItemStyle:"",expandBtnCls:"",fixFocusOnTabSelect:true,forceFormValue:true,forceSameValueQuery:false,itemDelimiterKey:Ext.EventObject.ENTER,navigateItemsWithTab:true,pinList:true,preventDuplicates:true,queryFilterRe:"",queryValuesDelimiter:"|",queryValuesIndicator:"valuesqry",removeValuesFromStore:true,renderFieldBtns:true,stackItems:false,styleField:null,supressClearValueRemoveEvents:false,validationEvent:"blur",hideClearButton:false,valueDelimiter:",",initComponent:function(){Ext.apply(this,{items:new Ext.util.MixedCollection(false),usedRecords:new Ext.util.MixedCollection(false),addedRecords:[],remoteLookup:[],hideTrigger:true,grow:false,resizable:false,multiSelectMode:false,preRenderValue:null,filteredQueryData:""});if(this.queryFilterRe){if(Ext.isString(this.queryFilterRe)){this.queryFilterRe=new RegExp(this.queryFilterRe)}}if(this.transform){this.doTransform()}if(this.forceFormValue){this.items.on({add:this.manageNameAttribute,remove:this.manageNameAttribute,clear:this.manageNameAttribute,scope:this})}Ext.ux.form.SuperBoxSelect.superclass.initComponent.call(this);if(this.mode==="remote"&&this.store){this.store.on("load",this.onStoreLoad,this)}},onRender:function(b,a){var c=this.hiddenName;this.hiddenName=null;Ext.ux.form.SuperBoxSelect.superclass.onRender.call(this,b,a);this.hiddenName=c;this.manageNameAttribute();var d=(this.stackItems===true)?"x-superboxselect-stacked":"";if(this.renderFieldBtns){d+=" x-superboxselect-display-btns"}this.el.removeClass("x-form-text").addClass("x-superboxselect-input-field");this.wrapEl=this.el.wrap({tag:"ul"});this.outerWrapEl=this.wrapEl.wrap({tag:"div",cls:"x-form-text x-superboxselect "+d});this.inputEl=this.el.wrap({tag:"li",cls:"x-superboxselect-input"});if(this.renderFieldBtns){this.setupFieldButtons().manageClearBtn()}this.setupFormInterception()},doTransform:function(){var n=Ext.getDom(this.transform),f=[];if(!this.store){this.mode="local";var h=[],a=n.options;for(var e=0,g=a.length;e<g;e++){var c=a[e],m=Ext.get(c),k=m.getAttributeNS(null,"value")||"",l=m.getAttributeNS(null,"className")||"",b=m.getAttributeNS(null,"style")||"";if(c.selected){f.push(k)}h.push([k,c.text,l,typeof(b)==="string"?b:b.cssText])}this.store=new Ext.data.SimpleStore({id:0,fields:["value","text","cls","style"],data:h});Ext.apply(this,{valueField:"value",displayField:"text",classField:"cls",styleField:"style"})}if(f.length){this.value=f.join(",")}},setupFieldButtons:function(){this.buttonWrap=this.outerWrapEl.createChild({cls:"x-superboxselect-btns"});if(!this.hideClearButton){this.buttonClear=this.buttonWrap.createChild({tag:"div",cls:"x-superboxselect-btn-clear "+this.clearBtnCls})}if(this.allowQueryAll){this.buttonExpand=this.buttonWrap.createChild({tag:"div",cls:"x-superboxselect-btn-expand "+this.expandBtnCls})}this.initButtonEvents();return this},initButtonEvents:function(){if(!this.hideClearButton){this.buttonClear.addClassOnOver("x-superboxselect-btn-over").on("click",function(a){a.stopEvent();if(this.disabled){return}this.clearValue();this.el.focus()},this)}if(this.allowQueryAll){this.buttonExpand.addClassOnOver("x-superboxselect-btn-over").on("click",function(a){a.stopEvent();if(this.disabled){return}if(this.isExpanded()){this.multiSelectMode=false}else{if(this.pinList){this.multiSelectMode=true}}this.onTriggerClick()},this)}},removeButtonEvents:function(){if(!this.hideClearButton){this.buttonClear.removeAllListeners()}if(this.allowQueryAll){this.buttonExpand.removeAllListeners()}return this},clearCurrentFocus:function(){if(this.currentFocus){this.currentFocus.onLnkBlur();this.currentFocus=null}return this},initEvents:function(){var a=this.el;a.on({click:this.onClick,focus:this.clearCurrentFocus,blur:this.onBlur,keydown:this.onKeyDownHandler,keyup:this.onKeyUpBuffered,scope:this});this.on({collapse:this.onCollapse,expand:this.clearCurrentFocus,scope:this});this.wrapEl.on("click",this.onWrapClick,this);this.outerWrapEl.on("click",this.onWrapClick,this);this.inputEl.focus=function(){a.focus()};Ext.ux.form.SuperBoxSelect.superclass.initEvents.call(this);Ext.apply(this.keyNav,{tab:function(b){if(this.fixFocusOnTabSelect&&this.isExpanded()){b.stopEvent();a.blur();this.onViewClick(false);this.focus(false,10);return true}this.onViewClick(false);if(a.dom.value!==""){this.setRawValue("")}return true},down:function(b){if(!this.isExpanded()&&!this.currentFocus){if(this.allowQueryAll){this.onTriggerClick()}}else{this.inKeyMode=true;this.selectNext()}},enter:function(){}})},onClick:function(){this.clearCurrentFocus();this.collapse();this.autoSize()},beforeBlur:function(){if(this.allowAddNewData&&this.addNewDataOnBlur){var a=this.el.dom.value;if(a!==""){this.fireNewItemEvent(a)}}Ext.form.ComboBox.superclass.beforeBlur.call(this)},onFocus:function(){this.outerWrapEl.addClass(this.focusClass);Ext.ux.form.SuperBoxSelect.superclass.onFocus.call(this)},onBlur:function(){this.outerWrapEl.removeClass(this.focusClass);this.clearCurrentFocus();if(this.el.dom.value!==""){this.applyEmptyText();this.autoSize()}Ext.ux.form.SuperBoxSelect.superclass.onBlur.call(this)},onCollapse:function(){this.view.clearSelections();this.multiSelectMode=false},onWrapClick:function(a){a.stopEvent();this.collapse();this.el.focus();this.clearCurrentFocus()},markInvalid:function(c){var b,a;if(!this.rendered||this.preventMark){return}this.outerWrapEl.addClass(this.invalidClass);c=c||this.invalidText;switch(this.msgTarget){case"qtip":Ext.apply(this.el.dom,{qtip:c,qclass:"x-form-invalid-tip"});Ext.apply(this.wrapEl.dom,{qtip:c,qclass:"x-form-invalid-tip"});if(Ext.QuickTips){Ext.QuickTips.enable()}break;case"title":this.el.dom.title=c;this.wrapEl.dom.title=c;this.outerWrapEl.dom.title=c;break;case"under":if(!this.errorEl){b=this.getErrorCt();if(!b){this.el.dom.title=c;break}this.errorEl=b.createChild({cls:"x-form-invalid-msg"});this.errorEl.setWidth(b.getWidth(true)-20)}this.errorEl.update(c);Ext.form.Field.msgFx[this.msgFx].show(this.errorEl,this);break;case"side":if(!this.errorIcon){b=this.getErrorCt();if(!b){this.el.dom.title=c;break}this.errorIcon=b.createChild({cls:"x-form-invalid-icon"})}this.alignErrorIcon();Ext.apply(this.errorIcon.dom,{qtip:c,qclass:"x-form-invalid-tip"});this.errorIcon.show();this.on("resize",this.alignErrorIcon,this);break;default:a=Ext.getDom(this.msgTarget);a.innerHTML=c;a.style.display=this.msgDisplay;break}this.fireEvent("invalid",this,c)},clearInvalid:function(){if(!this.rendered||this.preventMark){return}this.outerWrapEl.removeClass(this.invalidClass);switch(this.msgTarget){case"qtip":this.el.dom.qtip="";this.wrapEl.dom.qtip="";break;case"title":this.el.dom.title="";this.wrapEl.dom.title="";this.outerWrapEl.dom.title="";break;case"under":if(this.errorEl){Ext.form.Field.msgFx[this.msgFx].hide(this.errorEl,this)}break;case"side":if(this.errorIcon){this.errorIcon.dom.qtip="";this.errorIcon.hide();this.un("resize",this.alignErrorIcon,this)}break;default:var a=Ext.getDom(this.msgTarget);a.innerHTML="";a.style.display="none";break}this.fireEvent("valid",this)},alignErrorIcon:function(){if(this.wrap){this.errorIcon.alignTo(this.wrap,"tl-tr",[Ext.isIE?5:2,3])}},expand:function(){if(this.isExpanded()||!this.hasFocus){return}if(this.bufferSize){this.doResize(this.bufferSize);delete this.bufferSize}this.list.alignTo(this.outerWrapEl,this.listAlign).show();this.innerList.setOverflow("auto");this.mon(Ext.getDoc(),{scope:this,mousewheel:this.collapseIf,mousedown:this.collapseIf});this.fireEvent("expand",this)},restrictHeight:function(){var b=this.innerList.dom,c=b.scrollTop,f=this.list;b.style.height="";var g=f.getFrameWidth("tb")+(this.resizable?this.handleHeight:0)+this.assetHeight,d=Math.max(b.clientHeight,b.offsetHeight,b.scrollHeight),a=this.getPosition()[1]-Ext.getBody().getScroll().top,k=Ext.lib.Dom.getViewHeight()-a-this.getSize().height,e=Math.max(a,k,this.minHeight||0)-f.shadowOffset-g-5;d=Math.min(d,e,this.maxHeight);this.innerList.setHeight(d);f.beginUpdate();f.setHeight(d+g);f.alignTo(this.outerWrapEl,this.listAlign);f.endUpdate();if(this.multiSelectMode){b.scrollTop=c}},validateValue:function(a){if(this.items.getCount()===0){if(this.allowBlank){this.clearInvalid();return true}else{this.markInvalid(this.blankText);return false}}this.clearInvalid();return true},manageNameAttribute:function(){if(this.items.getCount()===0&&this.forceFormValue){this.el.dom.setAttribute("name",this.hiddenName||this.name)}else{this.el.dom.removeAttribute("name")}},setupFormInterception:function(){var a;this.findParentBy(function(c){if(c.getForm){a=c.getForm()}});if(a){var b=a.getValues;a.getValues=function(d){this.el.dom.disabled=true;var c=this.el.dom.value;this.setRawValue("");var e=b.call(a);this.el.dom.disabled=false;this.setRawValue(c);if(this.forceFormValue&&this.items.getCount()===0){e[this.name]=""}return d?Ext.urlEncode(e):e}.createDelegate(this)}},onResize:function(a,c,e,b){var d=Ext.isIE6?4:Ext.isIE7?1:Ext.isIE8?1:0;if(this.wrapEl){this._width=a;this.outerWrapEl.setWidth(a-d);if(this.renderFieldBtns){d+=(this.buttonWrap.getWidth()+5);this.wrapEl.setWidth(a-d)}}Ext.ux.form.SuperBoxSelect.superclass.onResize.call(this,a,c,e,b);this.autoSize()},onEnable:function(){Ext.ux.form.SuperBoxSelect.superclass.onEnable.call(this);this.items.each(function(a){a.enable()});if(this.renderFieldBtns){this.initButtonEvents()}},onDisable:function(){Ext.ux.form.SuperBoxSelect.superclass.onDisable.call(this);this.items.each(function(a){a.disable()});if(this.renderFieldBtns){this.removeButtonEvents()}},clearValue:function(a){Ext.ux.form.SuperBoxSelect.superclass.clearValue.call(this);this.preventMultipleRemoveEvents=a||this.supressClearValueRemoveEvents||false;this.removeAllItems();this.preventMultipleRemoveEvents=false;this.fireEvent("clear",this);return this},fireNewItemEvent:function(a){this.view.clearSelections();this.collapse();this.setRawValue("");if(this.queryFilterRe){a=a.replace(this.queryFilterRe,"");if(!a){return}}this.fireEvent("newitem",this,a,this.filteredQueryData)},onKeyUp:function(a){if(this.editable!==false&&(!a.isSpecialKey()||a.getKey()===a.BACKSPACE)&&this.itemDelimiterKey.indexOf!==a.getKey()&&(!a.hasModifier()||a.shiftKey)){this.lastKey=a.getKey();this.dqTask.delay(this.queryDelay)}},onKeyDownHandler:function(g,c){var b,k,a;if(g.getKey()===g.ESC){if(!this.isExpanded()){if(this.el.dom.value!=""&&(this.clearOnEscape||this.clearLastQueryOnEscape)){if(this.clearOnEscape){this.el.dom.value=""}if(this.clearLastQueryOnEscape){this.lastQuery=""}g.stopEvent()}}}if((g.getKey()===g.DELETE||g.getKey()===g.SPACE)&&this.currentFocus){g.stopEvent();b=this.currentFocus;this.on("expand",function(){this.collapse()},this,{single:true});a=this.items.indexOfKey(this.currentFocus.key);this.clearCurrentFocus();if(a<(this.items.getCount()-1)){k=this.items.itemAt(a+1)}b.preDestroy(true);if(k){(function(){k.onLnkFocus();this.currentFocus=k}).defer(200,this)}return true}var h=this.el.dom.value,d,f=g.ctrlKey;if(this.itemDelimiterKey===g.getKey()){g.stopEvent();if(h!==""){if(f||!this.isExpanded()){this.fireNewItemEvent(h)}else{this.onViewClick();if(this.unsetDelayCheck){this.delayedCheck=true;this.unsetDelayCheck.defer(10,this)}}}else{if(!this.isExpanded()){return}this.onViewClick();if(this.unsetDelayCheck){this.delayedCheck=true;this.unsetDelayCheck.defer(10,this)}}return true}if(h!==""){this.autoSize();return}if(g.getKey()===g.HOME){g.stopEvent();if(this.items.getCount()>0){this.collapse();d=this.items.get(0);d.el.focus()}return true}if(g.getKey()===g.BACKSPACE){g.stopEvent();if(this.currentFocus){b=this.currentFocus;this.on("expand",function(){this.collapse()},this,{single:true});a=this.items.indexOfKey(b.key);this.clearCurrentFocus();if(a<(this.items.getCount()-1)){k=this.items.itemAt(a+1)}b.preDestroy(true);if(k){(function(){k.onLnkFocus();this.currentFocus=k}).defer(200,this)}return}else{d=this.items.get(this.items.getCount()-1);if(d){if(this.backspaceDeletesLastItem){this.on("expand",function(){this.collapse()},this,{single:true});d.preDestroy(true)}else{if(this.navigateItemsWithTab){d.onElClick()}else{this.on("expand",function(){this.collapse();this.currentFocus=d;this.currentFocus.onLnkFocus.defer(20,this.currentFocus)},this,{single:true})}}}return true}}if(!g.isNavKeyPress()){this.multiSelectMode=false;this.clearCurrentFocus();return}if(g.getKey()===g.LEFT||(g.getKey()===g.UP&&!this.isExpanded())){g.stopEvent();this.collapse();d=this.items.get(this.items.getCount()-1);if(this.navigateItemsWithTab){if(d){d.focus()}}else{if(this.currentFocus){a=this.items.indexOfKey(this.currentFocus.key);this.clearCurrentFocus();if(a!==0){this.currentFocus=this.items.itemAt(a-1);this.currentFocus.onLnkFocus()}}else{this.currentFocus=d;if(d){d.onLnkFocus()}}}return true}if(g.getKey()===g.DOWN){if(this.currentFocus){this.collapse();g.stopEvent();a=this.items.indexOfKey(this.currentFocus.key);if(a==(this.items.getCount()-1)){this.clearCurrentFocus.defer(10,this)}else{this.clearCurrentFocus();this.currentFocus=this.items.itemAt(a+1);if(this.currentFocus){this.currentFocus.onLnkFocus()}}return true}}if(g.getKey()===g.RIGHT){this.collapse();d=this.items.itemAt(0);if(this.navigateItemsWithTab){if(d){d.focus()}}else{if(this.currentFocus){a=this.items.indexOfKey(this.currentFocus.key);this.clearCurrentFocus();if(a<(this.items.getCount()-1)){this.currentFocus=this.items.itemAt(a+1);if(this.currentFocus){this.currentFocus.onLnkFocus()}}}else{this.currentFocus=d;if(d){d.onLnkFocus()}}}}},onKeyUpBuffered:function(a){if(!a.isNavKeyPress()){this.autoSize()}},reset:function(){this.killItems();Ext.ux.form.SuperBoxSelect.superclass.reset.call(this);this.addedRecords=[];this.autoSize().setRawValue("")},applyEmptyText:function(){this.setRawValue("");if(this.items.getCount()>0){this.el.removeClass(this.emptyClass);this.setRawValue("");return this}if(this.rendered&&this.emptyText&&this.getRawValue().length<1){this.setRawValue(this.emptyText);this.el.addClass(this.emptyClass)}return this},removeAllItems:function(){this.items.each(function(a){a.preDestroy(true)},this);this.manageClearBtn();return this},killItems:function(){this.items.each(function(a){a.kill()},this);this.resetStore();this.items.clear();this.manageClearBtn();return this},resetStore:function(){this.store.clearFilter();if(!this.removeValuesFromStore){return this}this.usedRecords.each(function(a){this.store.add(a)},this);this.usedRecords.clear();if(!this.store.remoteSort){this.store.sort(this.displayField,"ASC")}return this},sortStore:function(){var a=this.store.getSortState();if(a&&a.field){this.store.sort(a.field,a.direction)}return this},getCaption:function(c){if(typeof this.displayFieldTpl==="string"){this.displayFieldTpl=new Ext.XTemplate(this.displayFieldTpl)}var b,a=c instanceof Ext.data.Record?c.data:c;if(this.displayFieldTpl){b=this.displayFieldTpl.apply(a)}else{if(this.displayField){b=a[this.displayField]}}return b},addRecord:function(b){var e=b.data[this.displayField],c=this.getCaption(b),f=b.data[this.valueField],a=this.classField?b.data[this.classField]:"",d=this.styleField?b.data[this.styleField]:"";if(this.removeValuesFromStore){this.usedRecords.add(f,b);this.store.remove(b)}this.addItemBox(f,e,c,a,d);this.fireEvent("additem",this,f,b)},createRecord:function(a){if(!this.recordConstructor){var b=[{name:this.valueField},{name:this.displayField}];if(this.classField){b.push({name:this.classField})}if(this.styleField){b.push({name:this.styleField})}this.recordConstructor=Ext.data.Record.create(b)}return new this.recordConstructor(a)},addItems:function(a){if(Ext.isArray(a)){Ext.each(a,function(b){this.addItem(b)},this)}else{this.addItem(a)}},addNewItem:function(a){this.addItem(a,true)},addItem:function(a,c){var e=a[this.valueField];if(this.disabled){return false}if(this.preventDuplicates&&this.hasValue(e)){return}var b=this.findRecord(this.valueField,e);if(b){this.addRecord(b);return}else{if(!this.allowAddNewData){return}}if(this.mode==="remote"){this.remoteLookup.push(a);this.doQuery(e,false,false,c);return}var d=this.createRecord(a);this.store.add(d);this.addRecord(d);return true},addItemBox:function(c,e,k,h,d){var f,g=function(m){var l="";switch(typeof m){case"function":l=m.call();break;case"object":for(var n in m){l+=n+":"+m[n]+";"}break;case"string":l=m+";"}return l},a=Ext.id(null,"sbx-item"),b=new Ext.ux.form.SuperBoxSelectItem({owner:this,disabled:this.disabled,renderTo:this.wrapEl,cls:this.extraItemCls+" "+h,style:g(this.extraItemStyle)+" "+d,caption:k,display:e,value:c,key:a,listeners:{remove:function(l){if(this.fireEvent("beforeremoveitem",this,l.value)===false){return false}this.items.removeKey(l.key);if(this.removeValuesFromStore){if(this.usedRecords.containsKey(l.value)){this.store.add(this.usedRecords.get(l.value));this.usedRecords.removeKey(l.value);this.sortStore();if(this.view){this.view.render()}}}if(!this.preventMultipleRemoveEvents){this.fireEvent.defer(250,this,["removeitem",this,l.value,this.findInStore(l.value)])}},destroy:function(){this.collapse();this.autoSize().manageClearBtn().validateValue()},scope:this}});b.render();f={tag:"input",type:"hidden",value:c,name:(this.hiddenName||this.name)};if(this.disabled){Ext.apply(f,{disabled:"disabled"})}b.hidden=this.el.insertSibling(f,"before");this.items.add(a,b);this.applyEmptyText().autoSize().manageClearBtn().validateValue()},manageClearBtn:function(){if(!this.renderFieldBtns||!this.rendered){return this}if(!this.hideClearButton){var a="x-superboxselect-btn-hide";if(this.items.getCount()===0){this.buttonClear.addClass(a)}else{this.buttonClear.removeClass(a)}}return this},findInStore:function(b){var a=this.store.find(this.valueField,b);if(a>-1){return this.store.getAt(a)}return false},getSelectedRecords:function(){var a=[];if(this.removeValuesFromStore){a=this.usedRecords.getRange()}else{var b=[];this.items.each(function(c){b.push(c.value)});Ext.each(b,function(c){a.push(this.findInStore(c))},this)}return a},findSelectedItem:function(b){var a;this.items.each(function(c){if(c.el.dom===b){a=c;return false}});return a},findSelectedRecord:function(b){var a,c=this.findSelectedItem(b);if(c){a=this.findSelectedRecordByValue(c.value)}return a},findSelectedRecordByValue:function(b){var a;if(this.removeValuesFromStore){this.usedRecords.each(function(c){if(c.get(this.valueField)==b){a=c;return false}},this)}else{a=this.findInStore(b)}return a},getValue:function(){var a=[];this.items.each(function(b){a.push(b.value)});return a.join(this.valueDelimiter)},getCount:function(){return this.items.getCount()},getValueEx:function(){var a=[];this.items.each(function(c){var b={};b[this.valueField]=c.value;b[this.displayField]=c.display;if(this.classField){b[this.classField]=c.cls||""}if(this.styleField){b[this.styleField]=c.style||""}a.push(b)},this);return a},initValue:function(){if(Ext.isObject(this.value)||Ext.isArray(this.value)){this.setValueEx(this.value);this.originalValue=this.getValue()}else{Ext.ux.form.SuperBoxSelect.superclass.initValue.call(this)}if(this.mode==="remote"){this.setOriginal=true}},addValue:function(c){if(Ext.isEmpty(c)){return}var a=c;if(!Ext.isArray(c)){c=""+c;a=c.split(this.valueDelimiter)}Ext.each(a,function(e){var d=this.findRecord(this.valueField,e);if(d){this.addRecord(d)}else{if(this.mode==="remote"){this.remoteLookup.push(e)}}},this);if(this.mode==="remote"){var b=this.remoteLookup.join(this.queryValuesDelimiter);this.doQuery(b,false,true)}},setValue:function(a){if(!this.rendered){this.value=a;return}this.removeAllItems().resetStore();this.remoteLookup=[];this.addValue(a)},setValueEx:function(a){if(!this.rendered){this.value=a;return}this.removeAllItems().resetStore();if(!Ext.isArray(a)){a=[a]}this.remoteLookup=[];if(this.allowAddNewData&&this.mode==="remote"){Ext.each(a,function(c){var b=this.findRecord(this.valueField,c[this.valueField])||this.createRecord(c);this.addRecord(b)},this);return}Ext.each(a,function(b){this.addItem(b)},this)},hasValue:function(b){var a=false;this.items.each(function(c){if(c.value==b){a=true;return false}},this);return a},onSelect:function(a,b){if(this.fireEvent("beforeselect",this,a,b)!==false){var c=a.data[this.valueField];if(this.preventDuplicates&&this.hasValue(c)){return}this.setRawValue("");this.lastSelectionText="";if(this.fireEvent("beforeadditem",this,c,a,this.filteredQueryData)!==false){this.addRecord(a)}if(this.store.getCount()===0||!this.multiSelectMode){this.collapse()}else{this.restrictHeight()}}},onDestroy:function(){this.items.purgeListeners();this.killItems();if(this.allowQueryAll){Ext.destroy(this.buttonExpand)}if(this.renderFieldBtns){Ext.destroy(this.buttonClear,this.buttonWrap)}Ext.destroy(this.inputEl,this.wrapEl,this.outerWrapEl);Ext.ux.form.SuperBoxSelect.superclass.onDestroy.call(this)},autoSize:function(){if(!this.rendered){return this}if(!this.metrics){this.metrics=Ext.util.TextMetrics.createInstance(this.el)}var c=this.el,b=c.dom.value,e=document.createElement("div");if(b===""&&this.emptyText&&this.items.getCount()<1){b=this.emptyText}e.appendChild(document.createTextNode(b));b=e.innerHTML;e=null;b+="&#160;";var a=Math.max(this.metrics.getWidth(b)+24,24);if(typeof this._width!="undefined"){a=Math.min(this._width,a)}this.el.setWidth(a);if(Ext.isIE){this.el.dom.style.top="0"}this.fireEvent("autosize",this,a);return this},shouldQuery:function(b){if(this.lastQuery){var a=b.match("^"+this.lastQuery);if(!a||this.store.getCount()){return true}else{return(a[0]!==this.lastQuery)}}return true},doQuery:function(f,e,b,d){f=Ext.isEmpty(f)?"":f;if(this.queryFilterRe){this.filteredQueryData="";var a=f.match(this.queryFilterRe);if(a&&a.length){this.filteredQueryData=a[0]}f=f.replace(this.queryFilterRe,"");if(!f&&a){return}}var c={query:f,forceAll:e,combo:this,cancel:false};if(this.fireEvent("beforequery",c)===false||c.cancel){return false}f=c.query;e=c.forceAll;if(e===true||(f.length>=this.minChars)||b&&!Ext.isEmpty(f)){if(d||this.forceSameValueQuery||this.shouldQuery(f)){this.lastQuery=f;if(this.mode=="local"){this.selectedIndex=-1;if(e){this.store.clearFilter()}else{this.store.filter(this.displayField,f)}this.onLoad()}else{this.store.baseParams[this.queryParam]=f;this.store.baseParams[this.queryValuesIndicator]=b;this.store.load({params:this.getParams(f)});if(!d){this.expand()}}}else{this.selectedIndex=-1;this.onLoad()}}},onStoreLoad:function(b,a,c){var f=c.params[this.queryParam]||b.baseParams[this.queryParam]||"",g=c.params[this.queryValuesIndicator]||b.baseParams[this.queryValuesIndicator];if(this.removeValuesFromStore){this.store.each(function(k){if(this.usedRecords.containsKey(k.get(this.valueField))){this.store.remove(k)}},this)}if(g){var h=f.split(this.queryValuesDelimiter);Ext.each(h,function(k){this.remoteLookup.remove(k);var l=this.findRecord(this.valueField,k);if(l){this.addRecord(l)}},this);if(this.setOriginal){this.setOriginal=false;this.originalValue=this.getValue()}}if(f!==""&&this.allowAddNewData){Ext.each(this.remoteLookup,function(k){if(typeof k==="object"&&k[this.valueField]===f){this.remoteLookup.remove(k);if(a.length&&a[0].get(this.valueField)===f){this.addRecord(a[0]);return}var l=this.createRecord(k);this.store.add(l);this.addRecord(l);this.addedRecords.push(l);(function(){if(this.isExpanded()){this.collapse()}}).defer(10,this);return}},this)}var d=[];if(f===""){Ext.each(this.addedRecords,function(k){if(this.preventDuplicates&&this.usedRecords.containsKey(k.get(this.valueField))){return}d.push(k)},this)}else{var e=new RegExp(Ext.escapeRe(f)+".*","i");Ext.each(this.addedRecords,function(k){if(this.preventDuplicates&&this.usedRecords.containsKey(k.get(this.valueField))){return}if(e.test(k.get(this.displayField))){d.push(k)}},this)}this.store.add(d);this.sortStore();if(this.store.getCount()===0&&this.isExpanded()){this.collapse()}}});Ext.reg("superboxselect",Ext.ux.form.SuperBoxSelect);Ext.ux.form.SuperBoxSelectItem=function(a){Ext.apply(this,a);Ext.ux.form.SuperBoxSelectItem.superclass.constructor.call(this)};Ext.ux.form.SuperBoxSelectItem=Ext.extend(Ext.ux.form.SuperBoxSelectItem,Ext.Component,{initComponent:function(){Ext.ux.form.SuperBoxSelectItem.superclass.initComponent.call(this)},onElClick:function(b){var c=this.owner;c.clearCurrentFocus().collapse();if(c.navigateItemsWithTab){this.focus()}else{c.el.dom.focus();var a=this;(function(){this.onLnkFocus();c.currentFocus=this}).defer(10,this)}},onLnkClick:function(a){if(a){a.stopEvent()}this.preDestroy();if(!this.owner.navigateItemsWithTab){this.owner.el.focus()}},onLnkFocus:function(){this.el.addClass("x-superboxselect-item-focus");this.owner.outerWrapEl.addClass("x-form-focus")},onLnkBlur:function(){this.el.removeClass("x-superboxselect-item-focus");this.owner.outerWrapEl.removeClass("x-form-focus")},enableElListeners:function(){this.el.on("click",this.onElClick,this,{stopEvent:true});this.el.addClassOnOver("x-superboxselect-item x-superboxselect-item-hover")},enableLnkListeners:function(){this.lnk.on({click:this.onLnkClick,focus:this.onLnkFocus,blur:this.onLnkBlur,scope:this})},enableAllListeners:function(){this.enableElListeners();this.enableLnkListeners()},disableAllListeners:function(){this.el.removeAllListeners();this.lnk.un("click",this.onLnkClick,this);this.lnk.un("focus",this.onLnkFocus,this);this.lnk.un("blur",this.onLnkBlur,this)},onRender:function(c,a){Ext.ux.form.SuperBoxSelectItem.superclass.onRender.call(this,c,a);var e=this.el;if(e){e.remove()}this.el=e=c.createChild({tag:"li"},c.last());e.addClass("x-superboxselect-item");var d=this.owner.navigateItemsWithTab?(Ext.isSafari?"button":"a"):"span";var f=this.key;Ext.apply(e,{focus:function(){var g=this.down(d+".x-superboxselect-item-close");if(g){g.focus()}},preDestroy:function(){this.preDestroy()}.createDelegate(this)});this.enableElListeners();e.update(this.caption);var b={tag:d,"class":"x-superboxselect-item-close",tabIndex:this.owner.navigateItemsWithTab?"0":"-1"};if(d==="a"){b.href="#"}this.lnk=e.createChild(b);if(!this.disabled){this.enableLnkListeners()}else{this.disableAllListeners()}this.on({disable:this.disableAllListeners,enable:this.enableAllListeners,scope:this});this.setupKeyMap()},setupKeyMap:function(){this.keyMap=new Ext.KeyMap(this.lnk,[{key:[Ext.EventObject.BACKSPACE,Ext.EventObject.DELETE,Ext.EventObject.SPACE],fn:this.preDestroy,scope:this},{key:[Ext.EventObject.RIGHT,Ext.EventObject.DOWN],fn:function(){this.moveFocus("right")},scope:this},{key:[Ext.EventObject.LEFT,Ext.EventObject.UP],fn:function(){this.moveFocus("left")},scope:this},{key:[Ext.EventObject.HOME],fn:function(){var a=this.owner.items.get(0).el.focus();if(a){a.el.focus()}},scope:this},{key:[Ext.EventObject.END],fn:function(){this.owner.el.focus()},scope:this},{key:Ext.EventObject.ENTER,fn:function(){}}]);this.keyMap.stopEvent=true},moveFocus:function(a){var b=this.el[a=="left"?"prev":"next"]()||this.owner.el;b.focus.defer(100,b)},preDestroy:function(a){if(this.fireEvent("remove",this)===false){return}var b=function(){if(this.owner.navigateItemsWithTab){this.moveFocus("right")}this.hidden.remove();this.hidden=null;this.destroy()};if(a){b.call(this)}else{this.el.hide({duration:0.2,callback:b,scope:this})}return this},kill:function(){this.hidden.remove();this.hidden=null;this.purgeListeners();this.destroy()},onDisable:function(){if(this.hidden){this.hidden.dom.setAttribute("disabled","disabled")}this.keyMap.disable();Ext.ux.form.SuperBoxSelectItem.superclass.onDisable.call(this)},onEnable:function(){if(this.hidden){this.hidden.dom.removeAttribute("disabled")}this.keyMap.enable();Ext.ux.form.SuperBoxSelectItem.superclass.onEnable.call(this)},onDestroy:function(){Ext.destroy(this.lnk,this.el);Ext.ux.form.SuperBoxSelectItem.superclass.onDestroy.call(this)}});
/*
 * Ext JS Library 3.4.0
 * Copyright(c) 2006-2011 Sencha Inc.
 * licensing@sencha.com
 * http://www.sencha.com/license
 */
Ext.ns("Ext.ux.form");Ext.ux.form.FileUploadField=Ext.extend(Ext.form.TextField,{buttonText:"Browse...",buttonOnly:false,buttonOffset:3,readOnly:true,autoSize:Ext.emptyFn,initComponent:function(){Ext.ux.form.FileUploadField.superclass.initComponent.call(this);this.addEvents("fileselected")},onRender:function(c,a){Ext.ux.form.FileUploadField.superclass.onRender.call(this,c,a);this.wrap=this.el.wrap({cls:"x-form-field-wrap x-form-file-wrap"});this.el.addClass("x-form-file-text");this.el.dom.removeAttribute("name");this.createFileInput();var b=Ext.applyIf(this.buttonCfg||{},{text:this.buttonText});this.button=new Ext.Button(Ext.apply(b,{renderTo:this.wrap,cls:"x-form-file-btn"+(b.iconCls?" x-btn-icon":"")}));if(this.buttonOnly){this.el.hide();this.wrap.setWidth(this.button.getEl().getWidth())}this.bindListeners();this.resizeEl=this.positionEl=this.wrap},bindListeners:function(){this.fileInput.on({scope:this,mouseenter:function(){this.button.addClass(["x-btn-over","x-btn-focus"])},mouseleave:function(){this.button.removeClass(["x-btn-over","x-btn-focus","x-btn-click"])},mousedown:function(){this.button.addClass("x-btn-click")},mouseup:function(){this.button.removeClass(["x-btn-over","x-btn-focus","x-btn-click"])},change:function(){var a=this.fileInput.dom.value;this.setValue(a);this.fireEvent("fileselected",this,a)}})},createFileInput:function(){this.fileInput=this.wrap.createChild({id:this.getFileInputId(),name:this.name||this.getId(),cls:"x-form-file",tag:"input",type:"file",size:1})},reset:function(){if(this.rendered){this.fileInput.remove();this.createFileInput();this.bindListeners()}Ext.ux.form.FileUploadField.superclass.reset.call(this)},getFileInputId:function(){return this.id+"-file"},onResize:function(a,b){Ext.ux.form.FileUploadField.superclass.onResize.call(this,a,b);this.wrap.setWidth(a);if(!this.buttonOnly){var a=this.wrap.getWidth()-this.button.getEl().getWidth()-this.buttonOffset;this.el.setWidth(a)}},onDestroy:function(){Ext.ux.form.FileUploadField.superclass.onDestroy.call(this);Ext.destroy(this.fileInput,this.button,this.wrap)},onDisable:function(){Ext.ux.form.FileUploadField.superclass.onDisable.call(this);this.doDisable(true)},onEnable:function(){Ext.ux.form.FileUploadField.superclass.onEnable.call(this);this.doDisable(false)},doDisable:function(a){this.fileInput.dom.disabled=a;this.button.setDisabled(a)},preFocus:Ext.emptyFn,alignErrorIcon:function(){this.errorIcon.alignTo(this.wrap,"tl-tr",[2,0])}});Ext.reg("fileuploadfield",Ext.ux.form.FileUploadField);Ext.form.FileUploadField=Ext.ux.form.FileUploadField;Genapp.CardGridDetailsPanel=Ext.extend(Ext.Panel,{headerWidth:95,closable:true,autoScroll:true,cls:"genapp-query-card-grid-details-panel",loadingMsg:"Loading...",header:false,layout:"card",cardGridDetailsPanelTitle:"Selection",activeItem:0,initComponent:function(){this.itemId=this.initConf.id;this.title='<div style="width:'+this.headerWidth+'px;">'+this.cardGridDetailsPanelTitle+" "+this.initConf.featuresInformationSearchNumber+"</div>";this.items=new Genapp.GridDetailsPanel({initConf:this.initConf});Genapp.CardGridDetailsPanel.superclass.initComponent.call(this)}});Genapp.CardPanel=Ext.extend(Ext.TabPanel,{cls:"genapp-card-panel",activeItem:1,border:false,renderTo:"page",widthToSubstract:80,heightToSubstract:160,shownPages:["predefinedrequestpage","consultationpage","docsearchpage"],initComponent:function(){var a,c=function(d){Ext.History.add(this.id)};this.addEvents("resizewrapper");this.height=Ext.getBody().getViewSize().height-this.heightToSubstract;this.width=Ext.getBody().getViewSize().width-this.widthToSubstract;Ext.EventManager.onWindowResize(function(d,f){var e={width:Ext.getBody().getViewSize().width-this.widthToSubstract,height:Ext.getBody().getViewSize().height-this.heightToSubstract};this.setSize(e);this.fireEvent("resizewrapper",e.width,e.height)},this);if(!this.items&&this.shownPages.length!==0){this.items=[];for(a=0;a<this.shownPages.length;a++){var b={xtype:this.shownPages[a]};if(Genapp.config.historicActivated){b.listeners={activate:c}}this.items.push(b)}}if(this.shownPages.length===1){this.headerCfg={style:"display:none;"};this.defaults={frame:false}}Genapp.CardPanel.superclass.initComponent.call(this)}});Genapp.ConsultationPanel=Ext.extend(Ext.Panel,{title:"Consultation",frame:true,region:"center",layout:"border",cls:"genapp_consultation_panel",border:false,id:"consultation_panel",ref:"consultationPage",hideCsvExportAlert:false,hideCsvExportButton:false,hideGridKmlExportMenuItem:false,hideGridGeoJSONExportMenuItem:false,hideCancelButton:false,hideResetButton:false,hidePrintMapButton:true,hideDetails:false,hideMapDetails:true,hideUserManualLink:true,hidePredefinedRequestSaveButton:true,hideGridDataEditButton:true,userManualLinkHref:Genapp.base_url+"pdf/User_Manual.pdf",userManualLinkText:"User Manual",hideDetailsVerticalLabel:false,hideLayerSelector:false,hideSnappingButton:true,hideGetFeatureButton:true,hideFeatureInfoButton:false,showGridOnSubmit:false,datasetComboBoxEmptyText:"Please select a dataset...",datasetPanelTitle:"Dataset",formsPanelTitle:"Forms Panel",exportButtonText:"Export",csvExportMenuItemText:"Export CSV",kmlExportMenuItemText:"Export KML",geojsonExportMenuItemText:"Export GeoJSON",printMapButtonText:"Print map",gridViewEmptyText:"No result...",gridPanelTitle:"Results",gridPanelTabTip:"The request's results",gridPageSize:20,centerPanelTitle:"Result Panel",queryPanelTitle:"Query Panel",queryPanelWidth:370,searchButtonWidth:70,searchButtonHeight:16,queryPanelPinToolQtip:"Pin the panel",queryPanelUnpinToolQtip:"Unpin the panel",queryPanelCancelButtonText:"Cancel",queryPanelPredefinedRequestSaveButtonText:"Save the request",queryPanelResetButtonText:"Reset",queryPanelSearchButtonText:"Search",queryPanelCancelButtonTooltip:"Cancel the request",queryPanelPredefinedRequestSaveButtonTooltip:"Add the current request to the predefined requests",queryPanelResetButtonTooltip:"Reset the request",queryPanelSearchButtonTooltip:"Launch the request",datasetComboBoxWidth:345,detailsPanelCtTitle:"Details",detailsPanelCtPinToolQtip:"Pin the panel",detailsPanelCtUnpinToolQtip:"Unpin the panel",featuresInformationPanelCtTitle:"Features Information",featuresInformationPanelCtHeight:185,mapMaskMsg:"Loading...",alertErrorTitle:"Error :",alertRequestFailedMsg:"Sorry, the request failed...",dateFormat:"Y/m/d",csvExportAlertTitle:"CSV exportation on IE",csvExportAlertMsg:"<div><H2>For your comfort on Internet Explorer you can:</H2>         <H3>Disable confirmation for file downloads.</H3>         <ul>         <li>In IE, expand the 'Tools' menu</li>         <li>Click on 'Internet Options'</li>         <li>Click on the 'Security' tab</li>         <li>Click on 'Custom Level'</li>         <li>Scroll down to the 'Downloads' part</li>         <li>Enable the confirmation for file download </li>         </ul>         <H3>Disable the file opening in the current window.</H3>         <ul>         <li>Open the workstation</li>         <li>Expand the 'Tools' menu</li>         <li>Click on 'Folder Options ...'</li>         <li>Click on the 'File Types' tab</li>         <li>Select the XLS extension</li>         <li>Click on the 'Advanced' button</li>         <li>Uncheck 'Browse in same window'</li>         </ul></div>",autoZoomOnResultsFeatures:false,launchRequestOnPredefinedRequestLoad:true,collapseQueryPanelOnPredefinedRequestLoad:true,featuresInformationSearchNumber:0,tipDefaultWidth:300,tipImageDefaultWidth:200,openGridDetailsButtonTitle:"See the details",openGridDetailsButtonTip:"Display the row details into the details panel.",seeOnMapButtonTitle:"See on the map",seeOnMapButtonTip:"Zoom and centre on the location on the map.",editDataButtonTitle:"Edit the data",editDataButtonTip:"Go to the edition page to edit the data.",cannotEditTip:"You don't have the rights to edit this data.",collapseQueryPanelOnPageLoad:false,launchRequestOnPageLoad:false,collapseQueryPanelOnDatasetChange:false,launchRequestOnDatasetChange:false,exportAsPdfButtonText:"Export as pdf",hideExportAsPdfButton:false,initComponent:function(){this.datasetDS=new Ext.data.JsonStore({url:Genapp.ajax_query_url+"ajaxgetdatasets",method:"POST",autoLoad:true,listeners:{load:{fn:function(k,h,l){for(i=0;i<h.length;i++){if(h[i].data.is_default==="1"){this.datasetComboBox.setValue(h[i].data.id);this.updateDatasetFormsPanel(h[i].data.id,{collapseQueryPanel:this.collapseQueryPanelOnPageLoad,launchRequest:this.launchRequestOnPageLoad});this.updateDatasetPanelToolTip(h[i].data);break}}},scope:this}}});this.datasetComboBox=new Ext.form.ComboBox({name:"datasetId",hiddenName:"datasetId",hideLabel:true,store:this.datasetDS,editable:false,displayField:"label",valueField:"id",forceSelection:true,mode:"local",typeAhead:true,width:this.datasetComboBoxWidth,maxHeight:100,triggerAction:"all",emptyText:this.datasetComboBoxEmptyText,selectOnFocus:true,disableKeyFilter:true,listeners:{select:{fn:function(l,h,k){this.updateDatasetFormsPanel(h.data.id,{collapseQueryPanel:this.collapseQueryPanelOnDatasetChange,launchRequest:this.launchRequestOnDatasetChange});this.updateDatasetPanelToolTip(h.data)},scope:this}}});this.datasetPanel=new Ext.Panel({region:"north",layout:"form",autoHeight:true,frame:true,margins:"10 0 5 0",cls:"genapp_query_panel_dataset_panel",title:this.datasetPanelTitle,items:this.datasetComboBox,tools:[{id:"help",scope:this}]});this.formsPanel=new Ext.form.FieldSet({layout:"auto",region:"center",autoScroll:true,cls:"genapp_query_formspanel",frame:true,margins:"5 0 5 0",title:this.formsPanelTitle,keys:{key:Ext.EventObject.ENTER,fn:this.submitRequest,scope:this}});this.gridDSReader=new Ext.data.ArrayReader();this.gridDSReader.updateMetadata=function(h){delete this.ef;this.meta=h;this.recordType=Ext.data.Record.create(h.fields);this.onMetaChange(h,this.recordType,{metaData:h})};this.gridDS=new Ext.data.Store({autoDestroy:true,url:Genapp.ajax_query_url+"ajaxgetresultrows",remoteSort:true,reader:this.gridDSReader});this.pagingToolbar=new Ext.PagingToolbar({pageSize:this.gridPageSize,store:this.gridDS,displayInfo:true});this.pagingToolbar.reset=function(){if(!this.rendered){return}this.afterTextItem.setText(String.format(this.afterPageText,1));this.inputItem.setValue(1);this.first.setDisabled(true);this.prev.setDisabled(true);this.next.setDisabled(true);this.last.setDisabled(true);this.refresh.enable();if(this.displayItem){this.displayItem.setText(this.emptyMsg)}this.fireEvent("change",this,{total:0,activePage:1,pages:1})};this.gridView=new Ext.grid.GridView({autoFill:true,emptyText:this.gridViewEmptyText,deferEmptyText:true});this.gridView.reset=function(){this.mainBody.dom.innerHTML="&#160;"};this.gridPanel=new Ext.grid.GridPanel({frame:true,tabTip:this.gridPanelTabTip,collapsible:true,titleCollapse:true,title:this.gridPanelTitle,header:false,layout:"fit",autoScroll:true,loadMask:true,view:this.gridView,store:this.gridDS,trackMouseOver:false,sm:new Ext.grid.RowSelectionModel({singleSelect:true}),cm:new Ext.grid.ColumnModel({}),bbar:this.pagingToolbar,listeners:{activate:function(h){if(!this.hideCsvExportButton){this.csvExportButton.show()}if(!this.hidePrintMapButton){this.printMapButton.hide()}},scope:this}});this.geoPanel=new Genapp.GeoPanel({hideMapDetails:this.hideMapDetails,hideLayerSelector:this.hideLayerSelector,hideSnappingButton:this.hideSnappingButton,hideGetFeatureButton:this.hideGetFeatureButton,hideFeatureInfoButton:this.hideFeatureInfoButton,listeners:{activate:function(h){if(!this.hideCsvExportButton){this.csvExportButton.hide()}if(!this.hidePrintMapButton){this.printMapButton.show()}},addgeomcriteria:this.addgeomcriteria,scope:this}});this.centerPanel=new Ext.TabPanel({activeItem:0,frame:true,plain:true,region:"center",title:this.centerPanelTitle,items:[this.geoPanel,this.gridPanel]});this.centerPanel.on("render",function(m){var h=m.getEl().query(".x-tab-edge");if(!this.hideUserManualLink){var l=Ext.DomHelper.insertBefore(h[0],{tag:"li",children:[{tag:"a",target:"_blank",href:this.userManualLinkHref,children:[{tag:"span",cls:"x-tab-strip-text genapp-query-center-panel-tab-strip-link",html:this.userManualLinkText}]}]},true);l.on("mousedown",Ext.emptyFn,null,{stopPropagation:true})}function n(o){var p=Ext.DomHelper.insertBefore(h[0],{tag:"li",cls:"genapp-query-center-panel-tab-strip-top-button"},true);p.parent().setWidth("100%");p.on("mousedown",Ext.emptyFn,null,{stopPropagation:true});return new Ext.ComponentMgr.create(Ext.apply({renderTo:p.id},o))}this.mask=new Ext.LoadMask(this.getEl(),{msg:this.mapMaskMsg});this.centerPanel.doLayout();var k=[];if(!this.hideGridCsvExportMenuItem){k.push(this.gridCsvExportMenuItem=new Ext.menu.Item({text:this.csvExportMenuItemText,handler:this.exportCSV.createDelegate(this,["csv-export"]),iconCls:"genapp-query-center-panel-grid-csv-export-menu-item-icon"}));if(!this.hideGridKmlExportMenuItem){k.push(this.gridCsvExportMenuItem=new Ext.menu.Item({text:this.kmlExportMenuItemText,handler:this.exportCSV.createDelegate(this,["kml-export"]),iconCls:"genapp-query-center-panel-grid-csv-export-menu-item-icon"}))}if(!this.hideGridGeoJSONExportMenuItem){k.push(this.gridCsvExportMenuItem=new Ext.menu.Item({text:this.geojsonExportMenuItemText,handler:this.exportCSV.createDelegate(this,["geojson-export"]),iconCls:"genapp-query-center-panel-grid-csv-export-menu-item-icon"}))}}if(Ext.isEmpty(k)){this.hideCsvExportButton=true}if(!this.hideCsvExportButton){this.csvExportButton=n({xtype:"splitbutton",text:this.exportButtonText,disabled:true,handler:this.exportCSV.createDelegate(this,["csv-export"]),menu:this.csvExportButtonMenu=new Ext.menu.Menu({items:k})})}if(!this.hidePrintMapButton){this.printMapButton=n({xtype:"button",iconCls:"genapp-query-center-panel-print-map-button-icon",text:this.printMapButtonText,handler:this.printMap,scope:this})}},this,{single:true});this.queryPanelPinned=true;var f=null;if(!Genapp.hidePinButton){f=[{id:"pin",qtip:this.queryPanelPinToolQtip,hidden:true,handler:function(l,k,h){k.hide();h.header.child(".x-tool-unpin").show();this.queryPanelPinned=true},scope:this},{id:"unpin",qtip:this.queryPanelUnpinToolQtip,handler:function(l,k,h){k.hide();h.header.child(".x-tool-pin").show();this.queryPanelPinned=false},scope:this}]}var g=null;if(!this.hideCancelButton){g={xtype:"tbbutton",text:this.queryPanelCancelButtonText,tooltipType:"title",tooltip:this.queryPanelCancelButtonTooltip,cls:"genapp_query_formspanel_cancel_button",scope:this,handler:this.cancelRequest}}else{g={xtype:"tbspacer"}}var d=null;if(!this.hideResetButton){d={xtype:"tbbutton",text:this.queryPanelResetButtonText,tooltipType:"title",tooltip:this.queryPanelResetButtonTooltip,cls:"genapp_query_formspanel_reset_button",scope:this,handler:this.resetRequest}}else{d={xtype:"tbfill"}}var b={xtype:"tbbutton",width:this.searchButtonWidth,height:this.searchButtonHeight,text:this.queryPanelSearchButtonText,tooltipType:"title",tooltip:this.queryPanelSearchButtonTooltip,cls:"genapp_query_formspanel_search_button",scope:this,handler:this.submitRequest};var c={region:"west",title:this.queryPanelTitle,collapsible:true,margins:"0 5 0 0",titleCollapse:true,width:this.queryPanelWidth,frame:true,layout:"border",cls:"genapp_query_panel",items:[this.datasetPanel,this.formsPanel],tools:f,bbar:[g,d,b]};if(!this.hidePredefinedRequestSaveButton){c.tbar={cls:"genapp_query_panel_tbar",items:[{xtype:"tbbutton",text:this.queryPanelPredefinedRequestSaveButtonText,tooltipType:"title",tooltip:this.queryPanelPredefinedRequestSaveButtonTooltip,iconCls:"genapp-query-panel-predefined-request-save-button-icon",scope:this,handler:function(h,k){}}]}}this.queryPanel=new Ext.FormPanel(c);if(!this.hideRequestVerticalLabel){this.addVerticalLabel(this.queryPanel,"genapp-query-request-panel-ct-xcollapsed-vertical-label-div")}var a={frame:true,plain:true,enableTabScroll:true,cls:"genapp-query-details-panel",scrollIncrement:91,scrollRepeatInterval:100,idDelimiter:"___",listeners:{render:function(h){h.items.on("remove",function(k){if(this.items.getCount()===0){this.ownerCt.collapse()}},h)}}};if(!this.hideExportAsPdfButton){a.tbar=[{text:this.exportAsPdfButtonText,iconCls:"genapp-query-details-panel-pdf-export",handler:function(){var h=this.detailsPanel.getActiveTab();h.exportAsPDF()},scope:this}]}this.detailsPanel=new Ext.TabPanel(a);this.detailsPanelPinned=true;var f=null;if(!Genapp.hidePinButton){f=[{id:"pin",qtip:this.detailsPanelCtPinToolQtip,hidden:true,handler:function(l,k,h){k.hide();h.header.child(".x-tool-unpin").show();this.detailsPanelPinned=true},scope:this},{id:"unpin",qtip:this.detailsPanelCtUnpinToolQtip,handler:function(l,k,h){k.hide();h.header.child(".x-tool-pin").show();this.detailsPanelPinned=false},scope:this}]}this.detailsPanelCt=new Ext.Panel({region:"east",title:this.detailsPanelCtTitle,frame:true,split:true,layout:"fit",width:344,minWidth:200,collapsible:true,titleCollapse:true,collapsed:true,items:this.detailsPanel,tools:f,listeners:{expand:function(){if(this.centerPanel.getActiveTab() instanceof Genapp.GeoPanel){this.geoPanel.layersAndLegendsPanel.collapse()}else{this.centerPanel.activate(this.geoPanel);this.geoPanel.layersAndLegendsPanel.collapse();this.centerPanel.activate(this.gridPanel)}},scope:this}});if(!this.hideDetailsVerticalLabel){this.addVerticalLabel(this.detailsPanelCt,"genapp-query-details-panel-ct-xcollapsed-vertical-label-div")}this.featuresInformationPanel=new Ext.TabPanel({frame:true,plain:true,enableTabScroll:true,cls:"genapp-query-locations-panel",scrollIncrement:91,scrollRepeatInterval:100,idDelimiter:"___",listeners:{render:function(h){h.items.on("remove",function(k){if(this.items.getCount()===0){this.ownerCt.collapse()}},h)}}});this.featuresInformationPanelPinned=true;var f=null;if(!Genapp.hidePinButton){f=[{id:"pin",qtip:this.featuresInformationPanelCtPinToolQtip,hidden:true,handler:function(l,k,h){k.hide();h.header.child(".x-tool-unpin").show();this.featuresInformationPanelPinned=true},scope:this},{id:"unpin",qtip:this.featuresInformationPanelCtUnpinToolQtip,handler:function(l,k,h){k.hide();h.header.child(".x-tool-pin").show();this.featuresInformationPanelPinned=false},scope:this}]}this.featuresInformationPanelCt=new Ext.Panel({region:"south",title:this.featuresInformationPanelCtTitle,frame:true,split:true,layout:"fit",height:this.featuresInformationPanelCtHeight,collapsible:true,titleCollapse:true,collapsed:true,items:this.featuresInformationPanel,tools:f});var e=[this.centerPanel];if(!this.hideDetails){e.push(this.detailsPanelCt)}if(!this.hideMapDetails&&Genapp.map.featureinfo_maxfeatures!==1){e.push(this.featuresInformationPanelCt)}this.centerPanelCt=new Ext.Panel({layout:"border",region:"center",items:e});if(!this.items){this.items=[this.queryPanel,this.centerPanelCt]}Genapp.eventManager.on("getLocationInfo",this.getLocationInfo,this);Genapp.ConsultationPanel.superclass.initComponent.call(this)},updateWestPanels:function(b,d,f,e){var a=Ext.decode(b.responseText),c;this.formsPanel.body.update();for(c=0;c<a.data.length;c++){if(!(Ext.isEmpty(a.data[c].criteria)&&Ext.isEmpty(a.data[c].columns))){var g=a.data[c].id;var h=a.data[c].criteria;this.formsPanel.add(new Genapp.FieldForm({title:a.data[c].label,id:g,criteria:h,criteriaValues:e,columns:a.data[c].columns}));for(j=0;j<h.length;j++){if(h[j].type==="GEOM"){this.geomCriteriaInfo={formId:g,id:h[j].name}}}}}this.formsPanel.doLayout();if(!Ext.isEmpty(f)){if(f.collapseQueryPanel===true){this.queryPanel.collapse()}if(f.launchRequest===true){this.submitRequest()}}},renderLeftTools:function(f,e,a,g,d,b){var c="";if(!this.hideDetails){c='<div class="genapp-query-grid-slip" onclick="Genapp.cardPanel.consultationPage.openDetails(\'{0}\', \'ajaxgetdetails\');" ext:qtitle="'+this.openGridDetailsButtonTitle+'"ext:qwidth="'+this.tipDefaultWidth+'"ext:qtip="'+this.openGridDetailsButtonTip+'"></div>'}c+='<div class="genapp-query-grid-map" onclick="Genapp.cardPanel.consultationPage.displayLocation(\'{0}\',\'{1}\');" ext:qtitle="'+this.seeOnMapButtonTitle+'"ext:qwidth="'+this.tipDefaultWidth+'"ext:qtip="'+this.seeOnMapButtonTip+'"></div>';return String.format(c,a.data.id,a.data.location_centroid)},renderRightTools:function(f,e,a,g,d,b){var c="";if(!this.checkEditionRights||Genapp.userProviderId==a.data._provider_id){c='<div class="genapp-query-grid-edit genapp-query-grid-editUI" onclick="window.location.href=Genapp.base_url + \'dataedition/show-edit-data/{0}\';"ext:qtitle="'+this.editDataButtonTitle+'"ext:qwidth="'+this.tipDefaultWidth+'"ext:qtip="'+this.editDataButtonTip+'"></div>'}else{c='<div ext:qtip="'+this.cannotEditTip+'">&nbsp;</div>'}return String.format(c,a.data.id)},openDetails:function(d,a){if(!Ext.isEmpty(d)){var b=Ext.getCmp("consultation_panel");b.collapseQueryPanel();b.detailsPanel.ownerCt.expand();var c=b.detailsPanel.get(d);if(Ext.isEmpty(c)){c=b.detailsPanel.add(new Genapp.DetailsPanel({rowId:d,dataUrl:a}))}b.detailsPanel.activate(c)}},openFeaturesInformationSelection:function(c){this.featuresInformationSearchNumber++;c.featuresInformationSearchNumber=this.featuresInformationSearchNumber;if(!Ext.isEmpty(c.data)){var a=Ext.getCmp("consultation_panel");a.featuresInformationPanel.ownerCt.expand();var b=a.featuresInformationPanel.get(c.id);if(Ext.isEmpty(b)){b=a.featuresInformationPanel.add(new Genapp.CardGridDetailsPanel({initConf:c}))}a.featuresInformationPanel.activate(b)}},addgeomcriteria:function(){if(!Ext.isEmpty(this.geomCriteriaInfo)){var a=this.formsPanel.get(this.geomCriteriaInfo.formId);var b=a.addCriteria(this.geomCriteriaInfo.id);b.openMap()}},getChildren:function(e,f){var d=Ext.getCmp(e);var c=d.get(f);if(Ext.isEmpty(c)){var a=d.getLayout().activeItem.getId();var b=new Ext.LoadMask(Ext.getCmp(a).body,{msg:this.mapMaskMsg});b.show();Ext.Ajax.request({url:Genapp.ajax_query_url+"ajaxgetchildren",success:function(g,h){var k=Ext.decode(g.responseText);k.parentItemId=a;k.ownerCt=d;c=d.add(new Genapp.GridDetailsPanel({initConf:k}));d.getLayout().setActiveItem(c);b.hide()},failure:function(g,h){b.hide();console.log("server-side failure with status code "+g.status)},params:{id:f}})}else{d.getLayout().setActiveItem(c)}},displayChildren:function(b){var a=Ext.getCmp("consultation_panel");tab=a.featuresInformationPanel.get(b);if(!Ext.isEmpty(tab)){a.featuresInformationPanel.activate(tab)}else{Ext.Ajax.request({url:Genapp.ajax_query_url+"ajaxgetchildren",success:function(c,e){var f=Ext.decode(c.responseText);var d=Ext.getCmp("consultation_panel");d.openFeaturesInformationSelection(f)},failure:function(c,d){console.log("server-side failure with status code "+c.status)},params:{id:b}})}},getParent:function(b){var a=Ext.getCmp(b);a.getLayout().setActiveItem(Ext.getCmp(a.getLayout().activeItem.parentItemId))},displayLocation:function(c,b){var a=Ext.getCmp("consultation_panel");a.centerPanel.activate(a.geoPanel);a.geoPanel.zoomToFeature(c,b)},cancelRequest:function(){if(this.requestConn&&this.requestConn!==null){this.requestConn.abort();this.gridPanel.loadMask.hide();this.mapMask.hide()}},resetRequest:function(){this.updateDatasetFormsPanel(this.datasetComboBox.getValue())},submitRequest:function(){var c;if(!this.hideCsvExportButton){this.csvExportButton.disable()}this.geoPanel.disableLayersAndLegends(this.geoPanel.layersActivation.request,true,false,true);if(!this.mapResultLayers){var a=this.geoPanel.layersActivation.request;this.mapResultLayers=[];if(!Ext.isEmpty(a)){for(c=0;c<a.length;c++){var b=this.geoPanel.map.getLayersByName(a[c])[0];b.events.register("loadend",this,function(e){this.mapResultLayersLoadEnd[e.object.name]=1;var d=0;for(b in this.mapResultLayersLoadEnd){if(typeof this.mapResultLayersLoadEnd[b]!=="function"){d+=this.mapResultLayersLoadEnd[b]}}if(d===this.mapResultLayers.length){this.mapMask.hide()}});this.mapResultLayers.push(b)}}}this.mapResultLayersLoadEnd={};for(c=0;c<this.mapResultLayers.length;c++){var b=this.mapResultLayers[c];this.mapResultLayersLoadEnd[b.name]=0}if(!this.mapMask){this.mapMask=new Ext.LoadMask(this.geoPanel.getEl(),{msg:this.mapMaskMsg})}if(this.showGridOnSubmit){this.centerPanel.activate(this.geoPanel);this.mapMask.show();this.centerPanel.activate(this.gridPanel);this.gridPanel.loadMask.show()}else{this.centerPanel.activate(this.gridPanel);this.gridPanel.loadMask.show();this.centerPanel.activate(this.geoPanel);this.mapMask.show()}for(c=0;c<this.mapResultLayersLoadEnd.length;c++){var b=this.mapResultLayersLoadEnd[c];b.display(false)}this.geoPanel.clean();this.clearGrid();Ext.Ajax.on("beforerequest",function(e,d){this.requestConn=e},this,{single:true});this.formsPanel.findParentByType("form").getForm().submit({url:Genapp.ajax_query_url+"ajaxgetresultcolumns",timeout:480000,success:function(g,k){this.requestConn=null;var f=k.result.columns;var e=[{dataIndex:"leftTools",header:"",renderer:this.renderLeftTools.createDelegate(this),sortable:false,fixed:true,menuDisabled:true,align:"center",width:50}];var h=[];var d;var l;for(c=0;c<f.length;c++){d={header:Genapp.util.htmlStringFormat(f[c].label),sortable:true,dataIndex:f[c].name,width:100,tooltip:Genapp.util.htmlStringFormat(f[c].definition),hidden:f[c].hidden};l={name:f[c].name};switch(f[c].type){case"STRING":d.xtype="gridcolumn";l.type="string";break;case"INTEGER":d.xtype="gridcolumn";break;case"NUMERIC":d.xtype="numbercolumn";if(f[c].decimals!==null){d.format=this.numberPattern(".",f[c].decimals)}break;case"DATE":d.xtype="datecolumn";d.format=this.dateFormat;break;case"IMAGE":d.header="";d.width=30;d.sortable=false;d.renderer=this.renderIcon.createDelegate(this,[Genapp.util.htmlStringFormat(f[c].label)],true);break;default:d.xtype="gridcolumn";l.type="auto";break}e.push(d);h.push(l)}if(!this.hideGridDataEditButton){e.push({dataIndex:"rightTools",header:"",renderer:this.renderRightTools.createDelegate(this),sortable:false,fixed:true,menuDisabled:true,align:"center",width:30})}this.gridDSReader.updateMetadata({root:"rows",fields:h,totalProperty:"total"});if(this.centerPanel.getActiveTab() instanceof Genapp.GeoPanel){this.centerPanel.activate(this.gridPanel);this.gridPanel.getColumnModel().setConfig(e);this.centerPanel.activate(this.geoPanel)}else{this.gridPanel.getColumnModel().setConfig(e)}this.gridPanel.getView().reset();Ext.Ajax.on("beforerequest",function(n,m){this.requestConn=n},this,{single:true});this.gridPanel.getStore().load({params:{start:0,limit:this.gridPageSize},callback:function(){this.requestConn=null;this.getResultsBBox();if(this.autoZoomOnResultsFeatures!==true){this.geoPanel.enableLayersAndLegends(this.geoPanel.layersActivation.request,true,true)}this.collapseQueryPanel();this.collapseDetailsPanel();if(!this.hideCsvExportButton){this.csvExportButton.enable()}this.gridPanel.syncSize()},scope:this})},failure:function(d,e){if(e.result&&e.result.errorMessage){Ext.Msg.alert(this.alertErrorTitle,e.result.errorMessage)}else{Ext.Msg.alert(this.alertErrorTitle,this.alertRequestFailedMsg)}this.gridPanel.loadMask.hide();this.mapMask.hide()},scope:this})},renderIcon:function(f,d,a,g,c,b,e){if(!Ext.isEmpty(f)){return'<img src="'+Genapp.base_url+'/js/genapp/resources/images/picture.png"ext:qtitle="'+e+' :"ext:qwidth="'+this.tipImageDefaultWidth+'"ext:qtip="'+Genapp.util.htmlStringFormat('<img width="'+(this.tipImageDefaultWidth-12)+'" src="'+Genapp.base_url+"/img/photos/"+f+'" />')+'">'}},collapseQueryPanel:function(){if(!this.queryPanelPinned){this.queryPanel.collapse()}},collapseDetailsPanel:function(){if(!this.detailsPanelPinned){this.detailsPanel.ownerCt.collapse()}},updateFormsPanel:function(b,c,a){this.formsPanel.removeAll(true);this.formsPanel.getUpdater().showLoading();Ext.Ajax.request({url:Genapp.ajax_query_url+"ajaxgetqueryform",success:this.updateWestPanels.createDelegate(this,[c,a],true),method:"POST",params:b,scope:this})},updatePredefinedRequestFormsPanel:function(b,a){this.updateFormsPanel({requestName:b},{launchRequest:this.launchRequestOnPredefinedRequestLoad,collapseQueryPanel:this.collapseQueryPanelOnPredefinedRequestLoad},a)},updateDatasetFormsPanel:function(a,b){this.updateFormsPanel({datasetId:a},b)},updateDatasetPanelToolTip:function(a){if(!Ext.isEmpty(this.datasetPanelToolTip)){this.datasetPanelToolTip.destroy()}this.datasetPanelToolTip=new Ext.ToolTip({anchor:"left",target:this.datasetPanel.getEl(),title:a.label,html:a.definition,showDelay:Ext.QuickTips.getQuickTip().showDelay,dismissDelay:Ext.QuickTips.getQuickTip().dismissDelay})},loadRequest:function(a){this.datasetComboBox.setValue(a.datasetId);this.updatePredefinedRequestFormsPanel(a.name,a.fieldValues)},clearGrid:function(){var a=this.gridPanel.getStore();if(a.getCount()!==0){this.gridPanel.getBottomToolbar().reset()}if(this.gridPanel.rendered){this.gridPanel.getColumnModel().setConfig({});this.gridPanel.getView().updateAllColumnWidths();this.gridPanel.getView().reset()}},exportCSV:function(a){var b=function(d,e,c){this.showMask(true);window.location=Genapp.ajax_query_url+a};if(Ext.isIE&&!this.hideCsvExportAlert){Ext.Msg.show({title:this.csvExportAlertTitle,msg:this.csvExportAlertMsg,cls:"genapp-query-center-panel-csv-export-alert",buttons:Ext.Msg.OK,fn:b,animEl:this.csvExportButton.getEl(),icon:Ext.MessageBox.INFO,scope:this});this.hideCsvExportAlert=true}else{b.call(this)}},printMap:function(d,f){var a=this.geoPanel.map.center,e=this.geoPanel.map.zoom,c;var g=this.geoPanel.map.getLayersBy("visibility",true);var b="";for(c=0;c<g.length;c++){currentLayer=g[c];if(currentLayer.printable!==false&&currentLayer.visibility==true&&currentLayer.inRange==true){b+=g[c].name+","}}b=b.substr(0,b.length-1);Genapp.util.post(Genapp.base_url+"map/printmap",{center:a,zoom:e,layers:b})},showMask:function(a){this.mask.show();if(a){window.onfocus=(function(){this.mask.hide();window.onfocus=Ext.emptyFn}).createDelegate(this)}},numberPattern:function(c,e,a){var d=[],b;d.push("0");if(a){d.push(a+"000")}if(e){d.push(c);for(b=0;b<e;b++){d.push("0")}}return d.join("")},hideMask:function(){this.mask.hide()},addVerticalLabel:function(b,a){b.on("collapse",function(c){Ext.get(c.id+"-xcollapsed").createChild({tag:"div",cls:a})},this,{single:true})},getStatus:function(a,b){Ext.Ajax.request({url:Genapp.base_url+a+"/ajax-get-status",success:function(f,d){var c=Ext.decode(f.responseText),e;if(Ext.isEmpty(c.success)||c.success===false){this.hideMask();e="An error occured during the status request.";if(!Ext.isEmpty(c.errorMsg)){e+=" "+c.errorMsg}Ext.Msg.alert("Error...",e)}else{if(c.status==="RUNNING"){this.getStatus.defer(2000,this,[a,b])}else{if(c.status==="OK"){this.hideMask();b.call(this)}else{this.hideMask();e="An error occured during the status request.";if(!Ext.isEmpty(c.errorMsg)){e+=" "+c.errorMsg}Ext.Msg.alert("Error...",e)}}}},failure:function(){this.hideMask();var c="An error occured during the status request.";Ext.Msg.alert("Error...",c)},scope:this})},getLocationInfo:function(a,b){if(this.geoPanel.map.id==b){if(Genapp.map.featureinfo_maxfeatures===1){this.openDetails(a.data[0][0],"ajaxgetdetails")}else{this.openFeaturesInformationSelection(a)}}},getResultsBBox:function(){Ext.Ajax.request({url:Genapp.ajax_query_url+"ajaxgetresultsbbox",success:function(e,b){try{var a=Ext.decode(e.responseText);if(Ext.isEmpty(a.success)||a.success===false){if(!Ext.isEmpty(a.errorMsg)){throw (a.errorMsg)}throw ("")}else{if(!Ext.isEmpty(a.resultsbbox)){this.geoPanel.resultsBBox=a.resultsbbox}else{this.geoPanel.resultsBBox=null}if(this.autoZoomOnResultsFeatures===true){if(this.geoPanel.resultsBBox!==null){this.geoPanel.zoomOnBBox(this.geoPanel.resultsBBox)}this.geoPanel.enableLayersAndLegends(this.geoPanel.layersActivation.request,true,true)}}}catch(c){var d="An error occured during the bounding box request.";if(!Ext.isEmpty(c)){d+=" "+c}Ext.Msg.alert("Error...",d)}},failure:function(a,b){var c="An error occured during the bounding box request. Status code : "+a.status;Ext.Msg.alert("Error...",c)},scope:this})}});Ext.reg("consultationpage",Genapp.ConsultationPanel);Genapp.DetailsPanel=Ext.extend(Ext.Panel,{editLinkButtonTitle:"Edit this data",editLinkButtonTip:"Edit this data in the edition page.",headerWidth:60,closable:true,autoScroll:true,dataUrl:null,pdfUrl:"pdfexport",cls:"genapp-query-details-panel",hideSeeChildrenButton:false,seeChildrenButtonTip:"Display the children of the data into the grid details panel.",seeChildrenButtonTitleSingular:"See the only child",seeChildrenButtonTitlePlural:"See the children",tipDefaultWidth:300,titleCharsMaxLength:8,loadingMsg:"Loading...",initComponent:function(){this.title='<div style="width:'+this.headerWidth+'px;">'+this.loadingMsg+"</div>";this.on("render",this.updateDetails,this);this.itemId=this.rowId;this.tpl=new Ext.XTemplate('<tpl style="display:block" for="maps1.urls">','<img style="display:block; position:absolute; left:1px; top:1px" title="title" src="{url}">',"</tpl>",'<tpl for="maps2.urls">','<img style="display:block; position:absolute; left:1px; top:311px" title="title" src="{url}">',"</tpl>",'<legends style="display:block; position:absolute; left:1px; top:621px">','<tpl for="formats">',"<fieldset>","<legend>",'<div class="genapp-query-details-panel-fieldset-title">{title}</div>','<tpl if="!'+this.hideSeeChildrenButton+' && children_count != 0">','<div class="genapp-query-details-panel-see-children" ',"onclick=\"Genapp.cardPanel.consultationPage.displayChildren('{id}');\"",'ext:qtitle="{[(values.children_count == 1) ? "'+this.seeChildrenButtonTitleSingular+'" : "'+this.seeChildrenButtonTitlePlural+' (" + values.children_count + ")"]}" ','ext:qwidth="'+this.tipDefaultWidth+'" ','ext:qtip="'+this.seeChildrenButtonTip+'">&nbsp;',"</div>","</tpl>",'<tpl if="editURL">','<div class="genapp-query-details-panel-edit-link" ',"onclick=\"window.location.href='"+Genapp.base_url+"dataedition/show-edit-data/{editURL}'\"",'ext:qtitle="'+this.editLinkButtonTitle+'"','ext:qwidth="'+this.tipDefaultWidth+'" ','ext:qtip="'+this.editLinkButtonTip+'">&nbsp;',"</div>","</tpl>","</legend>",'<div class="genapp-query-details-panel-fieldset-body">','<tpl for="fields">',"<tpl if=\"type != 'IMAGE'\">",'<p><b>{label} :</b> {[(Ext.isEmpty(values.value) || (Ext.isString(values.value) && Ext.isEmpty(values.value.trim()))) ? "-" : values.value]}</p>',"</tpl>","<tpl if=\"type == 'IMAGE'\">","{[(Ext.isEmpty(values.value) || (Ext.isString(values.value) && Ext.isEmpty(values.value.trim()))) ? '' : '<img class=\"genapp-query-details-image-field\" title=\"' + values.label + '\" src=\""+Genapp.base_url+"/img/photos/' + values.value + '\">']}","</tpl>","</tpl>","</div>","</fieldset>","</tpl>","</legends>",{compiled:true,disableFormats:true});Genapp.DetailsPanel.superclass.initComponent.call(this)},updateDetails:function(a){this.getUpdater().showLoading();Ext.Ajax.request({url:Genapp.ajax_query_url+this.dataUrl,success:function(b,c){var d=Ext.decode(b.responseText);var e=d.title;if(d.title.length>this.titleCharsMaxLength){e=d.title.substring(0,this.titleCharsMaxLength)+"..."}this.setTitle('<div style="width:'+this.headerWidth+'px;" ext:qtip="'+d.title+'">'+e+"</div>");this.tpl.overwrite(this.body,d)},method:"POST",params:{id:this.rowId},scope:this})},exportAsPDF:function(){document.location.href=Genapp.ajax_query_url+this.pdfUrl+"?id="+this.rowId}});Genapp.DocSearchPage=Ext.extend(Ext.Panel,{title:"Documents",frame:true,layout:"border",cls:"genapp-doc-search-page",border:false,id:"doc_search_page",ref:"docSearchPage",alertRequestFailedMsg:"Sorry, the request failed...",indexKey:"pdfIndex",centerPanelTitle:"Document",initComponent:function(){this.requestPanel=new Genapp.DocSearchRequestPanel({indexKey:this.indexKey,listeners:{requestResponse:function(a){this.addResultPanel(a)},scope:this}});this.westPanel=new Ext.Panel({region:"west",layout:"accordion",width:"400px",items:[this.requestPanel]});this.pdf=new Genapp.PDFComponent({xtype:"pdf",url:"pdf"});this.centerPanel=new Ext.Panel({title:this.centerPanelTitle,region:"center",frame:true,margins:{top:0,right:0,bottom:0,left:5},items:this.pdf});if(!this.items){this.items=[this.westPanel,this.centerPanel]}Genapp.ConsultationPanel.superclass.initComponent.call(this)},addResultPanel:function(a){if(!Ext.isEmpty(this.resultPanel)){this.resultPanel.destroy()}this.resultPanel=new Genapp.DocSearchResultPanel({hits:a,listeners:{rowselect:function(b){this.pdf.reset()},pdfselect:function(b){this.pdf.updateUrl(Genapp.base_url+b.url)},scope:this}});this.westPanel.add(this.resultPanel);this.westPanel.doLayout();this.resultPanel.expand()}});Ext.reg("docsearchpage",Genapp.DocSearchPage);Genapp.DocSearchRequestPanel=Ext.extend(Ext.Panel,{title:"Filter(s)",frame:true,textFieldLabel:"Text search in the document body",alertErrorTitle:"An error occured",alertRequestFailedMsg:"Sorry, the request failed...",resetButtonText:"Reset the filters",filterButtonText:"Filter",fieldLabels:{},initComponent:function(){this.getMetadataFields();if(!this.items){this.items=[{xtype:"form",ref:"formPanel",labelWidth:130,bodyStyle:"padding:5px 10px 0",defaults:{width:230},defaultType:"textfield",items:[{xtype:"textfield",name:"TEXT",fieldLabel:this.textFieldLabel,enableKeyEvents:true,listeners:{keydown:function(b,a){if(a.keyCode===a.ENTER){this.launchFilteredRequest()}},scope:this}},{xtype:"hidden",name:"INDEX_KEY",value:this.indexKey}],buttons:[{xtype:"button",text:this.resetButtonText,handler:function(){this.formPanel.form.reset()},scope:this},{xtype:"button",text:this.filterButtonText,handler:this.launchFilteredRequest,scope:this}]}]}Genapp.DocSearchRequestPanel.superclass.initComponent.call(this)},launchFilteredRequest:function(){this.formPanel.getForm().submit({url:Genapp.base_url+"indexedfilequery/search",timeout:480000,success:function(a,b){this.fireEvent("requestResponse",b.result.hits)},failure:function(a,b){if(b.result&&b.result.success==false){if(b.result.errorMessage){Ext.Msg.alert(this.alertErrorTitle,b.result.errorMessage)}}else{Ext.Msg.alert(this.alertErrorTitle,this.alertRequestFailedMsg)}},scope:this})},addMetadataFields:function(a){var c,b,e,d;for(c=0;c<a.length;c++){e=a[c];d=[];for(b=0;b<e.data.length;b++){d.push([e.data[b]])}this.formPanel.insert(c,{xtype:"combo",name:e.name,fieldLabel:this.getFieldLabel(e.label),mode:"local",store:new Ext.data.ArrayStore({id:0,fields:["code"],data:d}),valueField:"code",displayField:"code",enableKeyEvents:true,listeners:{keydown:function(g,f){if(f.keyCode===f.ENTER){this.launchFilteredRequest()}},scope:this}})}this.formPanel.doLayout()},getMetadataFields:function(){Ext.Ajax.request({url:Genapp.base_url+"indexedfilequery/getmetadatafields",method:"GET",disableCaching:false,params:{INDEX_KEY:this.indexKey},timeout:480000,success:function(a,b){fields=Ext.decode(a.responseText);this.addMetadataFields(fields)},failure:function(a,b){Ext.Msg.alert(this.alertErrorTitle,this.alertRequestFailedMsg)},scope:this})},getFieldLabel:function(a){if(!Ext.isEmpty(this.fieldLabels[a])){return this.fieldLabels[a]}return a}});Ext.reg("docsearchrequestpanel",Genapp.DocSearchRequestPanel);Genapp.DocSearchResultPanel=Ext.extend(Ext.Panel,{title:"Result(s)",columnLabels:{id:"Identifier",score:"Score",url:"Url"},frame:true,layout:"border",docSlipPanelHeight:150,initComponent:function(){this.fields=[];this.columns=[];this.template='<div class="doc-search-page-doc-slip-panel-div">';var b;for(b in this.hits[0]){if(typeof this.hits[0][b]!=="function"){this.fields.push(b);var a={header:this.getColumnLabel(b),dataIndex:b};if(b=="id"||b=="score"||b=="url"){a.hidden=true}this.columns.push(a);if(b!="id"&&b!="score"&&b!="url"){this.template+="<p><b>"+this.getColumnLabel(b)+" :</b> {"+b+"}</p>"}}}this.template+="</div>";this.store=new Ext.data.JsonStore({autoDestroy:true,autoLoad:true,fields:this.fields,data:this.hits});this.gridPanel=new Ext.grid.GridPanel({region:"center",store:this.store,colModel:new Ext.grid.ColumnModel({defaults:{width:120,sortable:true},columns:this.columns}),sm:new Ext.grid.RowSelectionModel({singleSelect:true,listeners:{rowselect:function(e,d,c){this.docSlipPanel.update(c.data);this.fireEvent("rowselect",c.data)},scope:this}}),listeners:{keydown:function(c){if(c.keyCode===c.ENTER){this.onEnter()}},rowdblclick:function(c,e,d){this.onEnter()},viewready:function(c){c.getSelectionModel().selectFirstRow();c.getView().focusRow(0)},scope:this}});this.docSlipPanel=new Ext.form.FieldSet({region:"south",height:this.docSlipPanelHeight,tpl:new Ext.Template(this.template,{compiled:true,disableFormats:true})});this.items=[this.gridPanel,this.docSlipPanel];Genapp.DocSearchResultPanel.superclass.initComponent.call(this)},onEnter:function(){var b=this.gridPanel.getSelectionModel();var a=b.getSelections();this.fireEvent("pdfselect",a[0].data)},getColumnLabel:function(a){if(!Ext.isEmpty(this.columnLabels[a])){return this.columnLabels[a]}return a}});Ext.reg("docsearchresultpanel",Genapp.DocSearchResultPanel);Ext.override(Ext.form.BasicForm,{setNotDirty:function(){this.items.each(function(a){if(!this.disabled&&this.rendered){a.originalValue=a.getValue()}})}});Genapp.EditionPanel=Ext.extend(Ext.Panel,{geoMapWindowTitle:"Draw the localisation",unsavedChangesMessage:"You have unsaved changes",title:"Edition",cls:"genapp_edition_panel",id:"edition_panel",dataId:"",ref:"editionPage",padding:20,autoScroll:true,fieldSetWidth:700,fieldWidth:450,parentsFSTitle:"Parents Summary",dataEditFSDeleteButtonText:"Delete",dataEditFSDeleteButtonTooltip:"Delete the data",dataEditFSDeleteButtonConfirm:"Do you really want to delete this data ?",dataEditFSDeleteButtonDisabledTooltip:"Data cannot be deleted (children exit)",dataEditFSValidateButtonText:"Validate",dataEditFSValidateButtonTooltip:"Save changes",dataEditFSSavingMessage:"Saving...",dataEditFSLoadingMessage:"Loading...",dataEditFSValidateButtonDisabledTooltip:"Data cannot be edited (not enought rights)",childrenFSTitle:"Children Summary",childrenFSAddNewChildButtonText:"Add",childrenFSAddNewChildButtonTooltip:"Add a new child",contentTitleAddPrefix:"Add",contentTitleEditPrefix:"Edit",tipEditPrefix:"Edit the",tipDefaultWidth:350,addMode:"ADD",editMode:"EDIT",layout:"column",dataEditForm:null,dataEditFS:null,deleteButton:null,validateButton:null,loadMask:null,initComponent:function(){var f="";var b="";switch(this.mode){case this.addMode:f=this.contentTitleAddPrefix+"&nbsp";b=Genapp.base_url+"dataedition/ajax-get-add-form/"+this.dataId;break;case this.editMode:f=this.contentTitleEditPrefix+"&nbsp";b=Genapp.base_url+"dataedition/ajax-get-edit-form/"+this.dataId;break}this.formDS=new Ext.data.JsonStore({url:b,method:"POST",root:"data",autoLoad:true,fields:[{name:"name",mapping:"name"},{name:"data",mapping:"data"},{name:"format",mapping:"format"},{name:"label",mapping:"label"},{name:"inputType",mapping:"inputType"},{name:"unit",mapping:"unit"},{name:"type",mapping:"type"},{name:"subtype",mapping:"subtype"},{name:"definition",mapping:"definition"},{name:"decimals",mapping:"decimals"},{name:"value",mapping:"value"},{name:"valueLabel",mapping:"valueLabel"},{name:"editable",mapping:"editable"},{name:"insertable",mapping:"insertable"},{name:"required",mapping:"required"},{name:"params",mapping:"params"}],idProperty:"name",listeners:{load:this.buildFieldForm,scope:this},waitMsg:"Loading..."});var d=[];this.headerPanel=new Ext.BoxComponent({html:"<h1>"+f+this.dataTitle.toLowerCase()+"<h1>"});d.push(this.headerPanel);this.messagePanel=new Ext.BoxComponent({html:this.message,cls:"message"});d.push(this.messagePanel);if(!Ext.isEmpty(this.parentsLinks)){this.parentsFS=new Ext.form.FieldSet({html:this.getEditLinks(this.parentsLinks)});d.push(this.parentsFS)}this.deleteButton=new Ext.Button({text:this.dataEditFSDeleteButtonText,disabled:this.disableDeleteButton,tooltip:this.dataEditFSDeleteButtonTooltip,handler:this.askDataDeletion,scope:this});if(this.disableDeleteButton){this.deleteButton.tooltip=this.dataEditFSDeleteButtonDisabledTooltip}this.validateButton=new Ext.Button({text:this.dataEditFSValidateButtonText,tooltip:this.dataEditFSValidateButtonTooltip,handler:this.editData,formBind:true,scope:this});if(this.mode=="EDIT"){var e=[this.deleteButton,this.validateButton]}else{var e=[this.validateButton]}this.dataEditForm=new Ext.FormPanel({monitorValid:true,border:false,trackResetOnLoad:true,url:Genapp.base_url+"dataedition/ajax-validate-edit-data",labelWidth:200,defaults:{msgTarget:"side",width:250},buttonAlign:"center",buttons:e});this.loadMask=new Ext.LoadMask(Ext.getBody(),{msg:this.dataEditFSLoadingMessage});this.loadMask.show();this.dataEditFS=new Ext.form.FieldSet({title:"&nbsp;"+this.dataTitle+"&nbsp;",items:this.dataEditForm});d.push(this.dataEditFS);if(this.mode=="EDIT"){if(!Ext.isEmpty(this.childrenConfigOptions)){var a=[];for(var c in this.childrenConfigOptions){if(typeof this.childrenConfigOptions[c]!=="function"){var g=this.childrenConfigOptions[c];g.title="&nbsp;"+g.title+"&nbsp;";if(Ext.isEmpty(g.html)){g.html=this.getEditLinks(g.childrenLinks);delete g.childrenLinks}g.buttons=[];g.buttons[0]={text:this.childrenFSAddNewChildButtonText,tooltip:this.childrenFSAddNewChildButtonTooltip,handler:(function(h){document.location=h}).createCallback(g.AddChildURL),scope:this};a.push(new Ext.form.FieldSet(g))}}this.childrenFS=new Ext.form.FieldSet({items:a,cls:"columnLabelColor"});d.push(this.childrenFS)}}this.items=[{xtype:"box",html:"&nbsp;",columnWidth:0.5,border:false},{items:d,width:this.fieldSetWidth,border:false,defaults:{width:this.fieldSetWidth}},{xtype:"box",html:"&nbsp;",columnWidth:0.5,border:false}];Ext.EventManager.addListener(window,"beforeunload",this.onBeforeUnload,this,{normalized:false});Genapp.EditionPanel.superclass.initComponent.call(this)},buildFieldForm:function(c,b){var e="";var a=[];for(var d=0;d<b.length;d++){var f=this.getFieldConfig(b[d].data,true);a.push(f);if(f.name.indexOf("PROVIDER_ID")!==-1){e=f.value}}modeItem={xtype:"hidden",name:"MODE",hiddenName:"MODE",value:this.mode};a.push(modeItem);this.dataEditForm.add(a);if(this.checkEditionRights){if(Genapp.userProviderId!==e){this.validateButton.disable();this.validateButton.setTooltip(this.dataEditFSValidateButtonDisabledTooltip)}}this.loadMask.hide();this.dataEditForm.doLayout()},getFieldConfig:function(a,e){var f={};f.name=a.name;if((this.mode=="EDIT"&&!Ext.isEmpty(a.editable)&&a.editable!=="1")||(this.mode=="ADD"&&!Ext.isEmpty(a.insertable)&&a.insertable!=="1")){f.xtype="hidden"}else{f.itemCls="trigger-field columnLabelColor";switch(a.inputType){case"SELECT":if(a.type=="ARRAY"){f.xtype="superboxselect";f.stackItems=true;f.hiddenName=f.name+"[]";f.allowAddNewData=true;f.forceFormValue=false;f.hideClearButton=true;f.removeValuesFromStore=false}else{f.xtype="combo";f.hiddenName=f.name}f.triggerAction="all";f.typeAhead=true;f.displayField="label";f.valueField="code";f.emptyText=Genapp.FieldForm.prototype.criteriaPanelTbarComboEmptyText;f.mode="remote";var b=[];if(a.type=="ARRAY"){if(a.valueLabel){for(var d=0;d<a.valueLabel.length;d++){b.push({code:a.value[d],label:a.valueLabel[d]})}}}else{b.push({code:a.value,label:a.valueLabel})}var c=[{name:"code",mapping:"code"},{name:"label",mapping:"label"}];if(a.subtype==="DYNAMIC"){f.store=new Ext.data.JsonStore({root:"codes",idProperty:"code",fields:c,url:Genapp.base_url+"/query/ajaxgetdynamiccodes",baseParams:{unit:a.unit},data:{codes:b}})}else{f.store=new Ext.data.JsonStore({root:"codes",idProperty:"code",fields:c,url:Genapp.base_url+"/query/ajaxgetcodes",baseParams:{unit:a.unit},data:{codes:b}})}break;case"DATE":f.xtype="datefield";f.format=Genapp.FieldForm.prototype.dateFormat;break;case"NUMERIC":f.xtype="numberfield";if(a.subtype==="RANGE"){f.decimalPrecision=(a.params.decimals==null)?20:a.params.decimals}if(a.subtype==="INTEGER"){f.allowDecimals=false;f.decimalPrecision=0}break;case"CHECKBOX":f.xtype="switch_checkbox";f.ctCls="improvedCheckbox";switch(a.default_value){case 1:case"1":case true:case"true":f.inputValue="1";break;default:f.inputValue="0";break}break;case"RADIO":case"TEXT":switch(a.subtype){case"INTEGER":f.xtype="numberfield";f.allowDecimals=false;break;case"NUMERIC":f.xtype="numberfield";break;default:f.xtype="textfield";break}break;case"GEOM":f.xtype="geometryfield";f.hideSearchButton=true;f.zoomToFeatureOnInit=true;f.mapWindowTitle=this.geoMapWindowTitle;break;case"TREE":f.xtype="treefield";f.valueLabel=a.valueLabel;if(a.type=="ARRAY"){f.multiple=true;f.name=f.name+"[]"}f.unit=a.unit;break;case"TAXREF":f.xtype="taxreffield";f.valueLabel=a.valueLabel;f.unit=a.unit;break;case"IMAGE":f.xtype="imagefield";f.id=this.dataId+"/"+a.name;f.hiddenName=f.name;break;default:f.xtype="field";break}}if(!Ext.isEmpty(a.value)){if(a.value instanceof Array){f.value=a.value.join(",")}else{f.value=a.value}}if(a.required&&a.required==="1"){f.allowBlank=false}if(!Ext.isEmpty(a.definition)){f.listeners={render:function(h){if(h.inputType!="hidden"){var g=Ext.get("x-form-el-"+h.id).parent();var k=g.child(".x-form-item-label");Ext.QuickTips.register({target:k,title:a.label,text:a.definition,width:200})}},scope:this}}f.fieldLabel=a.label;f.width=this.fieldWidth;return f},editData:function(){this.dataEditForm.getForm().submit({url:Genapp.base_url+"dataedition/ajax-validate-edit-data",timeout:480000,success:this.editSuccess,failure:this.editFailure,scope:this,waitMsg:this.dataEditFSSavingMessage})},askDataDeletion:function(){Ext.Msg.confirm("Confirm Deletion",this.dataEditFSDeleteButtonConfirm,function(a,b){if(a=="yes"){this.deleteData(this.dataId)}},this)},deleteData:function(a){Ext.Ajax.request({url:Genapp.base_url+"dataedition/ajax-delete-data/"+a,success:this.deleteSuccess,failure:this.deleteFailure,scope:this})},editSuccess:function(a,b){this.mode="EDIT";var c=Ext.util.JSON.decode(b.response.responseText);this.dataEditForm.getForm().setNotDirty();if(!Ext.isEmpty(c.message)){this.messagePanel.update(c.message)}if(!Ext.isEmpty(c.redirectLink)){window.location=c.redirectLink}if(!Ext.isEmpty(c.errorMessage)){this.messagePanel.update(c.errorMessage);console.log("Server-side failure with status code (1): "+b.response.status);console.log("errorMessage : "+b.response.errorMessage)}},editFailure:function(a,b){var c=Ext.util.JSON.decode(b.response.responseText);if(!Ext.isEmpty(c.errorMessage)){this.messagePanel.update(c.errorMessage)}console.log("Server-side failure with status code (2): "+b.response.status);console.log("errorMessage : "+b.response.errorMessage)},deleteSuccess:function(a,b){var c=Ext.decode(a.responseText);if(!Ext.isEmpty(c.message)){this.messagePanel.update(c.message)}this.dataEditForm.getForm().setNotDirty();if(!Ext.isEmpty(c.redirectLink)){window.location=c.redirectLink}if(!Ext.isEmpty(c.errorMessage)){this.messagePanel.update(c.errorMessage);console.log("Server-side failure with status code (1): "+a.status);console.log("errorMessage : "+a.errorMessage)}},deleteFailure:function(a,b){console.log(a);var c=Ext.decode(a.responseText);if(!Ext.isEmpty(c.errorMessage)){this.messagePanel.update(c.errorMessage)}console.log("Server-side failure with status code (2): "+a.status);console.log("errorMessage : "+a.errorMessage)},getEditLinks:function(a){var c="",g;for(var b in a){if(typeof a[b]!=="function"){var d=this.tipEditPrefix+"&nbsp"+a[b].text.toLowerCase()+" :";g="";for(var f in a[b].fields){var e=a[b].fields[f];if(typeof e!=="function"){e=Ext.isEmpty(e)?" -":e;g+="<b>"+f+" : </b>"+e+"</br>"}}c+='<a href="'+a[b].url+'" ext:qtitle="<u>'+d+'</u>" ext:qwidth="'+this.tipDefaultWidth+'" ext:qtip="'+g+'" >'+a[b].text+"</a><br/>"}}return c},onBeforeUnload:function(b){var c=false;var a=this.unsavedChangesMessage;if(this.dataEditForm.getForm().isDirty()){c=true}if(c===true){if(b){b.returnValue=a}if(window.event){window.event.returnValue=a}return a}}});Ext.reg("editionpage",Genapp.EditionPanel);Genapp.FieldForm=Ext.extend(Ext.Panel,{frame:true,cls:"genapp-query-field-form-panel",criteriaPanelTbarLabel:"Criteria",criteriaPanelTbarComboLoadingText:"Searching...",columnsPanelTbarLabel:"Columns",columnsPanelTbarComboEmptyText:"Select...",columnsPanelTbarComboLoadingText:"Searching...",columnsPanelTbarAddAllButtonTooltip:"Add all the columns",columnsPanelTbarRemoveAllButtonTooltip:"Remove all the columns",criteriaLabelWidth:120,initComponent:function(){this.criteriaDS=new Ext.data.JsonStore({idProperty:"name",fields:[{name:"name",mapping:"name"},{name:"label",mapping:"label"},{name:"inputType",mapping:"inputType"},{name:"unit",mapping:"unit"},{name:"type",mapping:"type"},{name:"subtype",mapping:"subtype"},{name:"definition",mapping:"definition"},{name:"is_default",mapping:"is_default"},{name:"default_value",mapping:"default_value"},{name:"decimals",mapping:"decimals"},{name:"params",mapping:"params"}],data:this.criteria});this.columnsDS=new Ext.data.JsonStore({idProperty:"name",fields:[{name:"name",mapping:"name"},{name:"label",mapping:"label"},{name:"definition",mapping:"definition"},{name:"is_default",mapping:"is_default"},{name:"decimals",mapping:"decimals"},{name:"params",mapping:"params"}],data:this.columns});this.criteriaPanel=new Ext.Panel({layout:"form",hidden:Ext.isEmpty(this.criteria)?true:false,hideMode:"offsets",labelWidth:this.criteriaLabelWidth,cls:"genapp-query-criteria-panel",defaults:{labelStyle:"padding: 0; margin-top:3px",width:180},listeners:{add:function(b,g,e){var c=g.name,d=0,k,a="",h=g.ownerCt,f="first-child";if(b.defaultType==="panel"){if(e===0){if(g.rendered){g.getEl().addClass(f)}else{if(g.itemCls){g.itemCls+=" "+f}else{g.itemCls=f}}}do{a=c+"["+d+++"]"}while(h.items.findIndex("name",a)!==-1);g.name=g.hiddenName=a}},scope:this},items:Ext.isEmpty(this.criteriaValues)?this.getDefaultCriteriaConfig():this.getFilledCriteriaConfig(),tbar:[{xtype:"tbfill"},new Ext.Toolbar.TextItem(this.criteriaPanelTbarLabel),{xtype:"tbspacer"},{xtype:"combo",hiddenName:"Criteria",store:this.criteriaDS,editable:false,displayField:"label",valueField:"name",mode:"local",width:220,maxHeight:100,triggerAction:"all",emptyText:this.criteriaPanelTbarComboEmptyText,loadingText:this.criteriaPanelTbarComboLoadingText,listeners:{scope:this,select:{fn:this.addSelectedCriteria,scope:this}}},{xtype:"tbspacer"}]});this.columnsPanel=new Ext.Panel({layout:"form",hidden:Ext.isEmpty(this.columns)?true:false,hideMode:"offsets",cls:"genapp-query-columns-panel",items:this.getDefaultColumnsConfig(),tbar:[{xtype:"tbbutton",tooltip:this.columnsPanelTbarAddAllButtonTooltip,ctCls:"genapp-tb-btn",iconCls:"genapp-tb-btn-add",handler:this.addAllColumns,scope:this},{xtype:"tbbutton",tooltip:this.columnsPanelTbarRemoveAllButtonTooltip,ctCls:"genapp-tb-btn",iconCls:"genapp-tb-btn-remove",handler:this.removeAllColumns,scope:this},{xtype:"tbfill"},new Ext.Toolbar.TextItem(this.columnsPanelTbarLabel),{xtype:"tbspacer"},{xtype:"combo",fieldLabel:"Columns",hiddenName:"Columns",store:this.columnsDS,editable:false,displayField:"label",valueField:"name",mode:"local",width:220,maxHeight:100,triggerAction:"all",emptyText:this.columnsPanelTbarComboEmptyText,loadingText:this.columnsPanelTbarComboLoadingText,listeners:{scope:this,select:{fn:this.addColumn,scope:this}}},{xtype:"tbspacer"}]});if(!this.items){this.items=[this.criteriaPanel,this.columnsPanel]}this.collapsible=true;this.titleCollapse=true;Genapp.FieldForm.superclass.initComponent.call(this);this.doLayout()},addSelectedCriteria:function(c,a,b){if(c!==null){c.clearValue();c.collapse()}this.criteriaPanel.add(this.getCriteriaConfig(a.data,false));this.criteriaPanel.doLayout()},addCriteria:function(c,b){var a=this.criteriaDS.getById(c);a.data.default_value=b;var d=this.criteriaPanel.add(this.getCriteriaConfig(a.data,false));this.criteriaPanel.doLayout();return d},getDefaultCriteriaConfig:function(){var a=[];this.criteriaDS.each(function(c){if(c.data.is_default){var b=c.data.default_value;if(!Ext.isEmpty(b)){var f=b.split(";"),e;for(e=0;e<f.length;e++){var d=c.copy();d.data.default_value=f[e];this.items.push(this.form.getCriteriaConfig(d.data,false))}}else{this.items.push(this.form.getCriteriaConfig(c.data))}}},{form:this,items:a});return a},getFilledCriteriaConfig:function(){var a=[];this.criteriaDS.each(function(b){var e,c,d;if(!Ext.isEmpty(this.form.criteriaValues)){e=this.form.criteriaValues["criteria__"+b.data.name];if(!Ext.isEmpty(e)){if(!Ext.isArray(e)){e=[e]}for(d=0;d<e.length;d++){c=b.copy();c.data.default_value=e[d];this.items.push(this.form.getCriteriaConfig(c.data,false))}}}},{form:this,items:a});return a},addColumn:function(c,a,b){if(c!==null){c.clearValue();c.collapse()}if(this.columnsPanel.find("name","column__"+a.data.name).length===0){this.columnsPanel.add(this.getColumnConfig(a.data));this.columnsPanel.doLayout()}},getColumnConfig:function(a){var b={xtype:"container",autoEl:"div",cls:"genapp-query-column-item",width:"100%",items:[{xtype:"box",autoEl:{tag:"div",cls:"columnLabelBin columnLabelBinColor",html:"&nbsp;&nbsp;&nbsp;&nbsp;"},listeners:{render:function(c){c.getEl().on("click",function(f,e,d){this.columnsPanel.remove(c.ownerCt)},this,{single:true})},scope:this}},{xtype:"box",autoEl:{tag:"span",cls:"columnLabel columnLabelColor","ext:qtitle":Genapp.util.htmlStringFormat(a.label),"ext:qwidth":200,"ext:qtip":Genapp.util.htmlStringFormat(a.definition),html:a.label}},{xtype:"hidden",name:"column__"+a.name,value:"1"}]};return b},getDefaultColumnsConfig:function(){var a=[];this.columnsDS.each(function(b){if(b.data.is_default){this.items.push(this.form.getColumnConfig(b.data))}},{form:this,items:a});return a},addAllColumns:function(){this.columnsDS.each(function(a){this.addColumn(null,a)},this)},removeAllColumns:function(){this.columnsPanel.removeAll()}});Ext.apply(Genapp.FieldForm.prototype,{criteriaPanelTbarComboEmptyText:"Select...",dateFormat:"Y/m/d",getCriteriaConfig:function(b,d){if(!Ext.isEmpty(b.default_value)&&Ext.isString(b.default_value)&&b.default_value.indexOf(";")!==-1){var a=[];var f=b.default_value.split(";"),c;for(c=0;c<f.length;c++){b.default_value=f[c];a.push(Genapp.FieldForm.prototype.getCriteriaConfig(b,d))}return a}var e={};e.name="criteria__"+b.name;switch(b.inputType){case"SELECT":e.xtype="combo";e.itemCls="trigger-field";e.hiddenName=e.name;e.triggerAction="all";e.typeAhead=true;e.displayField="label";e.valueField="code";e.emptyText=Genapp.FieldForm.prototype.criteriaPanelTbarComboEmptyText;if(b.subtype==="DYNAMIC"){e.mode="remote";e.store=new Ext.data.JsonStore({autoDestroy:true,autoLoad:true,root:"codes",idProperty:"code",fields:[{name:"code",mapping:"code"},{name:"label",mapping:"label"}],url:Genapp.base_url+"query/ajaxgetdynamiccodes",baseParams:{unit:b.unit}})}else{e.mode="remote";e.store=new Ext.data.JsonStore({autoDestroy:true,autoLoad:true,root:"codes",idProperty:"code",fields:[{name:"code",mapping:"code"},{name:"label",mapping:"label"}],url:Genapp.base_url+"query/ajaxgetcodes",baseParams:{unit:b.unit}})}break;case"DATE":e.xtype="daterangefield";e.itemCls="trigger-field";e.format=Genapp.FieldForm.prototype.dateFormat;break;case"NUMERIC":e.xtype="numberrangefield";e.itemCls="trigger-field";if(b.subtype==="RANGE"){e.minValue=b.params.min;e.maxValue=b.params.max;e.decimalPrecision=(b.params.decimals===null)?20:b.params.decimals}if(b.subtype==="INTEGER"){e.allowDecimals=false;e.decimalPrecision=0}break;case"CHECKBOX":e.xtype="switch_checkbox";e.ctCls="improvedCheckbox";switch(b.default_value){case 1:case"1":case true:case"true":e.inputValue="1";break;default:e.inputValue="0";break}break;case"RADIO":case"TEXT":switch(b.subtype){case"INTEGER":e.xtype="numberfield";e.allowDecimals=false;break;case"NUMERIC":e.xtype="numberfield";break;default:e.xtype="textfield";break}break;case"GEOM":e.xtype="geometryfield";e.itemCls="trigger-field";e.hideDrawPointButton=true;e.hideDrawLineButton=true;break;case"TREE":e.xtype="treefield";e.valueLabel=b.valueLabel;e.unit=b.unit;break;case"TAXREF":e.xtype="taxreffield";e.valueLabel=b.valueLabel;e.unit=b.unit;break;default:e.xtype="field";break}if(!Ext.isEmpty(b.default_value)){e.value=b.default_value}if(!Ext.isEmpty(b.fixed)){e.disabled=b.fixed}e.fieldLabel=b.label;if(Ext.isEmpty(e.listeners)){e.listeners={scope:this}}e.listeners.render=function(k){if(k.xtype!="hidden"){var h=Ext.get("x-form-el-"+k.id).parent();var l=h.child(".x-form-item-label");Ext.QuickTips.register({target:l,title:b.label,text:b.definition,width:200});if(!d){l.addClass("columnLabelColor");l.addClass("labelNextBin");var g=h.createChild({tag:"div",cls:"filterBin"},l);g.insertHtml("afterBegin","&nbsp;&nbsp;&nbsp;");g.on("click",function(o,n,m){k.ownerCt.remove(k)},this,{single:true})}if(k.xtype==="combo"&&!Ext.isEmpty(k.getStore().proxy)){k.getStore().on("load",function(n,m,o){this.reset()},k)}}};return e}});Genapp.GeoPanel=Ext.extend(Ext.Panel,{title:"Map",popupTitle:"Feature information",tabTip:"The map with the request's results's location",layerPanelTitle:"Layers",layerPanelTabTip:"The layers's tree",legendPanelTitle:"Legends",legendPanelTabTip:"The layers's legends",panZoomBarControlTitle:"Zoom",navigationControlTitle:"Drag the map",invalidWKTMsg:"The feature cannot be displayed",zoomToFeaturesControlTitle:"Zoom to the features",zoomToResultControlTitle:"Zoom to the results",drawPointControlTitle:"Draw a point",drawLineControlTitle:"Draw a line",drawFeatureControlTitle:"Draw a polygon",modifyFeatureControlTitle:"Update the feature",tbarDeleteFeatureButtonTooltip:"Delete the feature",tbarPreviousButtonTooltip:"Previous Position",tbarNextButtonTooltip:"Next Position",zoomBoxInControlTitle:"Zoom in",zoomBoxOutControlTitle:"Zoom out",zoomToMaxExtentControlTitle:"Zoom to max extend",locationInfoControlTitle:"Get information about the result location",selectFeatureControlTitle:"Select a feature from the selected layer",featureInfoControlTitle:"Get information about the selected layer",legalMentionsLinkText:"Legal Mentions",addGeomCriteriaButtonText:"Select an area",frame:true,collapsible:true,titleCollapse:true,header:false,layout:"border",isDrawingMap:false,featureWKT:null,hideLayersAndLegendVerticalLabel:false,rightPanelCollapsed:false,rightPanelWidth:170,hideDrawPointButton:false,hideLegalMentions:true,hideLayerSelector:true,hideSnappingButton:true,hideGetFeatureButton:true,hideFeatureInfoButton:true,hideGeomCriteriaToolbarButton:true,zoomToFeatureOnInit:false,legalMentionsLinkHref:Genapp.base_url+"map/show-legal-mentions",minZoomLevel:0,resultsBBox:null,layersActivation:{},layersList:[],vectorLayer:null,info:new OpenLayers.Control.WMSGetFeatureInfo(),wfsLayer:null,baseLayer:null,wktFormat:new OpenLayers.Format.WKT(),mapPanel:null,map:null,mapToolbar:null,layersAndLegendsPanel:null,layerPanel:null,layerTree:null,legendPanel:null,layerSelector:null,projectionLabel:" m (L2e)",zoomToFeatureControl:null,snappingControl:null,featureInfoControl:null,initComponent:function(){this.addEvents("afterinit");var a=new GeoExt.ZoomSlider({vertical:true,height:150,x:18,y:85,plugins:new GeoExt.ZoomSliderTip({template:"<div><b>{zoom}</b></div>"})});this.layerPanel=new Ext.Panel({layout:"fit",cls:"genapp-query-layer-tree-panel",title:this.layerPanelTitle,tabTip:this.layerPanelTabTip,frame:true,layoutConfig:{animate:true}});this.legendPanel=new Ext.Panel({cls:"genapp-query-legend-panel",title:this.legendPanelTitle,tabTip:this.legendPanelTabTip,frame:true,autoScroll:true,layoutConfig:{animate:true}});this.layersAndLegendsPanel=new Ext.TabPanel({region:"east",width:this.rightPanelWidth,collapsed:this.rightPanelCollapsed,collapsible:true,titleCollapse:false,cls:"genapp-query-map-right-panel",activeItem:0,split:true,items:[this.layerPanel,this.legendPanel]});if(!this.hideLayersAndLegendVerticalLabel){this.layersAndLegendsPanel.on("collapse",function(b){Ext.get(b.id+"-xcollapsed").createChild({tag:"div",cls:"genapp-query-map-right-panel-xcollapsed-vertical-label-div"})},this,{single:true})}this.mapToolbar=new Ext.Toolbar();this.map=this.initMap();this.mapPanel=new GeoExt.MapPanel({region:"center",cls:"genapp_query_mappanel",frame:true,layout:"anchor",tbar:this.mapToolbar,items:[a],map:this.map});this.items=[this.mapPanel,this.layersAndLegendsPanel];if(!this.hideLegalMentions){this.mapPanel.addListener("render",this.addLegalMentions,this)}this.initToolbar();Ext.Ajax.request({url:Genapp.base_url+"map/ajaxgetlayers",scope:this,success:this.addLayersAndLayersTree});if(this.isDrawingMap){this.on("treerendered",function(){if(this.zoomToFeatureOnInit&&this.vectorLayer.features&&this.vectorLayer.features.length>0){this.zoomToFeatureControl.activate();this.zoomToFeatureControl.trigger()}})}Genapp.GeoPanel.superclass.initComponent.call(this)},addLegalMentions:function(a){a.el.createChild({tag:"div",cls:"genapp-map-panel-legal-mentions",children:[{tag:"a",target:"_blank",href:this.legalMentionsLinkHref,html:this.legalMentionsLinkText}]},a.el.child(".olMapViewport",true)).on("click",Ext.emptyFn,null,{stopPropagation:true})},addLayersAndLayersTree:function(response){this.layersList=[];this.layersActivation={};var layersObject=Ext.decode(response.responseText),i;for(j=0;j<layersObject.layers.length;j++){var layerObject=layersObject.layers[j];var viewServiceName=layerObject.viewServiceName;var viewServiceNameStr="layersObject.view_services."+viewServiceName.toString();var viewServiceObject=eval("("+viewServiceNameStr+")");var newLayer=this.buildLayer(layerObject,viewServiceObject);this.layersList.push(newLayer);var activateType=layerObject.params.activateType.toLowerCase();if(Ext.isEmpty(this.layersActivation[activateType])){this.layersActivation[activateType]=[layerObject.name]}else{this.layersActivation[activateType].push(layerObject.name)}if(layerObject.legendServiceName!=""){var legendServiceName=layerObject.legendServiceName;var legendServiceNameStr="layersObject.legend_services."+legendServiceName.toString();var legendServiceObject=eval("("+legendServiceNameStr+")");this.buildLegend(layerObject,legendServiceObject)}}if(!this.hideLayerSelector){OpenLayers.ProxyHost="/cgi-bin/proxy.cgi?url=";var styleMap=new OpenLayers.StyleMap(OpenLayers.Util.applyDefaults({fillOpacity:0,strokeColor:"green",strokeWidth:3,strokeOpacity:1},OpenLayers.Feature.Vector.style["default"]));this.wfsLayer=new OpenLayers.Layer.Vector("WFS Layer",{strategies:[new OpenLayers.Strategy.BBOX()],protocol:new OpenLayers.Protocol.HTTP({url:null,params:{typename:null,service:"WFS",format:"WFS",version:"1.0.0",request:"GetFeature",srs:Genapp.map.projection},format:new OpenLayers.Format.GML({extractAttributes:true})})});this.wfsLayer.printable=false;this.wfsLayer.displayInLayerSwitcher=false;this.wfsLayer.extractAttributes=false;this.wfsLayer.styleMap=styleMap;this.wfsLayer.visibility=false}this.setMapLayers(this.map);Ext.Ajax.request({url:Genapp.base_url+"map/ajaxgettreelayers",success:this.initLayerTree,scope:this})},buildLayer:function(b,k){var a=k.urls;var f={};for(var c in b.params){f[c]=b.params[c]}for(var c in k.params){f[c]=k.params[c]}if(k.params.SERVICE=="WMTS"){var g=f.layers[0];var e=new OpenLayers.LonLat(-20037508,20037508);var l=[156543.033928,78271.516964,39135.758482,19567.879241,9783.939621,4891.96981,2445.984905,1222.992453,611.496226,305.748113,152.874057,76.437028,38.218514,19.109257,9.554629,4.777302,2.388657,1.194329,0.597164,0.298582,0.149291,0.074646];var d={options:b.options,name:b.name,url:a.toString(),layer:g,tileOrigin:e,serverResolutions:l,opacity:b.options.opacity,visibility:b.options.visibility,isBaseLayer:b.options.isBaseLayer};var h={};for(var c in d){h[c]=d[c]}for(var c in f){h[c]=f[c]}newLayer=new OpenLayers.Layer.WMTS(h)}else{if(k.params.SERVICE=="WMS"){newLayer=new OpenLayers.Layer.WMS(b.name,a,f,b.options)}else{Ext.Msg.alert('Please provide the "'+b.servicename+'" service type.')}}newLayer.displayInLayerSwitcher=false;return newLayer},buildLegend:function(a,c){var b=this.legendPanel.add(new Ext.BoxComponent({id:this.id+a.name,autoEl:{tag:"div",children:[{tag:"span",html:a.options.label,cls:"x-form-item x-form-item-label"},{tag:"img",src:c.urls.toString()+"LAYER="+a.params.layers+"&SERVICE="+c.params.SERVICE+"&VERSION="+c.params.VERSION+"&REQUEST="+c.params.REQUEST+"&Format=image/png&WIDTH=160&HASSLD="+(a.params.hasSLD?"true":"false")}]}}));if(a.params.isDisabled||a.params.isHidden||!a.params.isChecked){b.on("render",function(d){d.hide()});b.on("show",(function(d,e){if(d.rendered){d.getEl().child("img").dom.src=c.urls.toString()+"LAYER="+a.params.layers+"&SERVICE="+c.params.SERVICE+"&VERSION="+c.params.VERSION+"&REQUEST="+c.params.REQUEST+"&Format=image/png&WIDTH=160&HASSLD="+(a.params.hasSLD?"true":"false")}}).createCallback(b,a.params))}},setMapLayers:function(b){b.addLayer(this.baseLayer);for(var a=0;a<this.layersList.length;a++){b.addLayer(this.layersList[a])}if(!this.hideLayerSelector&&this.wfsLayer!==null){b.addLayer(this.wfsLayer);this.snappingControl.addTargetLayer(this.wfsLayer)}b.addLayer(this.vectorLayer)},initMap:function(){var a=[];for(var d=this.minZoomLevel;d<Genapp.map.resolutions.length;d++){a.push(Genapp.map.resolutions[d])}var f=new OpenLayers.Map({controls:[],resolutions:a,numZoomLevels:Genapp.map.numZoomLevels,projection:Genapp.map.projection,units:"m",tileSize:new OpenLayers.Size(Genapp.map.tilesize,Genapp.map.tilesize),maxExtent:new OpenLayers.Bounds(Genapp.map.x_min,Genapp.map.y_min,Genapp.map.x_max,Genapp.map.y_max),eventListeners:{changelayer:function(g){if(g.property==="visibility"){this.toggleLayersAndLegendsForZoom(g.layer)}},scope:this}});this.vectorLayer=new OpenLayers.Layer.Vector("Vector Layer",{printable:false,displayInLayerSwitcher:false});this.baseLayer=new OpenLayers.Layer("Empty baselayer",{isBaseLayer:true,printable:false,displayInLayerSwitcher:false});this.setMapLayers(f);f.addControl(new OpenLayers.Control.Navigation());f.addControl(new OpenLayers.Control.MousePosition({prefix:"X: ",separator:" - Y: ",suffix:this.projectionLabel,numDigits:0,title:"MousePosition"}));f.addControl(new OpenLayers.Control.Scale());f.addControl(new OpenLayers.Control.ScaleLine({title:"ScaleLine",bottomOutUnits:"",bottomInUnits:""}));f.setCenter(new OpenLayers.LonLat(Genapp.map.x_center,Genapp.map.y_center),Genapp.map.defaultzoom);if(this.isDrawingMap){if(!Ext.isEmpty(this.maxFeatures)){this.vectorLayer.preFeatureInsert=function(g){if(this.features.length>this.maxFeatures){this.removeFeatures([this.features[0]])}}}var b=new OpenLayers.Control.SelectFeature(this.vectorLayer,{multiple:false,clickout:true,toggle:true,title:this.selectFeatureControlTitle});f.addControl(b);b.activate();if(this.featureWKT){var c=this.wktFormat.read(this.featureWKT);if(c){this.vectorLayer.addFeatures([c])}else{alert(this.invalidWKTMsg)}}}else{var e=new OpenLayers.Control.SelectFeature(this.vectorLayer,{hover:true});f.addControl(e);e.activate()}return f},initLayerTree:function(a){var b=Ext.decode(a.responseText);this.layerTree=new Genapp.tree.LayerTreePanel({rootChildren:b,map:this.map});this.layerTree.on("afterrender",function(d){this.layerTree.eachLayerChild(function(e){if(e.attributes.disabled===true){e.forceDisable=true}else{e.forceDisable=false}});for(var c=0;c<this.map.layers.length;c++){this.toggleLayersAndLegendsForZoom(this.map.layers[c])}},this);this.layerPanel.add(this.layerTree);this.layerPanel.doLayout();this.fireEvent("treerendered",this)},initToolbar:function(){this.mapToolbar.map=this.map;if(this.isDrawingMap){this.zoomToFeatureControl=new OpenLayers.Control.ZoomToFeatures(this.vectorLayer,{map:this.map,maxZoomLevel:9,ratio:1.05,autoActivate:false});var v=new GeoExt.Action({control:this.zoomToFeatureControl,iconCls:"zoomstations",tooltip:this.zoomToFeaturesControlTitle});this.mapToolbar.add(v);if(!this.hideDrawPointButton){var D=new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.Point);var t=new GeoExt.Action({control:D,map:this.map,tooltip:this.drawPointControlTitle,toggleGroup:"editing",group:"drawControl",checked:false,iconCls:"drawpoint"});this.mapToolbar.add(t)}if(!this.hideDrawLineButton){var k=new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.Path);var m=new GeoExt.Action({control:k,map:this.map,tooltip:this.drawLineControlTitle,toggleGroup:"editing",group:"drawControl",checked:false,iconCls:"drawline"});this.mapToolbar.add(m)}var u=new OpenLayers.Control.DrawFeature(this.vectorLayer,OpenLayers.Handler.Polygon);var e=new GeoExt.Action({control:u,map:this.map,tooltip:this.drawFeatureControlTitle,toggleGroup:"drawControl",toggleGroup:"editing",checked:false,iconCls:"drawpolygon"});this.mapToolbar.add(e);var d=new OpenLayers.Control.ModifyFeature(this.vectorLayer,{mode:OpenLayers.Control.ModifyFeature.RESHAPE});var g=new GeoExt.Action({control:d,map:this.map,tooltip:this.modifyFeatureControlTitle,toggleGroup:"editing",group:"drawControl",checked:false,iconCls:"modifyfeature"});this.mapToolbar.add(g);var x=new OpenLayers.Control.SelectFeature(this.vectorLayer,{displayClass:"olControlModifyFeature",onSelect:function(F){this.vectorLayer.destroyFeatures([F])},scope:this,type:OpenLayers.Control.TYPE_TOOL});var b=new GeoExt.Action({control:x,map:this.map,tooltip:this.tbarDeleteFeatureButtonTooltip,toggleGroup:"editing",group:"drawControl",checked:false,iconCls:"deletefeature"});this.mapToolbar.add(b);this.mapToolbar.addSeparator()}else{if(!this.hideGeomCriteriaToolbarButton){var q=new Ext.Button({text:this.addGeomCriteriaButtonText,iconCls:"addgeomcriteria",handler:function(){this.fireEvent("addgeomcriteria")},scope:this});this.mapToolbar.add(q)}}this.mapToolbar.addFill();if(!this.hideLayerSelector){this.layerSelector={xtype:"layerselector",geoPanelId:this.id};this.snappingControl=new OpenLayers.Control.Snapping({layer:this.vectorLayer,targets:[this.vectorLayer],greedy:false});var o=new GeoExt.Action({control:this.snappingControl,map:this.map,tooltip:"Snapping",toggleGroup:"snapping",group:"LayerTools",checked:false,iconCls:"snapping"});Genapp.eventManager.on("selectLayer",this.layerSelected,this);this.getFeatureControl=new OpenLayers.Control.GetFeatureControl({map:this.map});var f=new GeoExt.Action({control:this.getFeatureControl,map:this.map,tooltip:this.selectFeatureControlTitle,toggleGroup:"editing",group:"LayerTools",checked:false,iconCls:"selectFeature"});Genapp.eventManager.on("getFeature",this.getFeature,this);this.featureInfoControl=new OpenLayers.Control.FeatureInfoControl({layerName:this.vectorLayer.name,map:this.map});var C=new GeoExt.Action({control:this.featureInfoControl,map:this.map,toggleGroup:"editing",group:"LayerTools",checked:false,tooltip:this.featureInfoControlTitle,iconCls:"feature-info"});if(!this.hideSnappingButton){this.mapToolbar.add(o)}if(!this.hideGetFeatureButton){this.mapToolbar.add(f)}if(!this.hideFeatureInfoButton){this.mapToolbar.add(C)}this.mapToolbar.add(this.layerSelector);this.mapToolbar.addSeparator()}var B=new OpenLayers.Control.NavigationHistory({});this.map.addControl(B);B.activate();var a=new Ext.Toolbar.Button({iconCls:"back",tooltip:this.tbarPreviousButtonTooltip,disabled:true,handler:B.previous.trigger});var c=new Ext.Toolbar.Button({iconCls:"next",tooltip:this.tbarNextButtonTooltip,disabled:true,handler:B.next.trigger});this.mapToolbar.add(a);this.mapToolbar.add(c);B.previous.events.register("activate",a,function(){this.setDisabled(false)});B.previous.events.register("deactivate",a,function(){this.setDisabled(true)});B.next.events.register("activate",c,function(){this.setDisabled(false)});B.next.events.register("deactivate",c,function(){this.setDisabled(true)});var s=new OpenLayers.Control.LocationInfoControl({layerName:Genapp.map.featureinfo_typename,geoPanelId:this.id});var n=new GeoExt.Action({control:s,map:this.map,toggleGroup:"editing",group:"navControl",checked:false,tooltip:this.locationInfoControlTitle,iconCls:"feature-info"});this.mapToolbar.add(n);var r=new OpenLayers.Control.ZoomBox({title:this.zoomBoxInControlTitle});var z=new GeoExt.Action({control:r,map:this.map,tooltip:this.zoomBoxInControlTitle,toggleGroup:"editing",group:"navControl",checked:false,iconCls:"zoomin"});this.mapToolbar.add(z);var A=new OpenLayers.Control.ZoomBox({out:true,title:this.zoomBoxOutControlTitle});var E=new GeoExt.Action({control:A,map:this.map,tooltip:this.zoomBoxOutControlTitle,toggleGroup:"editing",group:"navControl",checked:false,iconCls:"zoomout"});this.mapToolbar.add(E);var p=new OpenLayers.Control.Navigation({isDefault:true,mouseWheelOptions:{interval:100}});var l=new GeoExt.Action({control:p,map:this.map,tooltip:this.navigationControlTitle,toggleGroup:"editing",group:"navControl",checked:true,iconCls:"pan"});this.mapToolbar.add(l);this.mapToolbar.addSeparator();var y=new GeoExt.Action({handler:this.zoomOnResultsBBox,scope:this,map:this.map,tooltip:this.zoomToResultControlTitle,checked:false,iconCls:"zoomstations"});this.mapToolbar.add(y);var h=new OpenLayers.Control.ZoomToMaxExtent({map:this.map,active:false});var w=new GeoExt.Action({control:h,map:this.map,tooltip:this.zoomToMaxExtentControlTitle,checked:false,iconCls:"zoomfull"});this.mapToolbar.add(w)},clean:function(){this.vectorLayer.destroyFeatures(this.vectorLayer.features)},zoomToFeature:function(c,b){var a=this.wktFormat.read(b);a.attributes.id=c.substring(c.lastIndexOf("__")+2);this.vectorLayer.destroyFeatures(this.vectorLayer.features);this.map.setLayerIndex(this.vectorLayer,100);if(a){this.vectorLayer.addFeatures([a])}else{alert(this.invalidWKTMsg)}this.map.setCenter(new OpenLayers.LonLat(a.geometry.x,a.geometry.y),7)},zoomOnBBox:function(g){if(!Ext.isEmpty(g)){var d=1;var a=this.map.numZoomLevels-1;var c=this.wktFormat.read(g);var f=c.geometry.getBounds();f=f.scale(d);var e=0;if((f.getWidth()===0)&&(f.getHeight()===0)){e=a}else{var b=this.map.getZoomForExtent(f);e=(b>a)?a:b}this.map.setCenter(f.getCenterLonLat(),e)}},zoomOnResultsBBox:function(){this.zoomOnBBox(this.resultsBBox)},toggleLayersAndLegends:function(e){var f=[],c=[],d=[],a=[],b;for(b in e){if(e.hasOwnProperty(b)){switch(e[b]){case"checked":f.push(b);break;case"unchecked":c.push(b);break;case"disable":d.push(b);break;case"hide":a.push(b);break;default:break}}}this.enableLayersAndLegends(f,true,true);this.enableLayersAndLegends(c,false,true);this.disableLayersAndLegends(d,true,false,true);this.disableLayersAndLegends(a,true,true,true)},enableLayersAndLegends:function(h,b,g){if(!Ext.isEmpty(h)){var a=this.layerPanel.isVisible(),c;this.layersAndLegendsPanel.activate(this.layerPanel);for(c=0;c<h.length;c++){var d=this.layerTree.getNodeByLayerName(h[c]);if(!Ext.isEmpty(d)){var f=d.id;if(g!==false){this.layerTree.getNodeById(f).forceDisable=false}if(this.layerTree.getNodeById(f).zoomDisable!==true){this.layerTree.getNodeById(f).enable()}this.layerTree.getNodeById(f).getUI().show();if(b===true){var e=this.map.getLayersByName(h[c]);e[0].redraw(true);this.layerTree.toggleNodeCheckbox(f,true)}}}this.layersAndLegendsPanel.activate(this.legendPanel);this.setLegendsVisible(h,true);if(a){this.layersAndLegendsPanel.activate(this.layerPanel)}}else{console.warn("EnableLayersAndLegends : layerNames parameter is empty.")}},disableLayersAndLegends:function(g,a,c,f){var b;if(!Ext.isEmpty(g)&&(this.layerTree!==null)){for(b=0;b<g.length;b++){var d=this.layerTree.getNodeByLayerName(g[b]);if(!Ext.isEmpty(d)){var e=d.id;if(a===true){this.layerTree.toggleNodeCheckbox(e,false)}var d=this.layerTree.getNodeById(e);if(c===true){d.getUI().hide()}d.disable();if(f!==false){d.forceDisable=true}}this.setLegendsVisible([g[b]],false)}}},toggleLayersAndLegendsForZoom:function(a){if(!Ext.isEmpty(this.layerTree)){var b=this.layerTree.getNodeByLayerName(a.name);if(!Ext.isEmpty(b)&&!b.hidden){if(!a.calculateInRange()){b.zoomDisable=true;this.disableLayersAndLegends([a.name],false,false,false)}else{b.zoomDisable=false;if(b.forceDisable!==true){this.enableLayersAndLegends([a.name],false,false)}}}}},setLegendsVisible:function(e,d){var b;for(b=0;b<e.length;b++){var a=this.legendPanel.findById(this.id+e[b]);if(!Ext.isEmpty(a)){if(d===true){var c=this.map.getLayersByName(e[b]);if(c[0].calculateInRange()&&c[0].getVisibility()){a.show()}else{a.hide()}}else{a.hide()}}}},layerSelected:function(e,f){if(this.info){this.info.destroy()}if(f==this.id){if(e.data.code!==null){var c=e.data.code;var b=e.data.url;var a=this.popupTitle;this.wfsLayer.protocol.featureType=c;this.wfsLayer.protocol.options.featureType=c;this.wfsLayer.protocol.format.featureType=c;this.wfsLayer.protocol.params.typename=c;this.wfsLayer.protocol.options.url=b;this.wfsLayer.destroyFeatures();originalLayers=this.map.getLayersByName(c);if(originalLayers!=null){originalLayer=originalLayers[0];this.wfsLayer.maxResolution=originalLayer.maxResolution;this.wfsLayer.maxScale=originalLayer.maxScale;this.wfsLayer.minResolution=originalLayer.minResolution;this.wfsLayer.minScale=originalLayer.minScale;this.wfsLayer.alwaysInRange=false;this.wfsLayer.calculateInRange()}this.wfsLayer.setVisibility(true);this.wfsLayer.moveTo(null,true,false);if(this.getFeatureControl!==null){this.getFeatureControl.protocol=new OpenLayers.Protocol.WFS({url:this.wfsLayer.protocol.url,featureType:this.wfsLayer.protocol.featureType})}if(this.featureInfoControl!==null){this.featureInfoControl.layerName=c}if(this.getFeatureControl!==null){this.getFeatureControl.layerName=c}this.wfsLayer.refresh();this.wfsLayer.strategies[0].update({force:true})}else{this.wfsLayer.setVisibility(false)}for(var d=0;d<this.layersList.length;d++){if(this.layersList[d].name==c){this.info=new OpenLayers.Control.WMSGetFeatureInfo({queryVisible:true,infoFormat:"application/vnd.ogc.gml",maxFeatures:1,multiple:false,layers:[this.layersList[d]],eventListeners:{getfeatureinfo:function(k){if(window.DOMParser){parser=new DOMParser();xmlDoc=parser.parseFromString(k.text,"text/xml")}else{xmlDoc=new ActiveXObject("Microsoft.XMLDOM");xmlDoc.async=false;xmlDoc.loadXML(k.text)}var h="<ul>";if(typeof(xmlDoc.children[0].children[0].children[0])!="undefined"){countXmlDoc=xmlDoc.children[0].children[0].children[0].children.length;for(var g=1;g<countXmlDoc;g++){h+="<li>";h+=xmlDoc.children[0].children[0].children[0].children[g].localName+": "+xmlDoc.children[0].children[0].children[0].children[g].childNodes[0].nodeValue;h+="</li>"}}h+="</ul>";popup=new GeoExt.Popup({title:a,location:this.map.getLonLatFromPixel(k.xy),width:200,map:this.map,html:h,maximizable:false,collapsible:false,unpinnable:false});popup.show()}}});this.map.addControl(this.info);this.info.activate();break}}}},getFeature:function(b,a){if(a==this.map.id){if(this.vectorLayer!==null){this.vectorLayer.addFeatures(b)}}},destroy:function(){this.baseLayer=null;this.wktFormat=null;this.layersActivation=null;this.layersList=null;this.featureInfoControl=null;if(this.map){this.map.destroy();this.map=null}if(this.selectorButton){this.selectorButton.destroy();this.selectorButton=null}if(this.vectorLayer){this.vectorLayer.destroy();this.vectorLayer=null}if(this.wfsLayer){this.wfsLayer.destroy();this.wfsLayer=null}if(this.mapPanel){this.mapPanel.destroy();this.mapPanel=null}if(this.mapToolbar){this.mapToolbar.destroy();this.mapToolbar=null}if(this.layersAndLegendsPanel){this.layersAndLegendsPanel.destroy();this.layersAndLegendsPanel=null}if(this.layerPanel){this.layerPanel.destroy();this.layerPanel=null}if(this.layerTree){this.layerTree.destroy();this.layerTree=null}if(this.legendPanel){this.legendPanel.destroy();this.legendPanel=null}Genapp.GeoPanel.superclass.destroy.call(this)}});Genapp.GridDetailsPanel=Ext.extend(Ext.grid.GridPanel,{headerWidth:95,closable:true,autoScroll:true,cls:"genapp-query-grid-details-panel",loadingMsg:"Loading...",layout:"fit",openDetailsButtonTitle:"See the details",openDetailsButtonTip:"Display the row details into the details panel.",getChildrenButtonTitle:"Switch to the children",getChildrenButtonTip:"Display the children of the data.",getParentButtonTitle:"Return to the parent",getParentButtonTip:"Display the parent of the data.",tipDefaultWidth:300,sm:new Ext.grid.RowSelectionModel({singleSelect:true}),dateFormat:"Y/m/d",tipImageDefaultWidth:200,renderLeftTools:function(f,e,a,g,d,b){var c="";if(!this.hideDetails){c='<div class="genapp-query-grid-details-panel-slip" onclick="Genapp.cardPanel.consultationPage.openDetails(\'{0}\', \'ajaxgetdetails\');"ext:qtitle="'+this.openDetailsButtonTitle+'"ext:qwidth="'+this.tipDefaultWidth+'"ext:qtip="'+this.openDetailsButtonTip+'"></div>'}if(this.hasChild){c+='<div class="genapp-query-grid-details-panel-get-children" onclick="Genapp.cardPanel.consultationPage.getChildren(\'{1}\',\'{0}\');"ext:qtitle="'+this.getChildrenButtonTitle+'"ext:qwidth="'+this.tipDefaultWidth+'"ext:qtip="'+this.getChildrenButtonTip+'"></div>'}return String.format(c,a.data.id,this.ownerCt.getId(),a.data.LOCATION_COMPL_DATA__SIT_NO_CLASS)},numberPattern:function(c,e,a){var d=[],b;d.push("0");if(a){d.push(a+"000")}if(e){d.push(c);for(b=0;b<e;b++){d.push("0")}}return d.join("")},renderIcon:function(f,d,a,g,c,b,e){if(!Ext.isEmpty(f)){return'<img src="'+Genapp.base_url+'/js/genapp/resources/images/picture.png"ext:qtitle="'+e+' :"ext:qwidth="'+this.tipImageDefaultWidth+'"ext:qtip="'+Genapp.util.htmlStringFormat('<img width="'+(this.tipImageDefaultWidth-12)+'" src="'+Genapp.base_url+"/img/photos/"+f+'" />')+'">'}},initComponent:function(){this.itemId=this.initConf.id;this.hasChild=this.initConf.hasChild;this.title=this.initConf.title;this.parentItemId=this.initConf.parentItemId;this.ownerCt=this.initConf.ownerCt;this.store=new Ext.data.ArrayStore({autoDestroy:true,idIndex:0,fields:this.initConf.fields,data:this.initConf.data});var b;var a=this.initConf.columns;for(b=0;b<a.length;b++){a[b].header=Genapp.util.htmlStringFormat(a[b].header);a[b].tooltip=Genapp.util.htmlStringFormat(a[b].tooltip);switch(a[b].type){case"STRING":case"INTEGER":a[b].xtype="gridcolumn";break;case"NUMERIC":a[b].xtype="numbercolumn";if(!Ext.isEmpty(a[b].decimals)){a[b].format=this.numberPattern(".",a[b].decimals)}break;case"DATE":a[b].xtype="datecolumn";a[b].format=this.dateFormat;break;case"IMAGE":a[b].header="";a[b].width=30;a[b].sortable=false;a[b].renderer=this.renderIcon.createDelegate(this,[Genapp.util.htmlStringFormat(a[b].tooltip)],true);break;default:a[b].xtype="gridcolumn";break}}var c="";if(!Ext.isEmpty(this.parentItemId)){c='<div class="genapp-query-grid-details-panel-get-parent" onclick="Genapp.cardPanel.consultationPage.getParent(\''+this.ownerCt.getId()+'\');"ext:qtitle="'+this.getParentButtonTitle+'"ext:qwidth="'+this.tipDefaultWidth+'"ext:qtip="'+this.getParentButtonTip+'"></div>'}this.initConf.columns.unshift({dataIndex:"leftTools",header:c,renderer:this.renderLeftTools.createDelegate(this),sortable:false,fixed:true,menuDisabled:true,align:"center",width:50});this.colModel=new Ext.grid.ColumnModel({defaults:{width:100,sortable:true},columns:a});Genapp.GridDetailsPanel.superclass.initComponent.call(this)}});Genapp.PDFComponent=Ext.extend(Ext.BoxComponent,{mimeType:"application/pdf",url:null,defaultMessage:"Please select a document...",defaultHtml:'<h4>Content on this page requires Adobe Acrobat Reader.</h4>         <p>You must have the free Adobe Reader program installed on your computer         to view the documents marked &quot;(PDF).&quot;         <p>Download the <a href="http://www.adobe.com/products/acrobat/readstep2.html">         free Adobe Reader program</a>.</p>         <p><a href="http://www.adobe.com/products/acrobat/readstep2.html">        <img src="http://www.adobe.com/images/shared/download_buttons/get_adobe_reader.gif"         width="88" height="31" border="0" alt="Get Adobe Reader." />',initComponent:function(){Ext.Panel.superclass.initComponent.call(this);this.on("render",function(a){if(Ext.isEmpty(this.url)){this.updateElement()}else{this.el=Ext.get(Ext.DomHelper.overwrite(this.ownerCt.body.dom,{tag:"span",html:this.defaultMessage}))}},this)},updateUrl:function(a){this.url=a;this.updateElement()},updateElement:function(){this.el=Ext.get(Ext.DomHelper.overwrite(this.ownerCt.body.dom,{tag:"object",data:this.url,type:this.mimeType,width:"100%",height:"100%",html:this.defaultHtml}))},reset:function(){if(this.url!==null){this.el=Ext.get(Ext.DomHelper.overwrite(this.ownerCt.body.dom,{tag:"span",html:this.defaultMessage}));this.url=null}}});Ext.reg("pdf",Genapp.PDFComponent);Genapp.PredefinedRequestPanel=Ext.extend(Ext.Panel,{id:"predefined_request",ref:"predefinedRequestPage",frame:true,title:"Predefined Request",layout:"border",consultationButtonText:"Consultation",consultationButtonTooltip:"Go to the consultation page",descriptionTitle:"",nameColumnHeader:"Name",labelColumnHeader:"Label",descriptionColumnHeader:"Description",dateColumnHeader:"Date",clickColumnHeader:"Click(s)",positionColumnHeader:"Rank",groupNameColumnHeader:"Group name",groupLabelColumnHeader:"Group label",groupPositionColumnHeader:"Group Rank",groupTextTpl:"{group} ({[values.rs.length]})",resetButtonText:"Reset",resetButtonTooltip:"Reset the form with the default values",launchRequestButtonText:"Launch the request",launchRequestButtonTooltip:"Launch the request in the consultation page",loadingText:"Loading...",defaultCardPanelText:"Please select a request...",defaultErrorCardPanelText:"Sorry, the loading failed...",criteriaPanelTitle:"Request criteria",initComponent:function(){var e=new Ext.data.ArrayReader({root:"rows",totalProperty:"total"},[{name:"request_name",type:"string"},{name:"label",type:"string"},{name:"definition",type:"string"},{name:"click",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d"},{name:"criteria_hint",type:"string"},{name:"position",type:"int"},{name:"group_name",type:"string"},{name:"group_label",type:"string"},{name:"group_position",type:"int"},{name:"dataset_id",type:"string"}]);var d=new Ext.data.GroupingStore({reader:e,autoDestroy:true,url:Genapp.ajax_query_url+"ajaxgetpredefinedrequestlist",remoteSort:false,sortInfo:{field:"position",direction:"ASC"},groupField:"group_position"});var c=[];if(!Ext.isEmpty(this.descriptionTitle)){c.push('<h4 class="genapp-predefined-request-grid-panel-description-title">'+this.descriptionTitle+":</h4>")}c.push('<p class="genapp-predefined-request-grid-panel-description-text">{definition}</p>');var f=new Ext.ux.grid.RowExpander({tpl:new Ext.Template(c)});var b=function(k,h,m,o,l,n,g){return m.data[g]};var a=new Ext.grid.ColumnModel({defaults:{sortable:true},columns:[{id:"request_name",header:this.nameColumnHeader,dataIndex:"request_name",width:30,groupable:false,hidden:true},{header:this.labelColumnHeader,dataIndex:"label",groupable:false},{header:this.descriptionColumnHeader,dataIndex:"definition",groupable:false,hidden:true},{header:this.dateColumnHeader,dataIndex:"date",format:"Y/m/d",xtype:"datecolumn",width:20,groupable:false,hidden:true},{header:this.clickColumnHeader,dataIndex:"click",width:10,groupable:false,hidden:true},{header:this.positionColumnHeader,dataIndex:"position",width:10,groupable:false,hidden:true},{header:this.groupNameColumnHeader,dataIndex:"group_name",hidden:true,groupRenderer:b.createDelegate(this,["group_label"],true)},{header:this.groupLabelColumnHeader,dataIndex:"group_label",hidden:true},{header:this.groupPositionColumnHeader,dataIndex:"group_position",width:10,hidden:true,groupRenderer:b.createDelegate(this,["group_label"],true)}]});this.grid=new Ext.grid.GridPanel({region:"center",autoExpandColumn:1,border:true,plugins:f,ds:d,cm:a,view:new Ext.grid.GroupingView({forceFit:true,groupTextTpl:this.groupTextTpl}),sm:new Ext.grid.RowSelectionModel({singleSelect:true,listeners:{rowselect:this.onGridRowSelect,scope:this}})});this.requestCriteriaCardPanel=new Ext.form.FieldSet({cls:"genapp-predefined-request-criteria-card-panel",layout:"card",autoScroll:true,activeItem:2,labelWidth:90,title:" ",defaults:{width:140,border:false},width:350,border:true,fbar:this.requestCriteriaCardPanelFooterTBar=new Ext.Toolbar({hidden:true,cls:"genapp-predefined-request-criteria-panel-footerTBar",items:[this.resetButton=new Ext.Button({text:this.resetButtonText,listeners:{render:function(g){new Ext.ToolTip({anchor:"left",target:g.getEl(),html:this.resetButtonTooltip,showDelay:Ext.QuickTips.getQuickTip().showDelay,dismissDelay:Ext.QuickTips.getQuickTip().dismissDelay})},scope:this},handler:function(g,k){var h=this.grid.getSelectionModel().getSelected();this.requestCriteriaCardPanel.getComponent(h.data.request_name).getForm().reset()},scope:this}),this.launchRequestButton=new Ext.Button({text:this.launchRequestButtonText,listeners:{render:function(g){new Ext.ToolTip({anchor:"left",target:g.getEl(),html:this.launchRequestButtonTooltip,showDelay:Ext.QuickTips.getQuickTip().showDelay,dismissDelay:Ext.QuickTips.getQuickTip().dismissDelay})},scope:this},handler:function(g,l){var m=this.grid.getSelectionModel().getSelected().data;var k=this.requestCriteriaCardPanel.getComponent(m.request_name).getForm().getValues();var h=Ext.getCmp("consultation_panel");h.loadRequest({datasetId:m.dataset_id,name:m.request_name,fieldValues:k});Genapp.cardPanel.activate("consultation_panel")},scope:this})]}),items:[{xtype:"box",autoEl:{tag:"div",cls:"loading-indicator",html:this.loadingText}},{xtype:"box",autoEl:{tag:"div",cls:"genapp-predefined-request-criteria-panel-error-msg",html:this.defaultErrorCardPanelText}},{xtype:"box",autoEl:{tag:"div",cls:"genapp-predefined-request-criteria-panel-intro",html:this.defaultCardPanelText}}]});this.eastPanel=new Ext.Panel({region:"east",width:"350px",cls:"genapp-predefined-request-east-panel",margins:{top:0,right:0,bottom:0,left:5},items:this.requestCriteriaCardPanel});this.items=[this.grid,this.eastPanel];this.listeners={activate:function(){var g=this.grid.getSelectionModel().getSelected();this.grid.getStore().reload({callback:function(k,l,m){if(m){if(!Ext.isEmpty(g)){var h=this.grid.getStore().findExact("request_name",g.data.request_name);this.grid.getSelectionModel().selectRow(h);this.grid.plugins.expandRow(h)}}else{console.log("Request failure: ");console.log("records:",k,"options:",l);this.requestCriteriaCardPanel.getLayout().setActiveItem(1)}},scope:this})},scope:this};Genapp.PredefinedRequestPanel.superclass.initComponent.call(this)},onGridRowSelect:function(c,b,a){this.requestCriteriaCardPanel.setTitle("");this.requestCriteriaCardPanelFooterTBar.hide();this.requestCriteriaCardPanel.getLayout().setActiveItem(0);if(Ext.isEmpty(this.requestCriteriaCardPanel.getComponent(a.data.request_name))){Ext.Ajax.request({url:Genapp.ajax_query_url+"ajaxgetpredefinedrequestcriteria",success:function(f,h){var g;var e=new Ext.data.JsonReader({root:"criteria",idProperty:"name",fields:[{name:"name",mapping:"name"},{name:"label",mapping:"label"},{name:"inputType",mapping:"inputType"},{name:"unit",mapping:"unit"},{name:"type",mapping:"type"},{name:"subtype",mapping:"subtype"},{name:"definition",mapping:"definition"},{name:"is_default",mapping:"is_default"},{name:"default_value",mapping:"default_value"},{name:"decimals",mapping:"decimals"},{name:"params",mapping:"params"}]});var d=e.readRecords(Ext.decode(f.responseText));var k=new Ext.form.FormPanel({itemId:a.data.request_name,labelWidth:130,autoHeight:true,defaults:{labelStyle:"padding: 0; margin-top:3px",width:180},items:{xtype:"box",autoEl:{tag:"div",cls:"genapp-predefined-request-criteria-panel-criteria-hint",style:"width:200px;",html:a.data.criteria_hint}}});for(g=0;g<d.records.length;g++){k.add(Genapp.FieldForm.prototype.getCriteriaConfig(d.records[g].data,true))}this.requestCriteriaCardPanel.add(k);this.showCriteriaPanel(a.data.request_name);this.requestCriteriaCardPanel.doLayout()},failure:function(d,e){console.log("Request failure: "+d.statusText);console.log("Response:",d,"Options:",e);this.requestCriteriaCardPanel.getLayout().setActiveItem(1)},params:{request_name:a.data.request_name},scope:this})}else{this.showCriteriaPanel(a.data.request_name)}},showCriteriaPanel:function(a){this.requestCriteriaCardPanel.setTitle(this.criteriaPanelTitle);this.requestCriteriaCardPanelFooterTBar.show();this.requestCriteriaCardPanel.getLayout().setActiveItem(a)}});Ext.reg("predefinedrequestpage",Genapp.PredefinedRequestPanel);Ext.namespace("Genapp.form.menu");Genapp.form.menu.DateRangeMenu=Ext.extend(Ext.menu.DateMenu,{layout:"table",cls:"x-date-range-menu",rangePicker:null,initComponent:function(){this.on("beforeshow",this.onBeforeShow,this);this.rangePicker=new Genapp.form.picker.DateRangePicker(this.initialConfig);Ext.apply(this,{plain:true,showSeparator:false,items:[this.rangePicker]});this.rangePicker.purgeListeners();Ext.menu.DateMenu.superclass.initComponent.call(this);this.relayEvents(this.rangePicker,["select"])},onBeforeShow:function(){if(this.rangePicker){this.rangePicker.startDatePicker.hideMonthPicker(true);this.rangePicker.endDatePicker.hideMonthPicker(true)}}});Ext.reg("daterangemenu",Genapp.form.menu.DateRangeMenu);Ext.namespace("Genapp.form.menu");Genapp.form.menu.NumberRangeMenu=Ext.extend(Ext.menu.Menu,{layout:"auto",cls:"x-number-range-menu",rangePicker:null,initComponent:function(){this.rangePicker=new Genapp.form.picker.NumberRangePicker(this.initialConfig);Ext.apply(this,{plain:true,showSeparator:false,items:[this.rangePicker]});Genapp.form.menu.NumberRangeMenu.superclass.initComponent.call(this);this.relayEvents(this.rangePicker,["select"])}});Ext.reg("numberrangemenu",Genapp.form.menu.NumberRangeMenu);Ext.namespace("Genapp.form.menu");Genapp.form.menu.TreeMenu=Ext.extend(Ext.menu.Menu,{layout:"auto",cls:"x-tree-menu",treePicker:null,initComponent:function(){this.treePicker=new Genapp.form.picker.TreePicker(this.initialConfig);Ext.apply(this,{plain:true,showSeparator:false,items:[this.treePicker]});Genapp.form.menu.TreeMenu.superclass.initComponent.call(this);this.relayEvents(this.treePicker,["select"])}});Ext.reg("treemenu",Genapp.form.menu.TreeMenu);Ext.namespace("Genapp.form.menu");Genapp.form.menu.TaxrefMenu=Ext.extend(Ext.menu.Menu,{layout:"auto",cls:"x-tree-menu",taxrefPicker:null,initComponent:function(){this.taxrefPicker=new Genapp.form.picker.TaxrefPicker(this.initialConfig);Ext.apply(this,{plain:true,showSeparator:false,items:[this.taxrefPicker]});Genapp.form.menu.TaxrefMenu.superclass.initComponent.call(this);this.relayEvents(this.taxrefPicker,["select"])}});Ext.reg("taxrefmenu",Genapp.form.menu.TaxrefMenu);Ext.namespace("Genapp.form.picker");Genapp.form.picker.DateRangePicker=Ext.extend(Ext.Panel,{tbarStartDateButtonText:"Start Date ...",tbarRangeDateButtonText:"Range Date",tbarEndDateButtonText:"... End Date",fbarOkButtonText:"ok",layout:"column",cls:"x-menu-date-range-item",buttonAlign:"center",hideValidationButton:false,selectedDate:{startDate:null,endDate:null},startDatePicker:null,endDatePicker:null,tbar:null,startDateButton:null,rangeDateButton:null,endDateButton:null,fbar:null,initComponent:function(){this.startDatePicker=new Ext.DatePicker(Ext.apply({internalRender:this.strict||!Ext.isIE,ctCls:"x-menu-date-item",columnWidth:0.5},this.initialConfig));this.endDatePicker=new Ext.DatePicker(Ext.apply({internalRender:this.strict||!Ext.isIE,ctCls:"x-menu-date-item",columnWidth:0.5},this.initialConfig));this.items=[this.startDatePicker,{xtype:"spacer",width:5,html:"&nbsp;"},this.endDatePicker];this.startDatePicker.on("select",this.startDateSelect,this);this.endDatePicker.on("select",this.endDateSelect,this);this.startDateButton=new Ext.Button({text:this.tbarStartDateButtonText,cls:"x-menu-date-range-item-start-date-button",enableToggle:true,allowDepress:false,toggleGroup:"DateButtonsGroup",toggleHandler:this.onStartDatePress.createDelegate(this)});this.rangeDateButton=new Ext.Button({text:this.tbarRangeDateButtonText,cls:"x-menu-date-range-item-range-date-button",pressed:true,enableToggle:true,allowDepress:false,toggleGroup:"DateButtonsGroup",toggleHandler:this.onRangeDatePress.createDelegate(this)});this.endDateButton=new Ext.Button({text:this.tbarEndDateButtonText,cls:"x-menu-date-range-item-end-date-button",enableToggle:true,allowDepress:false,toggleGroup:"DateButtonsGroup",toggleHandler:this.onEndDatePress.createDelegate(this)});this.tbar=new Ext.Toolbar({items:[this.startDateButton,this.rangeDateButton,"->",this.endDateButton]});if(!this.hideValidationButton){this.fbar=new Ext.Toolbar({cls:"x-date-bottom",items:[{xtype:"button",text:this.fbarOkButtonText,width:"auto",handler:this.onOkButtonPress.createDelegate(this)}]})}Genapp.form.picker.DateRangePicker.superclass.initComponent.call(this)},onRangeDatePress:function(a,b){if(b){this.startDatePicker.enable();this.endDatePicker.enable();this.resetDates()}},onStartDatePress:function(a,b){if(b){this.startDatePicker.enable();this.endDatePicker.disable();this.resetDates()}},onEndDatePress:function(a,b){if(b){this.startDatePicker.disable();this.endDatePicker.enable();this.resetDates()}},startDateSelect:function(b,a){this.selectedDate.startDate=a;if(this.startDateButton.pressed){this.returnSelectedDate()}else{if(this.selectedDate.endDate!==null){this.returnSelectedDate()}}},endDateSelect:function(b,a){this.selectedDate.endDate=a;if(this.endDateButton.pressed){this.returnSelectedDate()}else{if(this.selectedDate.startDate!==null){this.returnSelectedDate()}}},resetselectedDate:function(){this.selectedDate={startDate:null,endDate:null}},resetDates:function(){this.resetselectedDate();this.startDatePicker.setValue(this.startDatePicker.defaultValue);this.endDatePicker.setValue(this.endDatePicker.defaultValue)},returnSelectedDate:function(){this.fireEvent("select",this,this.selectedDate);this.resetselectedDate()},isEnabledDate:function(a){if((a.activeDate.getTime()-a.minDate.getTime()>=0)&&(a.maxDate.getTime()-a.activeDate.getTime()>=0)){return true}else{return false}},onOkButtonPress:function(a,b){if(b){if(this.startDateButton.pressed){if(this.isEnabledDate(this.startDatePicker)){this.selectedDate={startDate:this.startDatePicker.activeDate,endDate:null};this.returnSelectedDate()}}else{if(this.endDateButton.pressed){if(this.isEnabledDate(this.endDatePicker)){this.selectedDate={startDate:null,endDate:this.endDatePicker.activeDate};this.returnSelectedDate()}}else{if(this.isEnabledDate(this.startDatePicker)&&this.isEnabledDate(this.endDatePicker)){this.selectedDate={startDate:this.startDatePicker.activeDate,endDate:this.endDatePicker.activeDate};this.returnSelectedDate()}}}}}});Ext.reg("daterangepicker",Genapp.form.picker.DateRangePicker);Ext.namespace("Genapp.form.picker");Genapp.form.picker.NumberRangePicker=Ext.extend(Ext.Panel,{minFieldLabel:"Min",maxFieldLabel:"Max",okButtonText:"ok",layout:"form",height:59,width:194,labelWidth:30,buttonAlign:"center",cls:"x-menu-number-range-item",hideValidationButton:true,minField:null,maxField:null,initComponent:function(){this.minField=new Genapp.form.TwinNumberField({fieldLabel:this.minFieldLabel});this.maxField=new Genapp.form.TwinNumberField({fieldLabel:this.maxFieldLabel});Ext.apply(this,{items:[this.minField,this.maxField],keys:[{key:Ext.EventObject.ENTER,fn:this.onOkButtonPress.createDelegate(this,[null,true])},{key:Ext.EventObject.TAB,fn:this.onTabButtonPress,scope:this}]});if(!this.hideValidationButton){this.buttons=[{xtype:"button",text:this.okButtonText,width:"auto",handler:this.onOkButtonPress.createDelegate(this)}];this.height=this.height+28}Genapp.form.picker.NumberRangePicker.superclass.initComponent.call(this)},onOkButtonPress:function(a,b){if(b){this.fireEvent("select",this,{minValue:this.minField.getValue(),maxValue:this.maxField.getValue()})}},onTabButtonPress:function(c,b){var a=this.items.findIndex("id",b.target.id)+1;if(a>=this.items.getCount()){a=0}this.items.get(a).focus(true)}});Ext.reg("numberrangepicker",Genapp.form.picker.NumberRangePicker);Ext.namespace("Genapp.form.picker");Genapp.form.picker.TreePicker=Ext.extend(Ext.tree.TreePanel,{okButtonText:"ok",height:300,width:500,buttonAlign:"center",cls:"x-menu-tree-item",multiple:false,hideValidationButton:true,validationButton:null,padding:5,enableDD:false,animate:true,border:false,rootVisible:false,useArrows:true,autoScroll:true,containerScroll:true,frame:false,baseAttr:{singleClickExpand:true},listeners:{dblclick:{fn:function(b,a){this.fireEvent("select",b)}}},initComponent:function(){this.root=new Ext.tree.AsyncTreeNode({draggable:false,id:"*"});this.validationButton={xtype:"button",text:this.okButtonText,width:"auto",handler:this.onOkButtonPress.createDelegate(this)};if(!this.hideValidationButton){this.buttons=[this.validationButton];this.height=this.height+28}if(this.multiple){this.selModel=new Ext.tree.MultiSelectionModel()}Genapp.form.picker.TreePicker.superclass.initComponent.call(this)},onOkButtonPress:function(a,c){if(c){if(this.multiple){var d=this.getSelectionModel().getSelectedNodes();this.fireEvent("select",d===null?null:d)}else{var b=this.getSelectionModel().getSelectedNode();this.fireEvent("select",b===null?null:b)}}}});Ext.reg("treepicker",Genapp.form.picker.TreePicker);Ext.namespace("Genapp.form.picker");Genapp.form.picker.TaxrefPicker=Ext.extend(Ext.tree.TreePanel,{okButtonText:"ok",height:300,width:500,buttonAlign:"center",cls:"x-menu-tree-item",hideValidationButton:true,validationButton:null,padding:5,enableDD:false,animate:true,border:false,rootVisible:false,useArrows:true,autoScroll:true,containerScroll:true,frame:false,baseAttr:{singleClickExpand:true},listeners:{dblclick:{fn:function(b,a){this.fireEvent("select",b)}}},initComponent:function(){this.root=new Ext.tree.AsyncTreeNode({draggable:false,id:"*"});this.validationButton={xtype:"button",text:this.okButtonText,width:"auto",handler:this.onOkButtonPress.createDelegate(this)};this.loader=new Genapp.form.picker.TaxrefNodeLoader({url:this.dataUrl});if(!this.hideValidationButton){this.buttons=[this.validationButton];this.height=this.height+28}Genapp.form.picker.TaxrefPicker.superclass.initComponent.call(this)},onOkButtonPress:function(a,c){if(c){var b=this.getSelectionModel().getSelectedNode();this.fireEvent("select",b===null?null:b)}}});Ext.reg("taxrefpicker",Genapp.form.picker.TaxrefPicker);Ext.namespace("Genapp.form.picker");Genapp.form.picker.TaxrefNodeLoader=function(a){Ext.apply(this,a);this.addEvents("beforeload","load");Genapp.form.picker.TaxrefNodeLoader.superclass.constructor.call(this)};Ext.extend(Genapp.form.picker.TaxrefNodeLoader,Ext.tree.TreeLoader,{createNode:function(attr){if(this.baseAttrs){Ext.applyIf(attr,this.baseAttrs)}if(this.applyLoader!==false&&!attr.loader){attr.loader=this}if(Ext.isString(attr.uiProvider)){attr.uiProvider=this.uiProviders[attr.uiProvider]||eval(attr.uiProvider)}if(attr.nodeType){return new Ext.tree.TreePanel.nodeTypes[attr.nodeType](attr)}else{var node;if(attr.leaf){attr.iconCls="x-tree-node-icon-feuille";node=new Ext.tree.TreeNode(attr);if(attr.isReference=="1"){node.text="<b>"+node.text+" </b>"}else{node.text="<i>"+node.text+" </i>"}if(attr.vernacularName!=null){node.text=node.text+" ("+attr.vernacularName+")"}return node}else{attr.iconCls="x-tree-node-icon-branche";node=new Ext.tree.AsyncTreeNode(attr);if(attr.vernacularName!=null){node.text=node.text+" ("+attr.vernacularName+")"}return node}}}});Ext.namespace("Genapp.form");Genapp.form.DateRangeField=Ext.extend(Ext.form.DateField,{minText:"The dates in this field must be equal to or after {0}",maxText:"The dates in this field must be equal to or before {0}",reverseText:"The end date must be posterior to the start date",notEqualText:"The end date can't be equal to the start date",dateSeparator:" - ",endDatePrefix:"<= ",startDatePrefix:">= ",usePrefix:true,hideValidationButton:false,authorizeEqualValues:true,mergeEqualValues:true,autoReverse:true,minValue:new Date(0),maxValue:new Date(2999,11,31),minDefaultValue:new Date(),maxDefaultValue:new Date(),setDisabledDates:function(a){this.disabledDates=a;this.initDisabledDays();if(this.menu){this.menu.rangePicker.startDatePicker.setDisabledDates(this.disabledDatesRE);this.menu.rangePicker.endDatePicker.setDisabledDates(this.disabledDatesRE)}},setDisabledDays:function(a){this.disabledDays=a;if(this.menu){this.menu.rangePicker.startDatePicker.setDisabledDays(a);this.menu.rangePicker.endDatePicker.setDisabledDays(a)}},setMinValue:function(a){this.minValue=(typeof a==="string"?this.parseDate(a):a);if(this.menu){this.menu.rangePicker.startDatePicker.setMinDate(this.minValue);this.menu.rangePicker.endDatePicker.setMinDate(this.minValue)}},setMaxValue:function(a){this.maxValue=(typeof a==="string"?this.parseDate(a):a);if(this.menu){this.menu.rangePicker.startDatePicker.setMaxDate(this.maxValue);this.menu.rangePicker.endDatePicker.setMaxDate(this.maxValue)}},getErrors:function(c){var e=Ext.form.DateField.superclass.getErrors.apply(this,arguments);c=this.formatDate(c||this.processValue(this.getRawValue()));if(c.length<1){return e}var a=c.split(this.dateSeparator);if(a.length!==1&&a.length!==2){e.push(String.format(this.invalidText,c,this.format+this.dateSeparator+this.format));return e}var d=this.parseRangeDate(c);if(a.length===1){if(!d){e.push(String.format(this.invalidText,c,this.format));return e}var b=Ext.form.DateField.superclass.getErrors.call(this,c);if(!Ext.isEmpty(b)){e.push(String.format(this.invalidText,c,this.format));return e}}else{if(a.length===2){if(!d){e.push(String.format(this.invalidText,c,this.format+this.dateSeparator+this.format));return e}var b=Ext.form.DateField.superclass.getErrors.call(this,c);if(!Ext.isEmpty(b)){e.push(String.format(this.invalidText,c,this.format+this.dateSeparator+this.format));return e}if(d.endDate.getTime()-d.startDate.getTime()<0){e.push(this.reverseText);return e}if(!this.authorizeEqualValues&&d.endDate.getElapsed(d.startDate)===0){e.push(this.notEqualText);return e}}}if(d.startDate!==null){if(d.startDate.getTime()-this.minValue.getTime()<0){e.push(String.format(this.minText,this.formatDate(this.minValue)));return e}if(this.maxValue.getTime()-d.startDate.getTime()<0){e.push(String.format(this.maxText,this.formatDate(this.maxValue)));return e}}if(d.endDate!==null){if(d.endDate.getTime()-this.minValue.getTime()<0){e.push(String.format(this.minText,this.formatDate(this.minValue)));return e}if(this.maxValue.getTime()-d.endDate.getTime()<0){e.push(String.format(this.maxText,this.formatDate(this.maxValue)));return e}}return e},parseRangeDate:function(k){if(!k){return null}if(this.isRangeDate(k)){return k}if(Ext.isDate(k)){return{startDate:k,endDate:k}}var l=k.split(this.dateSeparator);if(l.length===1){var c=k.indexOf(this.startDatePrefix,0);var h=k.indexOf(this.endDatePrefix,0);if(c!==-1){var a=this.parseDate.call(this,k.substring(c+this.startDatePrefix.length));if(a){return{startDate:a,endDate:null}}else{return null}}else{if(h!==-1){var e=this.parseDate.call(this,k.substring(h+this.endDatePrefix.length));if(e){return{startDate:null,endDate:e}}else{return null}}else{var b=this.parseDate.call(this,k);if(b){return{startDate:b,endDate:b}}else{return null}}}}else{if(l.length===2){var m=Date.parseDate(l[0],this.format);var g=Date.parseDate(l[1],this.format);if((!m||!g)&&this.altFormats){if(!this.altFormatsArray){this.altFormatsArray=this.altFormats.split("|")}var d,f;if(!m){for(d=0,f=this.altFormatsArray.length;d<f&&!m;d++){m=Date.parseDate(l[0],this.altFormatsArray[d])}}if(!g){for(d=0,f=this.altFormatsArray.length;d<f&&!g;d++){g=Date.parseDate(l[1],this.altFormatsArray[d])}}}if(!m||!g){return null}else{return{startDate:m,endDate:g}}}else{return null}}},formatDate:function(a){if(Ext.isDate(a)){return Genapp.form.DateRangeField.superclass.formatDate.call(this,a)}if(this.isRangeDate(a)){if(a.startDate===null&&a.endDate!==null){if(this.usePrefix){return this.endDatePrefix+a.endDate.format(this.format)}else{return this.minValue.format(this.format)+this.dateSeparator+a.endDate.format(this.format)}}else{if(a.startDate!==null&&a.endDate===null){if(this.usePrefix){return this.startDatePrefix+a.startDate.format(this.format)}else{return a.startDate.format(this.format)+this.dateSeparator+this.maxValue.format(this.format)}}else{if(a.startDate!==null&&a.endDate!==null){if(this.mergeEqualValues&&a.endDate.getElapsed(a.startDate)===0){return a.startDate.format(this.format)}else{if(this.autoReverse&&a.endDate.getTime()-a.startDate.getTime()<0){return a.endDate.format(this.format)+this.dateSeparator+a.startDate.format(this.format)}else{return a.startDate.format(this.format)+this.dateSeparator+a.endDate.format(this.format)}}}else{return""}}}}else{return a}},onTriggerClick:function(){if(this.disabled){return}if(!this.menu){this.menu=new Genapp.form.menu.DateRangeMenu({hideOnClick:false,hideValidationButton:this.hideValidationButton,showToday:this.showToday})}this.onFocus();if(typeof this.minDefaultValue==="string"){this.minDefaultValue=new Date(this.minDefaultValue)}if(typeof this.maxDefaultValue==="string"){this.maxDefaultValue=new Date(this.maxDefaultValue)}Ext.apply(this.menu.rangePicker.startDatePicker,{minDate:this.minValue,maxDate:this.maxValue,defaultValue:this.minDefaultValue,disabledDatesRE:this.disabledDatesRE,disabledDatesText:this.disabledDatesText,disabledDays:this.disabledDays,disabledDaysText:this.disabledDaysText,format:this.format,showToday:this.showToday,minText:String.format(this.minText,this.formatDate(this.minValue)),maxText:String.format(this.maxText,this.formatDate(this.maxValue))});Ext.apply(this.menu.rangePicker.endDatePicker,{minDate:this.minValue,maxDate:this.maxValue,defaultValue:this.maxDefaultValue,disabledDatesRE:this.disabledDatesRE,disabledDatesText:this.disabledDatesText,disabledDays:this.disabledDays,disabledDaysText:this.disabledDaysText,format:this.format,showToday:this.showToday,minText:String.format(this.minText,this.formatDate(this.minValue)),maxText:String.format(this.maxText,this.formatDate(this.maxValue))});var b=this.getValue();var c=this.minDefaultValue;var a=this.maxDefaultValue;if(Ext.isDate(b)){c=b;a=b}else{if(this.isRangeDate(b)){if(b.startDate!==null){c=b.startDate}if(b.endDate!==null){a=b.endDate}}}this.menu.rangePicker.startDatePicker.setValue(c);this.menu.rangePicker.endDatePicker.setValue(a);this.menu.show(this.el,"tl-bl?");this.menuEvents("on")},isRangeDate:function(a){return(Ext.isObject(a)&&(Ext.isDate(a.startDate)||a.startDate===null)&&(Ext.isDate(a.endDate)||a.endDate===null))},getValue:function(){return this.parseRangeDate(Ext.form.DateField.superclass.getValue.call(this))||""},setValue:function(a){return Ext.form.DateField.superclass.setValue.call(this,this.formatDate(this.parseRangeDate(a)))},beforeBlur:function(){var a=this.parseRangeDate(this.getRawValue());if(a){this.setValue(a)}}});Ext.reg("daterangefield",Genapp.form.DateRangeField);Ext.namespace("Genapp.form");Genapp.form.GeometryField=Ext.extend(Ext.form.TriggerField,{fieldLabel:"Location",mapWindowTitle:"Draw the search zone on the map :",mapWindowValidateButtonText:"Validate",mapWindowValidateAndSearchButtonText:"Validate and search",mapWindowCancelButtonText:"Cancel",hideWKT:false,triggerClass:"x-form-map-trigger",editable:false,hideMapDetails:true,hideSearchButton:false,hideDrawPointButton:false,hideDrawLineButton:false,hideLayerSelector:false,hideSnappingButton:false,hideGetFeatureButton:false,hideFeatureInfoButton:false,mapWindowMaximizable:true,mapWindowMaximized:false,mapWindowHeight:500,mapWindowWidth:850,mapWindowMinZoomLevel:0,zoomToFeatureOnInit:false,enableResultLayers:true,setZoomAndCenter:false,mapPanel:null,mapWindow:null,initComponent:function(){Genapp.form.GeometryField.superclass.initComponent.call(this);if(!this.hideTrigger){this.onTriggerClick=function(){if(this.disabled){return}if(!(this.mapWindow instanceof Ext.Window)){this.openMap(this)}else{this.mapWindow.show()}}}},openMap:function(){if(!this.mapWindow){this.mapPanel=new Genapp.GeoPanel({title:"",isDrawingMap:true,featureWKT:this.getRawValue(),hideMapDetails:this.hideMapDetails,hideDrawPointButton:this.hideDrawPointButton,hideDrawLineButton:this.hideDrawLineButton,hideLayerSelector:this.hideLayerSelector,hideSnappingButton:this.hideSnappingButton,hideGetFeatureButton:this.hideGetFeatureButton,hideFeatureInfoButton:this.hideFeatureInfoButton,minZoomLevel:this.mapWindowMinZoomLevel,zoomToFeatureOnInit:this.zoomToFeatureOnInit});var a=[{text:this.mapWindowCancelButtonText,handler:function(){this.mapWindow.destroy()},scope:this},{text:this.mapWindowValidateButtonText,handler:this.onWindowValidate,scope:this}];if(!this.hideSearchButton){a.push({text:this.mapWindowValidateAndSearchButtonText,handler:this.onWindowValidate.createDelegate(this,[true])})}this.mapWindow=new Ext.Window({layout:"fit",maximizable:this.mapWindowMaximizable,maximized:this.mapWindowMaximized,title:this.mapWindowTitle,width:this.mapWindowWidth,height:this.mapWindowHeight,closeAction:"destroy",draggable:true,resizable:true,modal:true,scope:true,items:this.mapPanel,buttons:a});this.mapWindow.on("destroy",function(){delete this.mapPanel;delete this.mapWindow;if(this.submitRequest===true){Ext.getCmp("consultation_panel").submitRequest();this.submitRequest=false}},this);if(this.setZoomAndCenter){this.mapPanel.on("treerendered",function(c){var b=Ext.getCmp("consultation_panel");c.map.setCenter(b.geoPanel.map.getCenter());c.map.zoomTo(b.geoPanel.map.getZoom()-this.mapWindowMinZoomLevel);if(this.enableResultLayers){c.enableLayersAndLegends(c.layersActivation.request,true,true)}},this)}if(this.enableResultLayers&&!this.setZoomAndCenter){this.mapPanel.on("treerendered",function(b){b.enableLayersAndLegends(b.layersActivation.request,true,true)})}}this.mapWindow.show()},onWindowValidate:function(a){var b=this.mapPanel.vectorLayer.features.length?this.mapPanel.wktFormat.write(this.mapPanel.vectorLayer.features[0]):"";this.setValue(b);if(a===true){this.submitRequest=true}this.mapWindow.destroy();if(this.hideWKT){this.el.setStyle("visibility","hidden")}else{this.el.highlight()}}});Ext.reg("geometryfield",Genapp.form.GeometryField);Ext.namespace("Genapp.form");Genapp.form.NumberRangeField=Ext.extend(Ext.form.TriggerField,{numberSeparator:" - ",decimalSeparator:".",maxNumberPrefix:"<= ",minNumberPrefix:">= ",minText:"The minimum value for this field is {0}",maxText:"The maximum value for this field is {0}",reverseText:"The max number must be superior to the min number",formatText:"The correct formats are",nanText:"'{0}' is not a valid number",usePrefix:true,allowDecimals:true,decimalPrecision:2,allowNegative:true,minValue:-Number.MAX_VALUE,maxValue:Number.MAX_VALUE,baseChars:"0123456789<>= ",hideValidationButton:false,setEmptyText:false,initEvents:function(){var a="";a+=this.baseChars;if(this.allowDecimals){a+=this.decimalSeparator}if(this.allowNegative){a+="-"}this.maskRe=new RegExp("["+Ext.escapeRe(a)+"]");Genapp.form.NumberRangeField.superclass.initEvents.call(this)},initComponent:function(){var a;Genapp.form.NumberRangeField.superclass.initComponent.call(this);this.addEvents("select");if(this.setEmptyText){this.emptyText=this.minValue+this.numberSeparator+this.maxValue}var b=0;if(this.decimalPrecision>0){b=b+this.decimalSeparator;for(a=0;a<this.decimalPrecision;a++){b=b+"0"}}this.formatText=this.formatText+" '{0}', '"+this.maxNumberPrefix+" {0}', '"+this.minNumberPrefix+" {0}', '{0} "+this.numberSeparator+" {0}'.";this.formatText=String.format(this.formatText,b)},validateValue:function(d){if(!Genapp.form.NumberRangeField.superclass.validateValue.call(this,d)){return false}if(d.length<1){return true}var b=this.splitValue(d);if(b===null){this.markInvalid(this.formatText);return false}else{var c=b.minValue;var a=b.maxValue;if(c!==null){c=this.getNumber(c);if(c===null){this.markInvalid(String.format(this.nanText,b.minValue));return false}if(c<this.minValue){this.markInvalid(String.format(this.minText,this.minValue));return false}}if(a!==null){a=this.getNumber(a);if(a===null){this.markInvalid(String.format(this.nanText,b.maxValue));return false}if(a>this.maxValue){this.markInvalid(String.format(this.maxText,this.maxValue));return false}}if(c!==null&&a!==null&&(a-c)<0){this.markInvalid(this.reverseText);return false}return true}},getValue:function(){var a=Genapp.form.NumberRangeField.superclass.getValue.call(this);a=this.formatNumberValue(a);return a===null?"":a},getValues:function(){var a=Genapp.form.NumberRangeField.superclass.getValue.call(this);return this.getNumbersObject(this.splitValue(a))},setValue:function(a){a=this.formatNumberValue(a);return Genapp.form.NumberRangeField.superclass.setValue.call(this,a)},formatNumberValue:function(b){var d,a,e,c;if(!Ext.isObject(b)){b=this.splitValue(b)}b=this.getNumbersObject(b);if(b!==null){d=b.minValue;a=b.maxValue;e=isNaN(d)?"":String(this.fixPrecision(d)).replace(".",this.decimalSeparator);c=isNaN(a)?"":String(this.fixPrecision(a)).replace(".",this.decimalSeparator);if(this.usePrefix===true){if(d===null&&a!==null){b=this.maxNumberPrefix+a}else{if(d!==null&&a===null){b=this.minNumberPrefix+d}else{if(d!==null&&a!==null){if(d===a){b=e}else{b=e+this.numberSeparator+c}}else{b=""}}}}else{if(d===null&&a!==null){b=this.minValue+this.numberSeparator+c}else{if(d!==null&&a===null){b=e+this.numberSeparator+this.maxValue}else{if(d!==null&&a!==null){if(d===a){b=e}else{b=e+this.numberSeparator+c}}else{b=""}}}}}return b},fixPrecision:function(b){var a=isNaN(b);if(!this.allowDecimals||this.decimalPrecision===-1||a||!b){return a?"":b}return parseFloat(parseFloat(b).toFixed(this.decimalPrecision))},getNumber:function(a){return Ext.num(String(a).replace(this.decimalSeparator,"."),null)},getNumbersObject:function(c){if(!c||!Ext.isObject(c)){return null}var b=this.getNumber(c.minValue);var a=this.getNumber(c.maxValue);if(b!==null||a!==null){return{minValue:b,maxValue:a}}else{return null}},splitValue:function(e){var d,b,f,a;if(!e||!Ext.isString(e)){return null}var c=e.split(this.numberSeparator);if(c.length===1){f=e.indexOf(this.minNumberPrefix,0);a=e.indexOf(this.maxNumberPrefix,0);if(f!==-1){d=e.substring(f+this.minNumberPrefix.length);return{minValue:d,maxValue:null}}else{if(a!==-1){b=e.substring(a+this.maxNumberPrefix.length);return{minValue:null,maxValue:b}}else{return{minValue:e,maxValue:e}}}}else{if(c.length===2){return{minValue:c[0],maxValue:c[1]}}else{return null}}},onTriggerClick:function(){if(this.disabled){return}if(!this.menu){this.menu=new Genapp.form.menu.NumberRangeMenu({hideOnClick:false,hideValidationButton:this.hideValidationButton});Ext.apply(this.menu.rangePicker.minField,{emptyText:this.setEmptyText?this.minValue:null,allowDecimals:this.allowDecimals,decimalSeparator:this.decimalSeparator,decimalPrecision:this.decimalPrecision,allowNegative:this.allowNegative,minValue:this.minValue,maxValue:this.maxValue,baseChars:this.baseChars});Ext.apply(this.menu.rangePicker.maxField,{emptyText:this.setEmptyText?this.maxValue:null,allowDecimals:this.allowDecimals,decimalSeparator:this.decimalSeparator,decimalPrecision:this.decimalPrecision,allowNegative:this.allowNegative,minValue:this.minValue,maxValue:this.maxValue,baseChars:this.baseChars})}this.onFocus();var a=this.getValues();if(a!==null){this.menu.rangePicker.minField.setValue(a.minValue);this.menu.rangePicker.maxField.setValue(a.maxValue)}else{if(this.getRawValue()!==""){return}}this.menu.show(this.el,"tl-bl?");this.menuEvents("on");this.menu.rangePicker.minField.focus(true,60)},menuEvents:function(a){this.menu[a]("select",this.onSelect,this);this.menu[a]("hide",this.onMenuHide,this);this.menu[a]("show",this.onFocus,this)},onSelect:function(a,b){this.menu.hide();this.setValue(b)},onMenuHide:function(){this.focus(false,60);this.menuEvents("un");this.setValue({minValue:this.menu.rangePicker.minField.getValue(),maxValue:this.menu.rangePicker.maxField.getValue()})},validateBlur:function(){return !this.menu||!this.menu.isVisible()},onDestroy:function(){Ext.destroy(this.menu,this.wrap);Genapp.form.NumberRangeField.superclass.onDestroy.call(this)}});Ext.reg("numberrangefield",Genapp.form.NumberRangeField);Ext.namespace("Genapp.form");Ext.namespace("Ext.ux.form");Genapp.form.ImageField=Ext.extend(Ext.ux.form.FileUploadField,{emptyImageUploadFieldTest:"Select an image",imageForm:null,uploadWindow:null,initComponent:function(){var a={emptyText:this.emptyImageUploadFieldTest,buttonText:"",buttonCfg:{iconCls:"upload-icon"}};Ext.apply(this,Ext.apply(this.initialConfig,a));Genapp.form.ImageField.superclass.initComponent.apply(this,arguments);this.on("fileselected",this.selectFile,this)},selectFile:function(){if(this.imageForm==null){this.imageForm=new Ext.FormPanel({method:"POST",fileUpload:true,frame:true,encoding:"multipart/data",layout:"fit",defaults:{anchor:"95%",allowBlank:false,msgTarget:"side"},items:[{xtype:"hidden",name:"type",value:"image"},{xtype:"hidden",name:"id",value:this.id},this]});this.imageForm.on("afterrender",this.uploadFile,this);this.uploadWindow=new Ext.Window({closeAction:"hide",title:"Upload",items:[this.imageForm]})}this.uploadWindow.show()},uploadFile:function(){if(this.imageForm.getForm().isValid()){this.imageForm.getForm().submit({url:Genapp.base_url+"dataedition/ajaximageupload",method:"POST",enctype:"multipart/form-data",waitTitle:"Connexion au serveur ...",waitMsg:"Upload en cours ...",success:this.onUploadSuccess,failure:this.onUploadFailure,scope:this})}},onUploadSuccess:function(){console.log("success")},onUploadFailure:function(){console.log("failure")},onDestroy:function(){console.log("destroy");Ext.destroy(this.imageForm);Genapp.form.ImageField.superclass.onDestroy.call(this)}});Ext.reg("imagefield",Genapp.form.ImageField);Ext.namespace("Genapp.form");Genapp.form.TreeField=Ext.extend(Ext.form.ComboBox,{hideValidationButton:false,store:{xtype:"jsonstore",autoDestroy:true,remoteSort:true,root:"rows",idProperty:"code",totalProperty:"results",fields:[{name:"code",mapping:"code"},{name:"label",mapping:"label"}],url:Genapp.base_url+"query/ajaxgettreecodes"},valueField:"code",displayField:"label",emptyText:"Select...",multiple:false,menu:null,pageSize:10,listWidth:300,selectOnFocus:true,baseNodeUrl:Genapp.base_url+"query/ajaxgettreenodes/",initComponent:function(){this.hiddenName=this.name;Genapp.form.TreeField.superclass.initComponent.call(this);this.nodeUrl=this.baseNodeUrl;if(!Ext.isEmpty(this.unit)){this.nodeUrl+="unit/"+this.unit+"/"}this.nodeUrl+="depth/1";this.store.setBaseParam("unit",this.unit);var a={};a[this.valueField]=this.value;a[this.displayField]=this.valueLabel;this.getStore().add(new Ext.data.Record(a));this.setValue(this.value)},onTriggerClick:function(){if(this.disabled){return}if(!this.menu){this.menu=new Genapp.form.menu.TreeMenu({hideOnClick:false,hideValidationButton:this.hideValidationButton,dataUrl:this.nodeUrl,multiple:this.multiple})}this.onFocus();this.menu.show(this.el,"tl-bl?");this.menuEvents("on")},menuEvents:function(a){this.menu[a]("select",this.onSelect,this);this.menu[a]("hide",this.onMenuHide,this);this.menu[a]("show",this.onFocus,this)},onSelect:function(a,b){if(this.fireEvent("beforeselect",this,a,b)!==false){if(!Ext.isEmpty(a)){if(a instanceof Array){this.onArraySelect(a,b)}else{if(a instanceof Ext.tree.AsyncTreeNode||a instanceof Ext.tree.TreeNode){if(Ext.isEmpty(this.getStore().getById(a.attributes.id))){var c={};c[this.valueField]=a.attributes.id;c[this.displayField]=a.attributes.text;this.getStore().add([new Ext.data.Record(c)])}this.setValue(a.attributes.id)}else{if(a instanceof Ext.data.Record){this.setValue(a.data[this.valueField||this.displayField])}else{alert("Type inconnu")}}}}if(this.menu){this.menu.hide()}this.collapse()}},onArraySelect:function(b,d){if(b[0] instanceof Ext.tree.AsyncTreeNode||b[0] instanceof Ext.tree.TreeNode){if(this.menu){this.menu.hide()}var a=[];var f=[];for(var e=0;e<b.length;e++){var c=b[e].attributes;a.push(c.id);f.push(c.text)}this.addArrayToStore(a,f);this.setValue(a.toString());this.fireEvent("select",this,b,d)}else{if(b[0] instanceof Ext.data.Record){var a=[];var f=[];for(var e=0;e<b.length;e++){var g=b[e].data;a.push(g[this.valueField]);f.push(g[this.displayField])}this.addArrayToStore(a,f);this.setValue(a.toString());this.setValue(values);this.fireEvent("select",this,b,d)}}this.collapse()},addArrayToStore:function(a,b){if(Ext.isEmpty(this.getStore().getById(a.toString()))){var c={};c[this.valueField]=a.toString();c[this.displayField]=b.toString();this.getStore().add([new Ext.data.Record(c)])}},onMenuHide:function(){this.focus(false,60);this.menuEvents("un")},onDestroy:function(){Ext.destroy(this.menu,this.wrap);Genapp.form.TreeField.superclass.onDestroy.call(this)}});Ext.reg("treefield",Genapp.form.TreeField);Ext.namespace("Genapp.form");Genapp.form.TaxrefField=Ext.extend(Ext.form.ComboBox,{tpl:'<tpl for="."><div class="x-combo-list-item"><tpl if="!Ext.isEmpty(values.isReference) && values.isReference == 0"><i>{label}</i></tpl><tpl if="!Ext.isEmpty(values.isReference) && values.isReference == 1"><b>{label}</b></tpl><br/><tpl if="!Ext.isEmpty(values.vernacularName) && values.vernacularName != null">({vernacularName})</tpl></div></tpl>',valueField:"code",displayField:"label",emptyText:"Select...",menu:null,pageSize:10,listWidth:300,selectOnFocus:true,store:{xtype:"jsonstore",autoDestroy:true,remoteSort:true,root:"rows",idProperty:"code",totalProperty:"results",fields:[{name:"code",mapping:"code"},{name:"label",mapping:"label"},{name:"vernacularName",mapping:"vernacularName"},{name:"isReference",mapping:"isReference"}],url:Genapp.base_url+"query/ajaxgettaxrefcodes"},baseNodeUrl:Genapp.base_url+"query/ajaxgettaxrefnodes/",initComponent:function(){this.hiddenName=this.name;Genapp.form.TaxrefField.superclass.initComponent.call(this);this.nodeUrl=this.baseNodeUrl;if(!Ext.isEmpty(this.unit)){this.nodeUrl+="unit/"+this.unit+"/"}this.nodeUrl+="depth/1";this.store.setBaseParam("unit",this.unit);var a={};a[this.valueField]=this.value;a[this.displayField]=this.valueLabel;this.getStore().add(new Ext.data.Record(a));this.setValue(this.value);this.on("select",this.onSelect,this)},onTriggerClick:function(){if(this.disabled){return}if(!this.menu){this.menu=new Genapp.form.menu.TaxrefMenu({hideOnClick:false,hideValidationButton:this.hideValidationButton,dataUrl:this.nodeUrl})}this.onFocus();this.menu.show(this.el,"tl-bl?");this.menuEvents("on")},menuEvents:function(a){this.menu[a]("select",this.onSelect,this);this.menu[a]("hide",this.onMenuHide,this);this.menu[a]("show",this.onFocus,this)},onSelect:function(a,b){if(this.fireEvent("beforeselect",this,a,b)!==false){if(!Ext.isEmpty(a)){if(a instanceof Ext.tree.AsyncTreeNode||a instanceof Ext.tree.TreeNode){if(Ext.isEmpty(this.getStore().getById(a.attributes.id))){var c={};c[this.valueField]=a.attributes.id;c[this.displayField]=a.attributes.text;this.getStore().add([new Ext.data.Record(c)])}this.setValue(a.attributes.id)}else{if(a instanceof Ext.data.Record){this.setValue(a.data[this.valueField])}else{alert("Type inconnu")}}}this.collapse();if(this.menu){this.menu.hide()}}},onMenuHide:function(){this.focus(false,60);this.menuEvents("un")},onDestroy:function(){Ext.destroy(this.menu,this.wrap);Genapp.form.TaxrefField.superclass.onDestroy.call(this)}});Ext.reg("taxreffield",Genapp.form.TaxrefField);Ext.namespace("Genapp.form");Genapp.form.TwinNumberField=Ext.extend(Ext.form.TwinTriggerField,{decimalSeparator:".",minText:"The minimum value for this field is {0}",maxText:"The maximum value for this field is {0}",nanText:"{0} is not a valid number",fieldClass:"x-form-field x-form-num-field",allowDecimals:true,decimalPrecision:2,allowNegative:true,minValue:-Number.MAX_VALUE,maxValue:Number.MAX_VALUE,baseChars:"0123456789",trigger1Class:"x-form-clear-trigger",hideTrigger1:true,hideTrigger2:true,initComponent:function(){this.on("change",this.onChange,this);Genapp.form.TwinNumberField.superclass.initComponent.call(this)},onTrigger1Click:function(){this.reset();this.triggers[0].hide()},onChange:function(b){var a=this.getValue();if(a!==""&&a!==null){this.triggers[0].show()}else{this.triggers[0].hide()}},initEvents:function(){var a=this.baseChars+"";if(this.allowDecimals){a+=this.decimalSeparator}if(this.allowNegative){a+="-"}this.maskRe=new RegExp("["+Ext.escapeRe(a)+"]");Ext.form.NumberField.superclass.initEvents.call(this)},validateValue:function(b){if(!Ext.form.NumberField.superclass.validateValue.call(this,b)){return false}if(b.length<1){return true}b=String(b).replace(this.decimalSeparator,".");if(isNaN(b)){this.markInvalid(String.format(this.nanText,b));return false}var a=this.parseValue(b);if(a<this.minValue){this.markInvalid(String.format(this.minText,this.minValue));return false}if(a>this.maxValue){this.markInvalid(String.format(this.maxText,this.maxValue));return false}return true},getValue:function(){return this.fixPrecision(this.parseValue(Ext.form.NumberField.superclass.getValue.call(this)))},setValue:function(a){a=typeof a==="number"?a:parseFloat(String(a).replace(this.decimalSeparator,"."));a=isNaN(a)?"":String(a).replace(".",this.decimalSeparator);if(this.triggers){if(a!==""&&a!==null&&a!==this.minValue&&a!==this.maxValue){this.triggers[0].show()}else{this.triggers[0].hide()}}return Ext.form.NumberField.superclass.setValue.call(this,a)},parseValue:function(a){a=parseFloat(String(a).replace(this.decimalSeparator,"."));return isNaN(a)?"":a},fixPrecision:function(b){var a=isNaN(b);if(!this.allowDecimals||this.decimalPrecision===-1||a||!b){return a?"":b}return parseFloat(parseFloat(b).toFixed(this.decimalPrecision))},beforeBlur:function(){var a=this.parseValue(this.getRawValue());if(a!==""&&a!==null){this.setValue(this.fixPrecision(a))}}});Ext.reg("twinnumberfield",Genapp.form.TwinNumberField);Ext.namespace("Genapp.tree");Genapp.tree.LayerTreePanel=Ext.extend(Ext.tree.TreePanel,{autoScroll:true,rootVisible:false,enableDD:true,title:"",border:false,alertInvalidLayerMove:"Déplacement non autorisé",layerNodeIds:null,map:null,store:null,initComponent:function(){this.store=new GeoExt.data.LayerStore({map:this.map,initDir:GeoExt.data.LayerStore.MAP_TO_STORE});this.layerNodeIds=[];for(var a=0;a<this.rootChildren.length;a++){this.addLoaderToNodeConfig(this.rootChildren[a])}this.root=new Ext.tree.AsyncTreeNode({children:this.rootChildren,leaf:false,expanded:true});this.plugins=this.plugins||[];this.plugins.push({ptype:"gx_treenodecomponent"});this.plugins.push(new Genapp.tree.ContextMenuPlugin({sliderOptions:{aggressive:true,plugins:new GeoExt.LayerOpacitySliderTip()}}));this.on("checkchange",this.toggleChildrenOnParentToggle,this);Genapp.tree.LayerTreePanel.superclass.initComponent.call(this)},filterGroup:function(a,c){var b=a.getLayer().options.nodeGroup;if(!Ext.isEmpty(b)&&b.indexOf(c)!==-1){return true}return false},setLayerIdx:function(d,b,e){if(e<0){e=0}else{if(e>this.map.layers.length){e=this.map.layers.length}}if(b!=e){this.map.layers.splice(b,1);this.map.layers.splice(e,0,d);for(var c=0,a=this.map.layers.length;c<a;c++){this.map.layers[c].setZIndex(c)}}},addLoaderToNodeConfig:function(a){if(!Ext.isEmpty(a.nodeGroup)){a.loader=new GeoExt.tree.LayerLoader({store:this.store,filter:this.filterGroup.createDelegate(this,a.nodeGroup,true),addLayerNode:function(f,c,d){d=d||0;if(this.filter(c)===true){var g=this.createNode({nodeType:"gx_layer",layer:c.getLayer(),layerStore:this.store,checkedGroup:c.getLayer().options.checkedGroup,text:c.getLayer().options.label});var b;g.addListener("beforemove",function(h,m,l,n,k){m.oldIndex=l.indexOf(m)});g.addListener("move",function(h,o,n,p,l,k){if(n==p){b=o.oldIndex-n.indexOf(o);idxDepart=h.map.getLayerIndex(o.layer);if(k){idxArrivee=h.map.getLayerIndex(k.layer)}else{idxArrivee=0}h.setLayerIdx(o.layer,idxDepart,idxArrivee)}else{if(typeof o.recursiveCall==="undefined"||o.recursiveCall==false){o.recursiveCall=true;Ext.MessageBox.alert("Error",Genapp.tree.LayerTreePanel.prototype.alertInvalidLayerMove,function m(r,s,q){n.insertBefore(o,n.item(o.oldIndex));o.recursiveCall=false})}}});f.draggable=false;var e=f.item(d);if(e){f.insertBefore(g,e)}else{f.appendChild(g)}}},listeners:{load:this.setLayerNodeIds,scope:this},scope:this})}},toggleChildrenOnParentToggle:function(c,b){if(c.firstChild==null){return}if(this.map.id==c.firstChild.layerStore.map.id){if(b===true){for(var a=0;a<c.childNodes.length;a++){var d=c.childNodes[a];if(!d.ui.isChecked()){d.ui.toggleCheck(true)}}}else{for(var a=0;a<c.childNodes.length;a++){var d=c.childNodes[a];if(d.ui.isChecked()){d.ui.toggleCheck(false)}}}}},setLayerNodeIds:function(){this.eachLayerChild(function(a){this.layerNodeIds[a.layer.name]=a.id},this)},eachLayerChild:function(d,c,a,e){e=Ext.isEmpty(e)?this.root:e;if(!Ext.isEmpty(e)&&!Ext.isEmpty(e.childNodes)){for(var b=0;b<e.childNodes.length;b++){var f=e.childNodes[b];if(!Ext.isEmpty(f.layer)){if(d.apply(c||f,a||[f])===false){break}}else{if(!f.isLeaf()){this.eachLayerChild(d,c,a,f)}}}}},getNodeByLayerName:function(a){var b=this.layerNodeIds[a];if(Ext.isEmpty(b)){this.setLayerNodeIds()}return this.getNodeById(b)},toggleNodeCheckbox:function(c,b){var a=this.getNodeById(c);a.ui.toggleCheck(b)}});Ext.reg("layertreepanel",Genapp.tree.LayerTreePanel);Ext.namespace("Genapp.tree");Genapp.tree.ContextMenuPlugin=Ext.extend(Ext.util.Observable,{deleteLayerText:"Delete layer",deleteLayerConfirmationText:"Are you sure you wish to remove this layer ?",changeOpacityText:"Change opacity",sliderOptions:{},defaultSliderOptions:{width:200},menu:null,constructor:function(a){Ext.apply(this.initialConfig,Ext.apply({},a));Ext.apply(this,a);Ext.applyIf(this.sliderOptions,this.defaultSliderOptions);this.addEvents("contextmenu");Genapp.tree.ContextMenuPlugin.superclass.constructor.apply(this,arguments)},init:function(a){a.on({contextmenu:this.onContextMenu,scope:this})},onContextMenu:function(c,f){if(!c.layer){return}var g,d=[],b;f.stopEvent();b=c.attributes;if(this.menu){this.menu.destroy()}g=Ext.applyIf({layer:c.layer},this.sliderOptions);d.push({text:this.changeOpacityText,menu:{plain:true,items:[new GeoExt.LayerOpacitySlider(g)]}});if(b.allowDelete){d.push({text:this.deleteLayerText,handler:function(){Ext.MessageBox.confirm(this.deleteLayerText,this.deleteLayerConfirmationText+c.layer.name,function(l){if(l=="yes"){var h=this.layerStore;var e=h.getCount();var m=[];for(var k=0;k<e;k++){m.push(h.getAt(k).get("layer"))}var a=OpenLayers.Util.indexOf(m,this.layer);if(a!=-1){h.remove(h.getAt(a))}}},c)},scope:this})}this.menu=new Ext.menu.Menu({ignoreParentClick:true,defaults:{scope:c.getOwnerTree()},items:d});this.menu.showAt(f.getXY())}});Ext.preg&&Ext.preg("gx_tree_contextmenuplugin",Genapp.tree.ContextMenuPlugin);Ext.namespace("Genapp.map");Genapp.map.LayerSelector=Ext.extend(Ext.Button,{layerSelectorButtonLabel:"Select layer",selectorBox:null,geoPanelId:null,selectedVectorLayer:null,initComponent:function(){Genapp.eventManager.addEvents("selectLayer");this.selectorBox={xtype:"combo",mode:"remote",triggerAction:"all",store:new Ext.data.JsonStore({autoLoad:true,root:"layerNames",fields:[{name:"code",mapping:"code",},{name:"label",mapping:"label"},{name:"url",mapping:"url"},{name:"url_wms",mapping:"url_wms"}],url:Genapp.base_url+"/map/ajaxgetvectorlayers"}),listeners:{select:function(c,b){Genapp.eventManager.fireEvent("selectLayer",b,this.geoPanelId)},scope:this},valueField:"code",displayField:"label"};var a={text:this.layerSelectorButtonLabel,menu:[this.selectorBox]};Ext.apply(this,Ext.apply(this.initialConfig,a));Genapp.eventManager.on("selectLayer",this.layerSelected,this);Genapp.map.LayerSelector.superclass.initComponent.apply(this,arguments)},layerSelected:function(a,b){if(b==this.geoPanelId){this.selectedVectorLayer=a.data.code;this.setText(a.data.label)}},onDestroy:function(){Ext.destroy(this.selectorBox);Genapp.map.LayerSelector.superclass.onDestroy.call(this)}});Ext.reg("layerselector",Genapp.map.LayerSelector);Ext.namespace("Genapp.util");Ext.namespace("Genapp.globalVars");Ext.namespace("Genapp.config");Ext.namespace("Genapp.form");Ext.namespace("Genapp.form.menu");Ext.namespace("Genapp.form.picker");Ext.namespace("Genapp.map");Ext.namespace("Genapp.tree");Genapp.config.historicActivated=true;Genapp.config.localCls="en";Genapp.buildApplication=function(a){Ext.getBody().addClass(Genapp.config.localCls);Ext.QuickTips.init();Ext.apply(Ext.QuickTips.getQuickTip(),{showDelay:250,dismissDelay:0,trackMouse:true});Ext.form.Field.prototype.msgTarget="qtip";Ext.layout.FormLayout.prototype.labelSeparator=" :";Ext.BLANK_IMAGE_URL=Genapp.base_url+"img/s.gif";Ext.Ajax.timeout=30000;Genapp.eventManager=new Ext.util.Observable();Genapp.cardPanel=new Genapp.CardPanel(a);Genapp.hidePinButton=false;if(Genapp.config.historicActivated){Ext.History.init();Ext.History.on("change",function(b){if(b){Genapp.cardPanel.activate(b)}else{}})}};Genapp.util.htmlStringFormat=function(a){if(!Ext.isEmpty(a)&&Ext.isString(a)){a=a.replace(new RegExp("'","g"),"&#39;");a=a.replace(new RegExp('"',"g"),"&#34;");return a}else{return""}};Genapp.util.post=function(c,e){var b=document.createElement("form"),a;b.action=c;b.method="POST";b.style.display="none";for(a in e){var d=document.createElement("textarea");d.name=a;d.value=e[a];b.appendChild(d)}document.body.appendChild(b);b.submit();return b};Ext.override(Ext.layout.FormLayout,{getTemplateArgs:function(c){var b=!c.fieldLabel||c.hideLabel;var a=(typeof c.labelSeparator=="undefined"?this.labelSeparator:c.labelSeparator);if(!c.allowBlank){a='<span style="color: rgb(255, 0, 0); padding-left: 2px;">*</span>'+a}return{id:c.id,label:c.fieldLabel,labelStyle:c.labelStyle||this.labelStyle||"",elementStyle:this.elementStyle||"",labelSeparator:b?"":a,itemCls:(c.itemCls||this.container.itemCls||"")+(c.hideLabel?" x-hide-label":""),clearCls:c.clearCls||"x-form-clear-left"}}});