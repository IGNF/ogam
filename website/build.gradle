// ant.importBuild 'build.xml'

/*
buildscript {
    repositories {
        maven {
            url uri('../repo')
        }
    }
    dependencies {
        classpath group: 'org.swissphpfriends',
                name: 'php-build-plugin',
                version: '0.1-SNAPSHOT'
    }
}

apply plugin: 'php-build'

task test(type: org.swissphpfriends.gradle.task.PhpUnit) {
    path = './test'
    verbose = true
    outputTap = true
}
*/


// Launch PHPDocumentor
task phpdoc(type:Exec, description: 'Launch PHPDoc for documentation generation.') {
  workingDir '.'
  
  if (System.getProperty('os.name').toLowerCase().contains('windows')) {
  	commandLine './vendor/bin/phpdoc.bat'
  } else {
  	commandLine './vendor/bin/phpdoc'
  }
  args "-d", "./htdocs/ogam/application/", "-t", "./hudson/docs/php/", '--template=responsive-twig'
}

// Launch PHPCheckstyle
task phpcheckstyle(type:Exec, description: 'Launch PHPCHeckstyle for static analysis.') {
  workingDir '.'
  
  if (System.getProperty('os.name').toLowerCase().contains('windows')) {
  	commandLine "php" 
  } else {
  	commandLine "php"
  }
  args "./vendor/phpcheckstyle/phpcheckstyle/run.php", "--src", "./htdocs/ogam/application/", "--outdir", "./hudson/checkstyle_result/", "--config", "./config/checkstyle_ogam.cfg.xml", "--format", "xml,html", "--linecount"
}


// Install Composer
task installComposer(type:Exec, description: 'Download and install Composer.') {
  workingDir '.'
  
  if (System.getProperty('os.name').toLowerCase().contains('windows')) {
  	commandLine "php" 
  } else {
  	commandLine "php"
  }
  args "-r", "--src", "readfile('https://getcomposer.org/installer');", "|", "php"
}
