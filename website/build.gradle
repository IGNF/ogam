// Launch PHPDocumentor
task phpdoc(type:Exec, description: 'Launch PHPDoc for documentation generation.') {
  workingDir '.'
  
  if (System.getProperty('os.name').toLowerCase().contains('windows')) {
  	commandLine './vendor/bin/phpdoc.bat'
  } else {
  	commandLine './vendor/bin/phpdoc'
  }
  args "-d", "./htdocs/ogam/application/", "-t", "./hudson/docs/php/", '--template=responsive-twig'
}

// Launch PHPCheckstyle
task phpcheckstyle(type:Exec, description: 'Launch PHPCHeckstyle for static analysis.') {
  workingDir '.'
  commandLine "php" 
  args "./vendor/phpcheckstyle/phpcheckstyle/run.php", "--src", "./htdocs/ogam/application/", "--outdir", "./hudson/checkstyle_result/", "--config", "./config/checkstyle_ogam.cfg.xml", "--format", "xml,html", "--linecount"
}


// Install Composer
task installComposer(type:Exec, description: 'Download and install Composer.') {
  workingDir '.'
  if (System.getProperty('os.name').toLowerCase().contains('windows')) {
  	commandLine "cmd", "/c php -r \"readfile('https://getcomposer.org/installer');\" | php"
  } else {
  	commandLine "bash", "-c", "php -r \"readfile('https://getcomposer.org/installer');\" | php" 
  }
}

// Install Libraries
task installLibraries(type:Exec, description: 'Download and install Librairies needed for the project using Composer.') {
  workingDir '.'
  commandLine "php" 
  args "composer.phar", "install"
} 


// Download PHPUnit
// Using Composer does not work because the versions available are not compatible with Zend Framework 1
task downloadPHPUnit(type: Copy, description: 'Download PHPUnit 3.4.x from GitHub as it is not available from Composer repo.') {
	
	def f = new File('./vendor/phpunit34.zip')
	if (!f.exists()) {
	    new URL('https://github.com/adamlundrigan/PHPUnit-PHAR/archive/feature/phar34.zip').withInputStream{ i -> f.withOutputStream{ it << i }}
	}
		
	// Unzip
	def outputDir = file('./vendor/')
	from zipTree(f)
	into outputDir
}



// Launch PHPUnit
task phpunit(type:Exec, description: 'Launch PHPUnit for unit testing.') {
  workingDir '.'
  if (System.getProperty('os.name').toLowerCase().contains('windows')) {
  	// commandLine "cmd", "/c php -r ./vendor/PHPUnit-PHAR-feature-phar34/phpunit.php"
  	// commandLine './vendor/PHPUnit-PHAR-feature-phar34/phpunit.bat'
  	commandLine "php", "./vendor/PHPUnit-PHAR-feature-phar34/phpunit.php" 
  } else {
  	commandLine './vendor/PHPUnit-PHAR-feature-phar34/phpunit'
  }
  args "--configuration", "./config/phpunit.xml"
}
