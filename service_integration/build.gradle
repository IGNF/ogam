buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.2.3'
    }
}

dependencies {
	compile project(':service_common')
	runtime project(':service_common')
}

apply plugin: 'com.bmuschko.cargo'

// New version : Use cargo to automatically deploy the war
cargo {
    def tomcatHome = project.hasProperty('tomcatHome') ? project.getProperty('tomcatHome') : 'C:/Apache/tomcat-7'
    def applicationName = project.hasProperty('applicationName') ? project.getProperty('applicationName') : 'OGAM'
    
    containerId = 'tomcat7x'
    port = 8080
   
   
    deployable {
        file = file("build/libs/service_integration-${project.version}.war")
        context = "${applicationName}IntegrationService"
    }
    
    remote {
        hostname = 'localhost'
        username = 'admin'
        password = 'admin'
    }
}


// Copy the config files
task deployConfig(description: 'Copy the config files') << {

    def tomcatHome = project.hasProperty('tomcatHome') ? project.getProperty('tomcatHome') : 'C:/Apache/tomcat-7'
    def applicationName = project.hasProperty('applicationName') ? project.getProperty('applicationName') : 'OGAM'
    
	// Copy the config file
	if (!file('${tomcatHome}/conf/Catalina/localhost/${applicationName}IntegrationService.xml').exists()) {
		copy {
	  		from "./config/"
	  		into "${tomcatHome}/conf/Catalina/localhost"
	  		include "${applicationName}IntegrationService.xml"
		}
	}
}



// Old version : Manually build the war file
// Define a new task to deploy the war
task deploy(dependsOn: war, description: 'Deploy the war file to a local Tomcat server.') << {

    def tomcatHome = project.hasProperty('tomcatHome') ? project.getProperty('tomcatHome') : 'C:/Apache/tomcat-7'
    def applicationName = project.hasProperty('applicationName') ? project.getProperty('applicationName') : 'OGAM'
    
	println "Copy from build/libs into ${tomcatHome}/webapps"
	
	delete "${tomcatHome}/webapps/${applicationName}IntegrationService"
	
	// Copy the war file
	copy {
  		from "build/libs"
  		into "${tomcatHome}/webapps"
  		include "service_integration-${project.version}.war"
  		rename ("service_integration-${project.version}.war", "${applicationName}IntegrationService.war")
	}
	
	// Copy the config file
	copy {
  		from "./config/"
  		into "${tomcatHome}/conf/Catalina/localhost"
  		include "${applicationName}IntegrationService.xml"
	}
}

// Import the ANT tasks and rename them
//ant.importBuild('build.xml') { antTargetName ->
//    'ant_' + antTargetName
//}

defaultTasks 'clean', 'check', 'test', 'jacocoTestReport'